-- MySQL dump 10.11
--
-- Host: localhost    Database: wordpress
-- ------------------------------------------------------
-- Server version	5.0.45-Debian_1ubuntu3-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL auto_increment,
  `comment_id` bigint(20) unsigned NOT NULL default '0',
  `meta_key` varchar(255) default NULL,
  `meta_value` longtext,
  PRIMARY KEY  (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
INSERT INTO `wp_commentmeta` VALUES (4,34612,'_wp_trash_meta_status','0'),(3,34571,'_wp_trash_meta_status','0');
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL auto_increment,
  `comment_post_ID` bigint(20) unsigned NOT NULL default '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL default '',
  `comment_author_url` varchar(200) NOT NULL default '',
  `comment_author_IP` varchar(100) NOT NULL default '',
  `comment_date` datetime NOT NULL default '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL default '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL default '0',
  `comment_approved` varchar(20) NOT NULL default '1',
  `comment_agent` varchar(255) NOT NULL default '',
  `comment_type` varchar(20) NOT NULL default '',
  `comment_parent` bigint(20) unsigned NOT NULL default '0',
  `user_id` bigint(20) unsigned NOT NULL default '0',
  PRIMARY KEY  (`comment_ID`),
  KEY `comment_approved` (`comment_approved`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`)
) ENGINE=MyISAM AUTO_INCREMENT=34928 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (3,7,'Amit','a@a.com','','24.228.88.130','2008-03-13 09:59:54','2008-03-13 04:29:54','Hi there,\r\nThis is a very useful tutorial. I searched a lot for making apache work with my tomcat, but couldnt make it work. But after reading this article, it was just a matter of minutes. and finally i got my apache work with tomcat.\r\n\r\nI really appreciate ur writing and wish u good luck. keep writing.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.6) Gecko/20071008 Ubuntu/7.10 (gutsy) Firefox/2.0.0.6','',0,0),(4,5,'Vikas Hazrati','vhazrati@gmail.com','http://vikashazrati.wordpress.com','122.162.116.249','2008-05-23 23:10:30','2008-05-23 17:40:30','Wonderful, thanks for the tip. Had a similar situation and this post would help.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5) Gecko/2008050509 Firefox/3.0b5','',0,0),(9,15,'Vincnet','tjlcccn@gmail.com','http://Cometothesameissue','218.60.195.141','2008-06-23 18:22:27','2008-06-23 12:52:27','I really expect the solution for the Firefox 3. don\'t want to rollback to Firefox 2.',0,'1','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; WPS; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; MAXTHON 2.0)','',0,0),(11,16,'Jim Shingler','ShinglerJim@gmail.com','http://jshingler.blogspot.com','72.92.192.182','2008-07-18 03:26:51','2008-07-17 21:56:51','Thanks, for the post.  I need to do something exactly like this and you posted a solution.\r\n\r\nI am looking forward to giving it a try.\r\n\r\nJim Shingler',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.1) Gecko/2008070206 Firefox/3.0.1','',0,0),(23,12,'Moisés','moisesrs.rs@gmail.com','http://www.byteporbyte.blogspot.com','200.137.65.81','2008-08-06 18:55:29','2008-08-06 13:25:29','Thanks a lot, man!\r\nI\'ve got the same problem and your solution worked!\r\n\r\n[]\'s',0,'1','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.1) Gecko/2008072820 Firefox/3.0.1','',0,0),(30,16,'Hans','hans@hans.de','','89.15.112.245','2008-08-18 11:32:49','2008-08-18 06:02:49','A screenshot would be nice. says sometimes more than a thousand words.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; de; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16','',0,0),(111,18,'Olivier','ocarnal@yahoo.fr','','85.0.105.26','2008-09-12 01:32:43','2008-09-11 20:02:43','Thanks, just what I was looking for...\r\nCheers\r\nOlivier',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; fr; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1','',0,0),(135,15,'kits','edquita@yahoo.com','http://spongeduke.blogspot.com','122.54.53.5','2008-10-09 06:35:37','2008-10-09 01:05:37','i wasn\'t successful making it work in F3, got it working in F2 though :-|',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.30 Safari/525.13','',0,0),(132,7,'AJ','aj@gmail.com','','59.95.177.161','2008-10-05 22:18:57','2008-10-05 16:48:57','I have two websites on the same tomcat and apache. The rule JKMount /* just sends everything to tomcat. How do I configure workers.properties or httpd.conf to power two websites using mod_jk?',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.3) Gecko/2008092510 Ubuntu/8.04 (hardy) Firefox/3.0.3','',0,0),(178,7,'JeyramoXRu','aminaminamino@gmail.com','http://jeyramoxru.com','79.143.177.6','2008-10-19 08:23:50','2008-10-19 02:53:50','Hi sirs ;-)\r\nSomebody can give me url to the XRumer\'s homepage?\r\nOr maybe some info...\r\n\r\nThank you very much!!!\r\n\r\nP.S. Вот уроды...',0,'1','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)','',0,0),(2167,16,'Jason','jharrop@gmail.com','','203.206.209.27','2008-11-24 12:49:35','2008-11-24 07:19:35','This is really nice - thanks.\r\n\r\nTo make the example complete, when the page is first loaded, the #models should be populated for whatever manufacturer happens to be pre-selected.\r\n\r\nUnless the user changes the manufacturer, the list of models will be wrong.',0,'1','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.4) Gecko/2008111318 Ubuntu/8.04 (hardy) Firefox/3.0.4','',0,0),(2437,20,'cheng','crazycheng@gmail.com','','123.113.127.169','2008-11-26 06:07:16','2008-11-26 00:37:16','thanks!',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.0.4) Gecko/2008102920 Firefox/3.0.4','',0,0),(3755,14,'chad','chadmoore@gmail.com','','71.192.155.167','2008-12-07 23:58:19','2008-12-07 18:28:19','Thanks very much!  This has been bugging me all morning!',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.4) Gecko/2008111318 Ubuntu/8.10 (intrepid) Firefox/3.0.4','',0,0),(5631,15,'cicada.tang','cicada.it@gmail.com','','122.234.5.211','2008-12-20 21:15:41','2008-12-20 15:45:41','I don\'t know if you  making it work with firfox 3?',0,'1','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; TheWorld)','',0,0),(10327,7,'Stephen Howe','sdisemi@tin.it','','89.97.102.247','2009-01-08 17:43:29','2009-01-08 12:13:29','Modules are not \"officially\" loaded into apache this way in ubuntu and debian.\r\nThe modules are either compiled or loaded at run-time.\r\nTo see what modules are compiled in, use the command\r\n\r\napache2 -l\r\n\r\nTo load modules at run-time, two lines are added to the apache2.conf file located in the directory /etc/apache2/ in ubuntu.\r\nThese are as follows:-\r\n# Include module configuration:\r\nInclude /etc/apache2/mods-enabled/*.load\r\nInclude /etc/apache2/mods-enabled/*.conf\r\n\r\nAs you can see, apache loads any files ending with .load first and .conf after, in /etc/apache2/mods-enabled/.\r\n\r\nTo make apache 2 load additional mods, you can manually create links from the directory mods-enabled to the directory mods-available for both \"load\" and \"conf\" files of the mod you need to load or you can use the command a2enmod which does it automatically.\r\n\r\nhence, in ubuntu or debian, you should actually add \r\n\r\nLoadModule jk_module /usr/lib/apache2/modules/mod_jk.so\r\n# Where to find workers.properties\r\nJkWorkersFile /etc/apache2/workers.properties\r\n# Where to put jk logs\r\nJkLogFile /tmp/mod_jk.log\r\n# Set the jk log level [debug/error/info]\r\nJkLogLevel info\r\n# Select the log format\r\nJkLogStampFormat \"[%a %b %d %H:%M:%S %Y] \"\r\n# JkOptions indicate to send SSL KEY SIZE,\r\nJkOptions +ForwardKeySize +ForwardURICompat -ForwardDirectories\r\n# JkRequestLogFormat set the request format\r\nJkRequestLogFormat \"%w %V %T\"\r\n\r\nto your jk.conf in /etc/apache2/mods-available/ directory and then check that the load command in jk.load is pointing to the right place\r\ni.e. mod_jk.so in the directory /usr/lib/apache2/modules',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.9.0.5) Gecko/2008121621 Ubuntu/8.04 (hardy) Firefox/3.0.5','',0,0),(11543,15,'Robert Reiz','RReiz@gmx.de','','91.89.106.34','2009-01-13 04:27:51','2009-01-12 22:57:51','dito.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.0.5) Gecko/2008120122 Firefox/3.0.5','',0,0),(12256,15,'Neil','fwneil@gmail.com','','209.190.211.3','2009-01-15 04:47:23','2009-01-14 23:17:23','Newest selenium-server.jar works with FF3.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.5) Gecko/2008121622 Ubuntu/8.10 (intrepid) Firefox/3.0.5','',0,0),(18242,20,'John Martin','Jmartin@transitionaldata.com','','71.83.51.166','2009-01-31 20:01:49','2009-01-31 14:31:49','Can you explain the differences between the two strategies?',0,'1','Mozilla/5.0 (iPhone; U; CPU iPhone OS 2_2 like Mac OS X; en-us) AppleWebKit/525.18.1 (KHTML, like Gecko) Version/3.1.1 Mobile/5G77 Safari/525.20','',0,0),(27065,25,'mohan','maruti.prasad85@gmail.com','','125.17.25.8','2009-02-27 14:18:19','2009-02-27 08:48:19','Excellent blog.\r\nThanks for this. searching for this kind of AVM related web script for the past 6 months. very helpful.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.20) Gecko/20081217 Firefox/2.0.0.20','',0,0),(27067,26,'mohan','maruti.prasad85@gmail.com','','125.17.25.8','2009-02-27 14:25:44','2009-02-27 08:55:44','thanks agian himanshu,',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.20) Gecko/20081217 Firefox/2.0.0.20','',0,0),(32074,7,'Andi','andio@sbg.at','http://andio.net','195.3.81.25','2009-03-26 16:10:27','2009-03-26 10:40:27','Thank you very much. Works within minutes..',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7','',0,0),(33899,33,'bhagwat','bhagwat@intelligrape.com','','122.160.66.142','2009-04-06 20:56:22','2009-04-06 15:26:22','really a powerful method. thanx 4 sharing such valuable info... it will be more helpful if u give more realistic use case to use such a method.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/2009032711 Ubuntu/8.04 (hardy) Firefox/3.0.8','',0,0),(34056,33,'Egon','junk@pbhome.dk','','193.162.89.1','2009-04-08 11:29:18','2009-04-08 05:59:18','Is this a more realistic use case?\r\n\r\n[ \'Java\', \'Groovy\', \'JavaScript\', \'Smalltalk\' ].groupBy { it[0] }\r\n\r\nIt sorts the languages by their first letter:\r\n\r\n[J:[Java, JavaScript], G:[Groovy], S:[Smalltalk]]',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)','',0,0),(34057,33,'Bernard Giusiano','bernard.giusiano@wanadoo.fr','','90.53.190.170','2009-04-08 18:37:45','2009-04-08 13:07:45','// An other example of groupBy :\r\n// Count the number of items and display them for each creator of more than 2 posts in RSS feeds\r\n// Bernard Giusiano - 08/04/09\r\nLocale.setDefault Locale.ENGLISH  // if your computer don\'t speak english\r\nrssFeed = \"http://feeds2.feedburner.com/groovyblogs\".toURL().text  // my prefered Groovy RSS\r\nrssXML =  new XmlSlurper().parseText(rssFeed) // get data\r\n// transform rssXML into a table (list of maps)\r\nrssTable = rssXML.channel.item.inject([]) { allItems, eachItem -&gt;\r\n    allItems &lt; \r\n        record += [(element.name()):(element.toString())]\r\n    }\r\n}\r\n// group by creator\r\ngroupedByCreator = rssTable.groupBy { it.creator }\r\n// select creators who have posted more than two times\r\nmoreThanTwo = groupedByCreator.findAll { group -&gt; group.value.size() &gt; 2 }\r\n// display what you want from each group\r\nmoreThanTwo.each { group -&gt;\r\n    println group.key.padRight(70,\'.\') + group.value.size() + \' items\'\r\n    group.value.each { post -&gt;\r\n        println \"    ${Date.parse(\'EEE, d MMM yyyy HH:mm:ss Z\',post.pubDate).format(\'dd/MM/yy\')} : ${post.title} (${post.link})\"\r\n    }\r\n}\r\nreturn null // to stop display of big result in GroovyConsole',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; fr; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8','',0,0),(34058,34,'florin','florin@bytenotes.com','http://67contractors.com','68.118.114.78','2009-04-08 19:20:30','2009-04-08 13:50:30','I\'ve just picked up groovy and I am impressed. I\'m waiting for my Groovy Recipes book to arrive any moment now. \r\n\r\nI\'ve started playing around groovy within Apache Click framework and I\'m amazed how cool web development can be.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)','',0,0),(34059,33,'Alexander Malfait','bosmeeuw@gmail.com','http://bosmeeuw.wordpress.com','81.164.88.64','2009-04-12 03:23:58','2009-04-11 21:53:58','Maybe a more use case as requested above:\r\n\r\nMap invoicesPerClient = invoices.groupBy{ it.client }\r\n\r\ninvoicesPerClient.each { client, invoices -&gt;\r\n   println client.name + \" has \"  + invoices.length + \" invoices\"\r\n}',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 FirePHP/0.2.4','',0,0),(34062,29,'Craig','craigbricker@gmail.com','','96.234.159.11','2009-04-14 20:38:58','2009-04-14 15:08:58','Hi Aman, \r\n\r\nGreat post, very informative.  One thing I found to make this less tedious is to have the urlmappings defined as \r\n\r\n\"/$controller/$action/${id}.html\"\r\n{}\r\n\"/$controller/${action}.html\"\r\n{}\r\n\r\nThat way you don\'t need to pass any suffix in the g:link and g:form tags.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8','',0,0),(34063,33,'Matt Passell','mpassell@gmail.com','http://blog.grovehillsoftware.com/','209.6.221.100','2009-04-14 22:53:43','2009-04-14 17:23:43','Thanks for the tip! There are a lot of great methods added to Collection by Groovy.\r\n\r\nI recently blogged about the min() and max() methods (http://blog.grovehillsoftware.com/2009/04/succinctly-groovy.html)\r\n\r\nFor example, if you want to find the most recently modified file in a directory (dir), this is all you need:\r\n\r\ndef newestFile =\r\n  dir.listFiles().max{ it.lastModified() }',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)','',0,0),(34068,33,'Tai Siew Joon','sjtai@ltgroup.com.my','http://sjtai.blogspot.com','124.13.84.82','2009-04-15 21:44:46','2009-04-15 16:14:46','Thanks for the tips!',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/2009032711 Ubuntu/8.10 (intrepid) Firefox/3.0.8','',0,0),(34070,43,'Paul King','paulk@asert.com.au','','203.0.223.243','2009-04-16 08:44:08','2009-04-16 03:14:08','Groovy 1.6.1 offers some additional possibilities:\r\n\r\ndef m = [a:1, b:3, c:2]\r\nprintln [:] + m.entrySet().sort{it.value}.reverse()\r\nprintln [:].putAll(m.entrySet().sort{it.key}.reverse())',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009030422 Ubuntu/8.10 (intrepid) Firefox/3.0.7','',0,0),(34072,43,'Tim Yates','tim.yates@gmail.com','','130.88.233.248','2009-04-16 16:22:55','2009-04-16 10:52:55','Can\'t you just do:\r\n\r\npeople.sort { a, b -&gt; b.value.dateOfBirth  a.value.dateOfBirth }\r\n\r\nOr am I missing the point?',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.7) Gecko/2009021906 Firefox/3.0.7','',0,0),(34073,43,'Tim Yates','tim.yates@gmail.com','','130.88.233.248','2009-04-16 16:23:41','2009-04-16 10:53:41','*sigh*  missed the operators...\r\n\r\npeople.sort { a, b -&gt; b.value.dateOfBirth &lt;=&gt; a.value.dateOfBirth }',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.0.7) Gecko/2009021906 Firefox/3.0.7','',0,0),(34076,46,'Dumping a Mysql Database | IntelliGrape Blog','','http://blog.intelligrape.com/?p=45','64.22.71.95','2009-04-16 18:27:32','2009-04-16 12:57:32','[...] we are back to prompt. We can check the dumpfile by going to the location where it was saved. In the next post I will describe how to use a dumpfile to create a new [...]',0,'1','Incutio XML-RPC -- WordPress/2.3.3','pingback',0,0),(34077,43,'Aman Aggarwal','aman@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2009-04-16 18:38:50','2009-04-16 13:08:50','Yes it works like charm.. Didn\'t know that.. \r\n\r\nThanks',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/2009032711 Ubuntu/8.04 (hardy) Firefox/3.0.8','',0,8),(34079,42,'Alessio Spadaro','alessios@gmail.com','','88.149.180.207','2009-04-17 14:02:25','2009-04-17 08:32:25','Isn\'t it a little dangerous? I.e. what if i call the controller specifying potentially dangerous Class/method combinations?\r\nFurthermore, how\'s the client able to determine the content type without specifying it?\r\n\r\nRegards,\r\nAlessio',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8 (.NET CLR 3.5.30729)','',0,0),(34084,42,'Dushan Hanuska','dushan.hanuska@gmail.com','http://hanuska.blogspot.com','115.64.10.139','2009-04-18 19:52:18','2009-04-18 14:22:18','Thanks for posting this, Amit! I found it very useful.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8','',0,0),(34085,42,'bald','destrozao@gmail.com','','89.129.34.210','2009-04-18 20:08:45','2009-04-18 14:38:45','Thanks Amit for showing how easy and fast is implementing (prototyping) file upload in Grails.\r\n\r\nWould be better in a real scenario to use a general domain class such as document, file or image? You can also save other useful information for categorizing (size, mime, etc)\r\nAlso this type of controller action seems quite risky.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; es-ES; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8','',0,0),(34107,47,'Uday','uday@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2009-04-22 14:25:22','2009-04-22 08:55:22','I was trying the method explained by Marc Parmer here http://www.anyware.co.uk/2005/2009/01/08/functional-testing-in-grails-just-got-a-bit-sexier/ but it didn\'t work out for me.\r\nBut the method expained by you really works \r\n\r\nThanks Chandan',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/2009032711 Ubuntu/8.04 (hardy) Firefox/3.0.8','',0,11),(34121,42,'amit','amit@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2009-04-24 14:31:12','2009-04-24 09:01:12','Thanks Alessio & bald for bringing out the loopholes in the code. If you could find the solution then please share.\r\nAnd yes we need to provide the content type, which I have updated in the blog now.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/2009032711 Ubuntu/8.04 (hardy) Firefox/3.0.8','',0,7),(34124,7,'Gus','uuugb@hotmail.com','http://none','84.73.75.141','2009-04-24 21:49:40','2009-04-24 16:19:40','I read with great interest your document. I been trying to make the connection for two days. Read many articles and documentation. I try you advice to the letter. Still it does not work for me. I\'m Using Ubuntu Server and Tomcat v6. I do not know what else to do. The module is there, and working fine, Apache, and Tomcat are also working fine (but not together) what can I do to check where is the problem? Any suggestions?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.9) Gecko/2009040821 Firefox/3.0.9','',0,0),(34126,7,'Sam','sam.bergenstrahle@gmail.com','','85.229.247.71','2009-04-25 01:29:19','2009-04-24 19:59:19','Thanks much! Worked like a charm under Ubuntu. \r\n\r\nOne change I made, for ubuntu concistency\'s sake, was to move the line\r\n<b>LoadModule jk_module /usr/lib/apache2/modules/mod_jk.so</b>\r\ninto <b>apache2/mods-available/jk.load</b>\r\n\r\nNext step for me is to tweak this into serving two tomcat instances hosting two appplications I want to keep in separate JVMs, as well as serve some static pages straight from apache without going through tomcat. Should be easy enough after this nicely done quick-start.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/2009041508 Gentoo Firefox/3.0.8','',0,0),(34182,45,'SQL Tutorials','admin@sqltutorials.net','http://www.sqltutorials.net/','75.74.76.88','2009-05-01 07:29:30','2009-05-01 01:59:30','Does anyone know if there is another language or set of commands beside SQL for talking with databases? \r\n\r\nI\'m working on a project and am doing some research thanks',0,'1','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30618; InfoPath.2)','',0,0),(34358,49,'Musings of a SpringOne 2009 Attendee – Day 2 &raquo; Source Allies Blog','','http://blogs.sourceallies.com/2009/10/musings-of-a-springone-2009-attendee-%e2%80%93-day-2/','67.224.70.98','2009-10-22 09:04:43','2009-10-22 03:34:43','[...] mentioned the Command Object and treating the interaction with the data store as different from the interaction with the web. We [...]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/2.8.4','pingback',0,0),(34333,61,'Ashish','ashishparkhi@yahoo.com','','59.160.126.98','2009-10-09 17:34:18','2009-10-09 12:04:18','Thank you very much for the step by step guide. \r\n\r\nI faced two issues \r\n1) If I pass the root value as \"e:/\". In the controller the value was coming as \"e%3A/\"\r\n2) When I clicked on any folder, the \"dir\" param was being passed as null.\r\n\r\nAfter removing the \".match( /.*\\// )\" based on S Vivek Krishna inupt and after removing escape, it started sending valid values.\r\n\r\nAny Idea?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)','',0,0),(34332,61,'Julien','julienferraro@hotmail.com','','81.80.56.131','2009-10-08 18:52:42','2009-10-08 13:22:42','Hi, \r\nFirst, thank you so much, you save my day(s...) !\r\n\r\nIt works great on php too, but I have a small problem :\r\n- only on internet explorer 6 (it just works fine on firefox)\r\n- with simples quotes on file/folder \'s name\r\n\r\nIf it was a encoding/escaping problem, it will don\'t work on firefox, right ?\r\n\r\nDoes the problem comes from the function \"YourFunctionToProcessThisFilePath(file)\" which is called before \"$(document).ready(function() {\" ?\r\n\r\nAnd, It may sound stupid, but why this function is not encapsulated in .ready function ? I try to do so, but it didn\'t work.\r\n\r\nAny idea ? Any help is very appreciate. Thanks.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729) FirePHP/0.3','',0,0),(34390,290,'Sakuraba','saku@raba.jp','','141.52.232.84','2009-11-05 19:36:53','2009-11-05 14:06:53','Running integration tests against an in-memory database will definetly get you in trouble. Some exceptions only happen on a specific database server and if you only test against e.g. HSQLDB you are setting yourself up for errors that are going to be recognized very very late in the dev-cycle.\r\n\r\n\r\nManually dropping schemas is not an option. This needs to be automated. Let the tests agree on a shared dataset and use DBUnit to fill/empty the database before/after each TestSuite.',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; de-de) AppleWebKit/531.9 (KHTML, like Gecko) Version/4.0.3 Safari/531.9','',0,0),(34389,290,'amit','amit@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2009-11-05 09:53:47','2009-11-05 04:23:47','Thanks a lot Kimble. I didn\'t think about it that way. I have updated the blog.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.15) Gecko/2009102814 Ubuntu/8.04 (hardy) Firefox/3.0.15','',0,7),(34387,290,'Kimble','kimab@stud.hist.no','','195.1.79.94','2009-11-05 03:29:16','2009-11-04 21:59:16','Running your tests against an in-memory database would relieve you of dropping / creating your database every time you\'ve changed the database schema. At least as long as you don\'t relay on any vendor specific functionality.',0,'1','Mozilla/5.0 (X11; U; Linux x86_64; nb-NO; rv:1.9.1.4) Gecko/20091028 Ubuntu/9.10 (karmic) Firefox/3.5.4','',0,0),(34356,16,'Tony','limtcl@gmail.com','','128.54.80.33','2009-10-22 04:36:07','2009-10-21 23:06:07','how would you implement a 3 step chained select?\r\n\r\nThanks!',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)','',0,0),(34372,16,'t','t@yahoo.com','','41.189.8.71','2009-10-28 01:29:07','2009-10-27 19:59:07','Lovely utorial',0,'1','Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; GTB6;  Embedded Web Browser from: http://bsalsa.com/; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.5.21022; InfoPath.2; .NET CLR 3.5.30729; .NET CLR 3.0.30618; FDM; yie8)','',0,0),(34442,136,'Ashish','ashishgupta001@gmail.com','','122.167.247.50','2010-01-18 18:02:52','2010-01-18 12:32:52','Thanks a lot for posting this wonderful article. \r\nWonder why such criticla information are not readily available on the official site or by the authors/creators etc.\r\n\r\nOne has to struggle to unearth such critical details.\r\n\r\nThanks again Vivek\r\n\r\nAshish',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.8) Gecko/2009032609 Firefox/3.0.8','',0,0),(34264,162,'Luis Arias','luis.arias@pilango.com','http://www.pilango.com','81.53.218.198','2009-08-19 19:38:40','2009-08-19 14:08:40','Wow thanks for posting this !  (Thanks G. Laforge for pointing this out). I will be fixing this and updating the plugin ASAP.\r\n\r\nLuis',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.2) Gecko/20090803 Ubuntu/9.04 (jaunty) Shiretoko/3.5.2','',0,0),(34446,15,'Priya','chaithra@robosoftin.com','','210.212.195.98','2010-02-05 14:10:14','2010-02-05 08:40:14','Hi Friend,\r\nWhile executing Selenium RC in Windows XP, system, i got the below exception. Please let me know how to resolve this problem?\r\n\r\njava.lang.NullPointerException: sessionId should not be null; has this session been started yet?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.15) Gecko/2009101601 Firefox/3.0.15','',0,0),(34269,162,'amit','amit@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2009-08-21 11:55:54','2009-08-21 06:25:54','Thanks Luis! \r\n\r\nI am looking forward for the same. I will feel honored, if I can also contribute in your efforts to make this wordpress plugin more useful.\r\n\r\nRegards',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.13) Gecko/2009080316 Ubuntu/8.04 (hardy) Firefox/3.0.13','',0,7),(34409,49,'Houria','elizabethwcamphor@yahoo.co.uk','http://gay.mon-sexyshop.com/','88.191.64.91','2009-11-30 00:50:58','2009-11-29 19:20:58','Thanks for sharing,  see you then. Are there any forums that you recommend I join ?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3','',0,0),(34445,15,'King Shooter','sumith.kv@robosoftin.com','','210.212.195.98','2010-02-05 14:07:53','2010-02-05 08:37:53','Hi Friend,\r\ni got the same problem in Windows system. What should i do to solve it???',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.15) Gecko/2009101601 Firefox/3.0.15','',0,0),(34258,61,'Srini','srinivasa_kadiyala@cable.comcast.com','','68.87.42.110','2009-08-11 19:04:45','2009-08-11 13:34:45','Hi\r\n\r\nThis is very interesting. I am trying to use this for a Menu Tree that fetches the menus from Oracle DB.\r\n\r\nIt is fetching the Menus. After that When I click on a Menu, it is repopulating the same Menus recursively.\r\n\r\nAppreciate help.\r\n\r\nThanks',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.0 (KHTML, like Gecko) Chrome/3.0.195.6 Safari/532.0','',0,0),(34280,162,'Amit Jain','amit@intelligrape.com','','122.160.66.142','2009-08-28 11:41:27','2009-08-28 06:11:27','Thanks you, Luis. much appreciated!',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.13) Gecko/2009080316 Ubuntu/8.04 (hardy) Firefox/3.0.13','',0,0),(34395,49,'Daxon','allandx14@hotmail.com','','93.107.191.195','2009-11-08 02:44:54','2009-11-07 21:14:54','This is amazing!\r\nGreat post',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3','',0,0),(34290,227,'sandra742','sandra742@gmail.com','http://google.com/335','93.116.217.181','2009-09-09 20:09:34','2009-09-09 14:39:34','Hi! I was surfing and found your blog post... nice! I love your blog.  :) Cheers! Sandra. R.',0,'1','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FunWebProducts; .NET CLR 1.0.3705; .NET CLR 2.0.50727; MSN 6.1; MSNbMSFT; MSNmen-us; MSNc00; v5m)','',0,0),(34292,236,'Lee Butts','leebutts@gmail.com','http://leebutts.com','203.217.12.173','2009-09-10 05:35:17','2009-09-10 00:05:17','Hi,\r\n\r\nyour code above is clearing the Hibernate session after every Person is created, shouldn\'t it be inside the if(batch.size()&gt;1000)... block?\r\n\r\ncheers\r\n\r\nLee',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)','',0,0),(34265,162,'Luis Arias','luis.arias@pilango.com','http://www.pilango.com','81.53.218.198','2009-08-20 13:12:08','2009-08-20 07:42:08','I just posted a JIRA issue on this here http://jira.codehaus.org/browse/GRAILSPLUGINS-1428.  Unfortunately the WP xml rpc interface is not designed to accept filtering on a posts status, so effectively your logic will have to be implemented in the plugin.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.2) Gecko/20090803 Ubuntu/9.04 (jaunty) Shiretoko/3.5.2','',0,0),(34226,61,'Zashkaser','zashkaser@mail.ru','http://allzoom.ru.ru','93.185.199.117','2009-08-05 22:22:28','2009-08-05 16:52:28','Great post Jon! I have been following the #p2 effort since you started it, and although I have understood its purpose this post does a really great job solidifying the full rationale.',0,'1','Mozilla/3.0 (x86 [en] Windows NT 5.1; Sun)','',0,0),(34273,199,'rzezeski','rzezeski@gmail.com','','216.230.116.162','2009-08-21 20:45:53','2009-08-21 15:15:53','I recently did something similar in an app I\'m working on.  At first I used springcache (and it worked with 1.1.1 for me, but it doesn\'t seem to play well with acegi plugin) but what I didn\'t like is that I only had the option to either add to the cache or flush it.\r\n\r\nIn my scenario I wanted a Quartz job to kick off immediately, execute a \"long running\" query, and then cache those results.  This way the users never have to take the latency hit of the query.  Then the Quartz job runs every hour, runs the query again, and then sets the same key, which should happen as an atomic operation.  If I would have used springcache I would have first flushed and then cached, but there would be a small window in between where the user could request the data and would take the full hit of the query.\r\n\r\nI ended up hooking into the already included ehcache provider.  I just created a ehcache.xml and place it in my grails-app/conf.\r\n\r\nTo my point, I\'m curious as to what caching provider you used and what your getRecentExcerptedPosts method looks like.',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; en-us) AppleWebKit/531.9 (KHTML, like Gecko) Version/4.0.3 Safari/531.9','',0,0),(34275,199,'amit','amit@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2009-08-22 10:57:05','2009-08-22 05:27:05','Hi Rzezeski! \r\nI didn\'t have to use any cache provider, to make use of a cron job. As this is not related to caching but we are making it work like cache provider for us. \r\nFor definition of getRecentExcerptedPosts, you can refer to another blog at http://www.intelligrape.com/blog/?p=162#comments',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.13) Gecko/2009080316 Ubuntu/8.04 (hardy) Firefox/3.0.13','',0,7),(34276,162,'Luis Arias','luis.arias@pilango.com','http://www.pilango.com','82.232.48.241','2009-08-23 14:05:40','2009-08-23 08:35:40','Hi Amit,\r\n\r\nI just released version 0.1.1 of the plugin which should work for you without any changes to your code.   I finally didn\'t use your workaround as is since I wanted to also take the opportunity to provide caching for recent posts.  Please let me know if this works for you.\r\n\r\nIt would be great to have your help in making the plugin better.  I have actually just started using it myself in app, so its bound to need more and better features !!\r\n\r\nLuis',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.2) Gecko/20090803 Ubuntu/9.04 (jaunty) Shiretoko/3.5.2','',0,0),(34213,16,'sr','sawanruparel@gmail.com','http://www.techierich.com','122.167.92.56','2009-05-08 00:13:50','2009-05-07 18:43:50','GSP or g tags are used to embed jquery or make forms say i donot want to use GSP completely, like completely coded in HTML, CSS and Javascript, call through http request from javascript to get the resource in json and interpret and display that. \r\n\r\nWill this sort of architecture work?\r\n\r\nRegards,\r\nsr',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10 (.NET CLR 3.5.30729)','',0,0),(34214,27,'sr','sawanruparel@gmail.com','http://www.techierich.com','122.167.92.56','2009-05-08 00:20:42','2009-05-07 18:50:42','thanks for your example, here we have written the view in GSP. Is it possible that we donot use any GSP tags and build the view in html, css and javascript and have *.html files on grails server and ask server to redirect them, if yes, what changes will be required in UrlMappings.groovy file?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10 (.NET CLR 3.5.30729)','',0,0),(34270,61,'S Vivek Krishna','vivek@intelligrape.com','http://www.intelligrape.com','122.160.66.142','2009-08-21 16:20:19','2009-08-21 10:50:19','Hey Srini,\r\n\r\nThis is something that we missed in the blog. We had to slightly modify the jqueryFileTree.js file to get this working and avoid the recursion.\r\n\r\nTry changing the line number 72:\"showTree( $(this).parent(), escape($(this).attr(\'rel\').match( /.*\\// )) );\" \r\n\r\nwith this.\r\n\r\n\"showTree( $(this).parent(), escape($(this).attr(\'rel\'));\" \r\n\r\nHope this helps\r\n\r\nRegards',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.13) Gecko/2009080315 Ubuntu/9.04 (jaunty) Firefox/3.0.13','',0,0),(34271,136,'Shashi','shashikant.b2@gmail.com','','202.45.10.20','2009-08-21 17:38:10','2009-08-21 12:08:10','thanks for the nice article.\r\nIt saved me a lot of work of passing the whole session object to service classes from controllers.',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/530.19.2 (KHTML, like Gecko) Version/4.0.2 Safari/530.19.1','',0,0),(34288,43,'Paul','blundell.nottheloginiwanted@gmail.com','','212.49.213.148','2009-09-08 20:32:00','2009-09-08 15:02:00','Thanks Paul King \r\n\"[:].sort{it.value}.reverse()\"\r\n\r\nis what I was looking for',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/530.5 (KHTML, like Gecko) Chrome/2.0.172.43 Safari/530.5','',0,0),(34305,236,'imran','imran@intelligrape.com','http://www.intelligrape.com','122.160.66.142','2009-09-14 13:31:02','2009-09-14 08:01:02','Absolutely right..thanks for pointing out the mistake. I \'ve updated the blog. \r\ncheers Imran',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14','',0,6),(34451,395,'Amit Jain','amit@intelligrape.com','','122.160.66.142','2010-02-25 17:31:11','2010-02-25 12:01:11','Thanks for sharing. If you would uncheck \"Use report direcorty to compile\", then those temp files(.java) won\'t get copied to your working directory but to bin directory of IReport.\r\n\r\nRegards',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.18) Gecko/2010021502 Ubuntu/8.10 (intrepid) Firefox/3.0.18','',0,0),(34452,136,'Vivek Krishna','vivek@intelligrape.com','http://www.IntelliGrape.com','122.162.55.123','2010-02-25 21:34:25','2010-02-25 16:04:25','Hi Ashish,\r\n\r\nGlad to know that the post helped. :)\r\n\r\nThis is just one of the workarounds. It is not ideal to be accessing session information inside the service as it binds the service to the Web layer very tightly, which means, the service is \"servicing\" HttpRequests only.\r\nIf that constraint is not a problem for the application, then there is no harm in using this technique.\r\n\r\n@ Shashi : Glad to know that this helped. :)',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.9 (KHTML, like Gecko) Chrome/5.0.307.9 Safari/532.9','',0,10),(34454,377,'Lee Butts','leebutts@gmail.com','http://leebutts.com','119.12.91.181','2010-02-26 13:26:12','2010-02-26 07:56:12','Hi,\r\n\r\nyour issue is likely due to tag calls returning StreamCharBuffer instead of String like they did previously. Did you try adding .toString() on the end of the call to createLink?\r\n\r\ncheers\r\n\r\nLee',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/532.5 (KHTML, like Gecko) Chrome/4.0.249.89 Safari/532.5','',0,0),(34488,44,'Vishal','vishal@intelligrape.com','','122.160.66.142','2010-03-13 17:10:46','2010-03-13 11:40:46','Hey....\r\nnice blog....\r\ntook me out of a serious error i was doing...',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.18) Gecko/2010021501 Ubuntu/9.04 (jaunty) Firefox/3.0.18','',0,0),(34524,472,'Gaurav','gaurav@intelligrape.com','','122.163.69.193','2010-03-18 23:49:47','2010-03-18 18:19:47','Such an elegant way to handle ajax errors. Thanks for sharing.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.18) Gecko/2010021501 Ubuntu/9.04 (jaunty) Firefox/3.0.18','',0,0),(34465,424,'Uday','uday@intelligrape.com','','122.163.39.162','2010-03-04 12:11:01','2010-03-04 06:41:01','What a nice and clean way to do the most basic requirement.Well Done',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.18) Gecko/2010021501 Ubuntu/9.04 (jaunty) Firefox/3.0.18','',0,0),(34466,335,'Programmatically logging in user in jsecurity plugin &laquo; IntelliGrape Blog','','http://www.intelligrape.com/blog/?p=429','127.0.0.1','2010-03-04 13:08:25','2010-03-04 07:38:25','[...] we have to run code on bootstrap some of which requires a user to be logged in. I found a blog http://www.intelligrape.com/blog/?p=335 (thanks to Amit)regarding this topic but it was using metaprogramming to override the normal [...]',0,'1','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34468,424,'Gaurav','gaurav@intelligrape.com','','122.160.66.142','2010-03-04 19:08:59','2010-03-04 13:38:59','Helped me in implementing the redirect functionality for ajax calls in case of session timeout. Thanks.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.18) Gecko/2010021501 Ubuntu/9.04 (jaunty) Firefox/3.0.18','',0,0),(34469,61,'Lee Birrell','Bushway@gmail.com','http://watchgreenzone.com','173.208.78.36','2010-03-05 07:10:51','2010-03-05 01:40:51','Hey, I found this article while searching for help with JavaScript. I\'ve recently changed browsers from Opera to Microsoft Internet Explorer 5. After the change I seem to have a problem with loading JavaScript. Every time I browse site that needs Javascript, my computer freezes and I get a \"runtime error javascript.JSException: Unknown name\". I cannot seem to find out how to fix it. Any help is greatly appreciated! Thanks',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3','',0,0),(34916,714,'Rex Barge','Cadorette393@gmail.com','http://www.internetmodeling.com/2538','210.89.69.53','2010-05-30 06:28:05','2010-05-30 00:58:05','Great news! Become an agent for Inernet Modeling, and make money recruiting models from your visitors. Easily earn 1,000 dollars per week! <a href=\"http://www.internetmodeling.com/2538/become_an_agent.htm\" rel=\"nofollow\">http://www.internetmodeling.com/become_an_agent.htm</a>',0,'spam','Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)','',0,0),(34926,663,'Lucia Kim','wimwlnqvht@yahoo.com','http://alexeieffcruellest.blogspot.com/2010/03/thoroughness-enjoyment-alexeieff-video.html','203.198.126.43','2010-05-31 20:29:45','2010-05-31 14:59:45','Haha I\'m actually the only comment to this awesome read?!?',0,'spam','Mozilla/3.0 (compatible; WebCapture 2.0; Auto; Windows)','',0,0),(34925,743,'replica handbags 1 reviews','flyfox2100@yahoo.com','http://www.replicahandbags888.com','203.127.190.100','2010-05-31 19:34:13','2010-05-31 14:04:13','when i learning and i just google blog,blog is a good place to learning,i am glad to found your blog',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 8.50','',0,0),(34918,643,'am i pregnant quizzes','Lunney@iampregnantz.com','http://www.amipregnantquizzes.com','130.95.128.51','2010-05-30 22:33:41','2010-05-30 17:03:41','This blog has so much good information in it that i could spend all week reading it.',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)','',0,0),(34917,633,'hnnchn','whgdsf@vefbif.com','http://yhlimyiikidc.com/','212.142.138.129','2010-05-30 22:27:31','2010-05-30 16:57:31','LSnyNU  <a href=\"http://hculbyviekmc.com/\" rel=\"nofollow\">hculbyviekmc</a>, [url=http://ievvhljkxdxq.com/]ievvhljkxdxq[/url], [link=http://lysylwotcooq.com/]lysylwotcooq[/link], http://xqqjomapvtdl.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34923,778,'mwnjcpy','iixdjs@yqinkj.com','http://ljqgbfzeolfs.com/','93.190.139.15','2010-05-31 10:52:14','2010-05-31 05:22:14','VEn2se  <a href=\"http://ojkdmdyzambx.com/\" rel=\"nofollow\">ojkdmdyzambx</a>, [url=http://dluoqjeqfxww.com/]dluoqjeqfxww[/url], [link=http://wrlfiiiyhhbs.com/]wrlfiiiyhhbs[/link], http://edxquiroaroj.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34922,743,'gpooph','dezdku@gnnqud.com','http://pinymmybbydo.com/','67.211.112.122','2010-05-31 09:26:26','2010-05-31 03:56:26','fVvVht  <a href=\"http://zghjpgorsrfv.com/\" rel=\"nofollow\">zghjpgorsrfv</a>, [url=http://zazdycmcahkl.com/]zazdycmcahkl[/url], [link=http://dutkkhamupif.com/]dutkkhamupif[/link], http://jitewlkjnkeb.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34921,778,'klttmcvd','vqnoqn@yfapyv.com','http://ovchgphvimic.com/','93.190.139.15','2010-05-31 09:16:07','2010-05-31 03:46:07','kJ007Z  <a href=\"http://gmrykamfgofg.com/\" rel=\"nofollow\">gmrykamfgofg</a>, [url=http://xvwcsmhjdzoe.com/]xvwcsmhjdzoe[/url], [link=http://ssrlhyrzbjbh.com/]ssrlhyrzbjbh[/link], http://kvdgmggdyirs.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34919,778,'atfspxdueo','xaehdm@shkkam.com','http://wqpeldoehovm.com/','93.190.139.15','2010-05-31 06:14:25','2010-05-31 00:44:25','gQHXdM  <a href=\"http://otajvidunojm.com/\" rel=\"nofollow\">otajvidunojm</a>, [url=http://khjusnfnszbv.com/]khjusnfnszbv[/url], [link=http://guuduyeekoec.com/]guuduyeekoec[/link], http://gpweezilwdlv.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34920,743,'Andrew Pelt','Hanken2@gmail.com','http://www.crystalspace3d.org/main/User_talk:Baldxcurz','68.68.107.64','2010-05-31 07:06:25','2010-05-31 01:36:25','Excellent read, I just passed this onto a colleague who was doing a little investigation on that. And he in fact bought me lunch because I found it for him.... smile.. So let me rephrase that: Thanks for lunch!But yeah Thank you for taking the time to discuss this, I feel strongly about it and love learning more on this topic. If possible, as you gain expertise, would you mind updating your blog with more information? It is extremely helpful for me.',0,'spam','Mozilla/5.0 (X11; U; Linux i686; it-IT; rv:1.9.0.2) Gecko/2008092313 Ubuntu/9.25 (jaunty) Firefox/3.8','',0,0),(34924,778,'jfrrdcgd','xxokax@rugjmw.com','http://irucmisrhhmy.com/','93.190.139.15','2010-05-31 17:12:56','2010-05-31 11:42:56','TnqjS1  <a href=\"http://nffthmvophcp.com/\" rel=\"nofollow\">nffthmvophcp</a>, [url=http://zoztgvggocef.com/]zoztgvggocef[/url], [link=http://akubxfqjtopo.com/]akubxfqjtopo[/link], http://tbirvujpafrs.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34927,743,'negotiating pay','AmeliaVilla@ymail.com','http://www.howtoaskforaraise.org/negotiating-pay.php','89.135.53.161','2010-06-01 10:29:22','2010-06-01 04:59:22','This blog was advised to me by a friend. I have to say, browsing this was time well spent. I will tell more friends about it as well.',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)','',0,0),(34859,663,'cna training','chased@yea.com','http://www.cna-trainingclass.com/','173.233.65.154','2010-05-17 11:14:40','2010-05-17 05:44:40','What a great resource!',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; America Online Browser 1.1; rev1.2; Windows NT 5.1; SV1; .NET CLR 1.1.4322)','',0,0),(34860,633,'Christian Louboutin Shoes','uneloslesesa@gawab.com','http://www.clshoescn.com','218.6.8.86','2010-05-17 11:23:12','2010-05-17 05:53:12','Great article Thank \r\n\r\nyou so much!',0,'spam','Mozilla/4.0 (compatible- MSIE 6.0- Windows NT 5.1- SV1- .NET CLR 1.1.4322','',0,0),(34861,743,'Eloy Husk','Suchla@ipadhype.net','http://ipadhype.net','209.107.204.13','2010-05-17 12:09:01','2010-05-17 06:39:01','Is it me or did this article make you want to buy an iPad?',0,'spam','Opera/9.64(Windows NT 5.1; U; en) Presto/2.1.1','',0,0),(34862,633,'Wanted fugitive captured at the Texas-Mexico Border | TV drama','','http://www.tea-oolong.org/wanted-fugitive-captured-at-the-texas-mexico-border.html','199.71.214.109','2010-05-17 12:41:03','2010-05-17 07:11:03','[...] Injecting Method to trim string length on gsp pages &laquo; IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34863,600,'Christian Louboutin Shoes','uneloslesesa@gawab.com','http://www.clshoescn.com','218.6.8.86','2010-05-18 05:59:24','2010-05-18 00:29:24','One again, your article is very nice',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34864,643,'Pharmacy technician certification board','fjdisa@asd.com','http://www.pharmacytechnicianblog.com/pharmacy-technician-certification-board','173.233.65.154','2010-05-18 07:42:26','2010-05-18 02:12:26','Wow this is a great resource.. I’m enjoying it.. good article',0,'spam','Mozilla/4.0 (compatible- MSIE 6.0- Windows NT 5.1- SV1- .NET CLR 1.1.4322','',0,0),(34865,618,'Wholesale polo shirts','lhuang520@gmail.com','http://www.wholesale-polo-shirts.com/','121.205.89.153','2010-05-18 08:44:42','2010-05-18 03:14:42','Thanks very good for report, I follow your blog',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)','',0,0),(34866,733,'what does my name mean','none@aol.com','http://what-does-my-name-mean.org','69.113.96.179','2010-05-18 15:51:13','2010-05-18 10:21:13','hi wats your myspace page',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6','',0,0),(34867,592,'Single MYSQL query to fetch all parents and child for a given node? | Long Range Two Way Radios','','http://longrangetwowayradios.info/single-mysql-query-to-fetch-all-parents-and-child-for-a-given-node/','174.121.38.98','2010-05-18 16:17:46','2010-05-18 10:47:46','[...] Backup &amp; Restore MySql Database Table(s) « IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34868,560,'Ivan','botangoklow@gmail.com','http://www.btr8get.com/','94.142.131.233','2010-05-19 04:56:23','2010-05-18 23:26:23','Hola,   Super post, tienen que marcarlo en Digg \r\n Have a nice day\r\n\r\n<a href=\"http://www.btr8get.com/\" rel=\"nofollow\">Ivan</a>',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Win 9x 4.90; Creative)','',0,0),(34869,633,'what meant by standoff when two flanges tight togather? | TV drama','','http://www.tea-oolong.org/what-meant-by-standoff-when-two-flanges-tight-togather.html','199.71.214.109','2010-05-19 09:25:19','2010-05-19 03:55:19','[...] Injecting Method to trim string length on gsp pages &laquo; IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34872,743,'wedding-secrets.info &raquo; Blog Archive &raquo; More Tips for Event Planning','','http://wedding-secrets.info/?p=35191','75.127.80.201','2010-05-20 23:22:02','2010-05-20 17:52:02','[...] Embedding JBPM 4.3 in a Grails 1.2.2 Application &laquo; IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34874,743,'Zero Priced Games | couple dress up games','','http://coupledressup.net/zero-priced-games.html','98.130.2.8','2010-05-21 06:55:25','2010-05-21 01:25:25','[...] Embedding JBPM 4.3 in a Grails 1.2.2 Application « IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34877,743,'Elton Vlk','Fleurilus@hotmail.com','http://www.news2all.de','212.110.182.69','2010-05-21 20:56:11','2010-05-21 15:26:11','hey, this is a really cool record, but check out this site if ur looking for real traffic to come to ur website <a href=\"//www.Articlesfactory.de”\" rel=\"nofollow\">Click Here</a>',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 8.50','',0,0),(34879,743,'BPM Tools','Torrisi@gmail.com','http://bpmtools.info','173.234.142.33','2010-05-22 00:29:30','2010-05-21 18:59:30','Interesting stuff.. I\'m trying to learn BPM myself.',0,'spam','Mozilla/5.0 (X11; U; Linux i686; it-IT; rv:1.9.0.2) Gecko/2008092313 Ubuntu/9.25 (jaunty) Firefox/3.8','',0,0),(34880,633,'Fendi Sunglass','sadasdwq@gmail.com','http://www.wholesalecoolsunglasses.com/fendi-sunglass-c-9.html','218.6.8.86','2010-05-22 00:41:07','2010-05-21 19:11:07','i have enjoyed reading thank for sharing your story Greeting.',0,'spam','Opera/9.01 (Windows NT 5.1; U; en)','',0,0),(34692,558,'Bhagwat Kumar','bhagwat@intelligrape.com','http://www.intelligrape.com','122.160.66.142','2010-04-19 12:04:57','2010-04-19 06:34:57','Nice blog. Specially for the statement :\r\n\r\nattributes = \"${attrs.collect {k, v -&gt; \" $k=\\\"$v\\\"\" }.join(\'\')}&gt;\"\r\n\r\n\r\nThis statement is excellent which outputs all the attributes in a string irrespective of the no. of attributes passed with the tag.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.9) Gecko/20100401 Ubuntu/9.10 (karmic) Firefox/3.5.9','',0,0),(34894,681,'Andrew A. Sailer','Bigney@ymail.com','http://www.appliancesstock.com','124.157.187.94','2010-05-24 21:39:49','2010-05-24 16:09:49','Apple orain Rhapsody app bat, eta irteera ona bat da, baina gaur egun ezinezkoa lokalki gordetzeko zure iPod-an oztopo, eta dismal 64kbps bit-tasa da. hori aldatu, eta bada zerbait da negate abantaila hau Zune egiteko, baina hilean 10 abesti izango dira oraindik Zune Pass \'alde plus handi bat.',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)','',0,0),(34893,743,'pocket watches','shoespublisher@gmail.com','http://www.watchespublisher.com','94.230.141.138','2010-05-24 20:54:12','2010-05-24 15:24:12','Good post, I can’t say that I agree with everything that was said, but very good information overall:)',0,'spam','Opera/9.64(Windows NT 5.1; U; en) Presto/2.1.1','',0,0),(34891,600,'nba Jerseys','ssasasas@gmail.com','http://www.discountdesirebags.com','218.6.8.86','2010-05-24 05:23:13','2010-05-23 23:53:13','Thanks for good news!',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Crazy Browser 2.0.0 Beta 1; .NET CLR 1.0.3705; .NET CLR 1.1.4322)','',0,0),(34892,663,'pharmacy tech','chased@yea.com','http://www.pharmacytechnicianblog.com/','173.233.65.154','2010-05-24 19:27:15','2010-05-24 13:57:15','Wow this is a great resource.. I’m enjoying it.. good article',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; APC; .NET CLR 1.0.3705; .NET CLR 1.1.4322; .NET CLR 2.0.50215; InfoPath.1)','',0,0),(34895,743,'yhwbyqx','kymftg@bnpymw.com','http://hgpixczwcpzu.com/','122.235.194.101','2010-05-25 02:47:05','2010-05-24 21:17:05','JgHKKS  <a href=\"http://yxdnmlvfgiul.com/\" rel=\"nofollow\">yxdnmlvfgiul</a>, [url=http://ieoinucteamp.com/]ieoinucteamp[/url], [link=http://jqqcisipzcby.com/]jqqcisipzcby[/link], http://gnrfmiublcbe.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34897,767,'Counseling Rehab - To Veterans&#8217; Wives&#8230;PTSD question?','','http://counselingrehab.com/mental-health-counseling/to-veterans-wives-ptsd-question/','75.125.34.2','2010-05-26 00:35:16','2010-05-25 19:05:16','[...] Injecting method t&amp;#959 convert String number t&amp;#959 number (Having &#8230; [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34898,681,'Sommer Nasti','796328Orejuela@hotmail.com','http://marketingscheme.info/','190.152.183.214','2010-05-26 03:42:37','2010-05-25 22:12:37','Dont forget that you should also have your email marketing system in place, you should have a lead capture or autoresponder on your site.If you dont have a site you can get a wordpress site done and hosted for very little money …around $250 gets you a customized professional wordpress site and google loves the wordpress structure and it ranks those sites very well.There are some very good internet marketing experts out there helping small businesses and for very reasonable costs.Prices may start at around $360 per month but you get value and there isnt an SEO out there offering to work for 10 bucks. Professional help is transparent, measureable and guaranteed for pre agreed targeted results. You get what you pay for.It can cut down your offline marketing costs too if you get it done properly. Thank you for this article! I\'ve just found a  really   big   news archive  <a href=\"http://aggressivemarketing.info/\" rel=\"nofollow\">about  advertising </A> Try it!',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)','',0,0),(34774,455,'Enrique Medina','enrique@medinamontenegro.es','','95.19.174.155','2010-05-11 02:45:41','2010-05-10 21:15:41','A couple of questions:\r\n\r\n1) Which is the  value that you need to use for the subreport?\r\n\r\n2) How do you tell the subreport to use fields defined in the parent report? (I\'m using the Grails plugin, so no DataSource defined)\r\n\r\nThanks.',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.29 Safari/533.4','',0,0),(34775,455,'Enrique Medina','enrique@medinamontenegro.es','','95.19.174.155','2010-05-11 02:46:57','2010-05-10 21:16:57','Question 1 was actually:\r\n\r\nWhich is the value that you need to define for &lt;subreportExpression&gt;?',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.29 Safari/533.4','',0,0),(34899,743,'Chrystal Bejcek','Tafolla45@gmail.com','http://www.internetmodeling.com/2538/become_an_agent.htm','95.170.221.7','2010-05-26 07:22:24','2010-05-26 01:52:24','Great news! Become an agent for Inernet Modeling, and make money recruiting models from your visitors. Easily earn 1,000 dollars per week! <a href=\"http://www.internetmodeling.com/2538/become_an_agent.htm\" rel=\"nofollow\">http://www.internetmodeling.com/become_an_agent.htm</a>',0,'spam','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)','',0,0),(34908,681,'Jason Witte','Hiroyukig1g@YAHOO.com','http://www.flashsh.com/pages/','74.63.230.194','2010-05-28 11:05:02','2010-05-28 05:35:02','Well, nice share,good article,very usefull for me…thanks :-D',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/532.2 (KHTML, like Gecko) Chrome/4.0.221.7 Safari/532.2','',0,0),(34779,455,'Hitesh','hitesh@intelligrape.com','','122.160.66.142','2010-05-11 11:21:59','2010-05-11 05:51:59','Hi Enrique ..this script compiles all the jrxml files in the directory ... path of the subreport is specified in the main(parent) report\r\n\r\n<pre lang=\"groovy\">\r\n<dataSourceExpression><![CDATA[new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource($F{//dataSource})]]></dataSourceExpression>\r\n<subreportExpression  class=\"java.lang.String\"><![CDATA[$P{SUBREPORT_DIR} + \"/subReportName.jasper\"]]></subreportExpression>\r\n</pre>\r\n\r\n\r\n\r\nhere DataSource  is the Collection that  is supplied to sub report\r\nand SUBREPORT_DIR  holds the path of subreport\r\n\r\n\r\n\r\nTo define SUBREPORT_DIR variable in controller (I use )\r\n<pre lang=\"groovy\">\r\nimport org.codehaus.groovy.grails.web.context.ServletContextHolder as SCH\r\n\r\ndef  abcAction = {\r\nString path = \"${SCH.servletContext.getRealPath(\"/\")}\"              \r\nparams.SUBREPORT_DIR = path + \"/reports\" \r\n\r\n//where path of directory where I store reports is ~/appName/web-app/reports\r\n...\r\nchain(controller: \'jasper\', action: \'index\', model: [data: anyVOs], params: params)\r\n}\r\n\r\n</pre>\r\n\r\n\r\nhope it helps\r\n_________________________________\r\nHitesh\r\nhitesh@intelligrape.com\r\n_________________________________',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.9) Gecko/20100401 Ubuntu/9.10 (karmic) Firefox/3.5.9','',0,0),(34780,455,'Vishal','vishal@intelligrape.com','','122.160.66.142','2010-05-11 11:42:18','2010-05-11 06:12:18','To define a subreport expression, i used..\r\n\r\n<pre lang=\'groovy\'>\r\n<subreportExpression  class=\"java.lang.String\">\r\n<![CDATA[$P{SUBREPORT_DIR} + \"/subreport.jasper\"]]></subreportExpression>\r\n</pre>\r\nwhere the params \'SUBREPORT_DIR\' contains the absolute path of subreport.jasper  file',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.19) Gecko/2010040116 Ubuntu/9.04 (jaunty) Firefox/3.0.19','',0,0),(34907,615,'east indian escort','escortbanners@gmail.com','http://indianescortmodels.com/','92.113.187.104','2010-05-28 04:30:47','2010-05-27 23:00:47','Truly cool blog to spend some time on reading it to my thinking. By the way, why haven\'t you you place this post to social bookmarks? It might bring big traffic here.',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; Win64; AMD64)','',0,0),(34903,663,'Elinor Blanco','iyqiiflvtc@yahoo.com','http://lochlynforgeries.blogspot.com/2010/03/youtube-munro-arrestees-enclosing.html','92.53.138.139','2010-05-27 17:03:20','2010-05-27 11:33:20','If only more than 38 people could hear this!',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; ru) Opera 8.01','',0,0),(34889,681,'powerline adapter','Eastwood@ymail.com','http://www.powerlineadapter.net','69.147.248.168','2010-05-23 10:56:02','2010-05-23 05:26:02','Thanks for a great blog. I was able to get the information that I had been looking for. Thanks once again! \r\n<a href=\"http://www.powerlineadapter.net\" rel=\"nofollow\">powerline adapter</a>',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)','',0,0),(34887,743,'photo wireless printer','Catinella12@gmail.com','http://www.photowirelessprinter.com','69.147.249.26','2010-05-23 01:02:43','2010-05-22 19:32:43','Great blog here. Keep it up! Please try to include more information if possible. | <a href=\"http://www.photowirelessprinter.com\" rel=\"nofollow\">photo wireless printer</a>',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)','',0,0),(34888,743,'Gianna Hartson','Morrow6871@yahoo.com','http://marisamillernude.sensualwriter.com','71.209.24.77','2010-05-23 08:41:35','2010-05-23 03:11:35','That is a great article and it was very interesting to read.',0,'spam','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; Windows-Media-Player/10.00.00.3990)','',0,0),(34890,681,'ultrasound technician','asdfjieieie@asdf.com','http://www.ultrasoundtechnicianblog.com/','173.233.65.154','2010-05-23 13:28:46','2010-05-23 07:58:46','I’ve recently started a blog, the information you provide on this site has helped me tremendously. Thank you for all of your time &amp; work.',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.0.3705)','',0,0),(34896,743,'marketiva trade','Beny5bn@YAHOO.com','http://www.marketiva.cc/','74.63.230.194','2010-05-25 15:28:19','2010-05-25 09:58:19','Haha, I hope you will keep updating your content constantly as you have one dedicated reader here. :-P',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/532.2 (KHTML, like Gecko) Chrome/4.0.221.7 Safari/532.2','',0,0),(34706,15,'Godwin','ebigodi@gmail.com','','122.183.196.185','2010-04-22 14:10:15','2010-04-22 08:40:15','Hi priya,\r\n\r\nEven i have encountered that same problem.I have just started with selenium.Can you please tel me how do u managed that error??\r\n\r\nThanks,\r\nGodwind',0,'1','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.9) Gecko/20100315 Firefox/3.5.9 (.NET CLR 3.5.30729)','',0,0),(34657,527,'Chandra','tmc_chandra@hotmail.com','','203.125.138.178','2010-04-07 07:59:11','2010-04-07 02:29:11','Another options is to use\r\nhttp://www.jqplot.com/',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3','',0,0),(34707,554,'amit','amitjain01@gmail.com','http://www.girnarsoft.com','59.95.172.252','2010-04-23 01:22:52','2010-04-22 19:52:52','isnt here a simple web configuration file where you can set the session timeout. why do it through code ?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 GTB7.0 (.NET CLR 3.5.30729)','',0,0),(34885,633,'louis vuitton handbag','asasas@gmail.com','http://www.discountdesirebags.com','218.6.8.86','2010-05-22 12:19:24','2010-05-22 06:49:24','Thank for this great post, i like what you \r\n\r\nread.',0,'spam','Mozilla/4.0 (compatible; MSIE 5.0; Windows 95) Opera 6.01  [en]','',0,0),(34886,681,'marketiva','Akihiro0v@YAHOO.com','http://www.marketiva.cc/','74.63.230.194','2010-05-22 18:10:52','2010-05-22 12:40:52','Yeah, I enjoy reading the report, too. It?s easy to understand that a journey like this is the biggest event in ones :D',0,'spam','Mozilla/5.0 (X11; U; Linux i686; it-IT; rv:1.9.0.2) Gecko/2008092313 Ubuntu/9.25 (jaunty) Firefox/3.8','',0,0),(34883,767,'Sales Letter Success. |','','http://fitness-exercise-bikes.info/sales-letter-success.html','74.52.79.210','2010-05-22 04:50:50','2010-05-21 23:20:50','[...] Injecting method t&amp;#959 convert String number t&amp;#959 number (Having &#8230; [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34884,681,'Club Penguin Cheats','a.cooper.rox@gmail.com','http://clubpenguincp.com/','173.208.78.61','2010-05-22 06:08:19','2010-05-22 00:38:19','I need some help for the regents exam. Where should I go?',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/532.2 (KHTML, like Gecko) Chrome/4.0.221.7 Safari/532.2','',0,0),(34870,615,'Poll: HS Football Player of the Week | World Cup 2010','','http://www.xnrblog.com/poll-hs-football-player-of-the-week.html','74.117.59.178','2010-05-20 09:29:56','2010-05-20 03:59:56','[...] Overriding default Transactional Behaviour in Grails Services &#8230; [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34871,743,'Ambrose Okun','Teramoto@gmail.com','http://www.employmentadvices.com','209.107.217.11','2010-05-20 20:17:33','2010-05-20 14:47:33','it is my first reply on this blog and to start with I would like to thank you for the unique information, which I found in this and all previous posts , it really helped me a lot. I will definitely iclude this blog on my rss reader ;) Also, I would like to ask - don\'t you mind if I will quate some information from your blog since I am writing articles for the Bukisa, Ezine and other articles directories (this is my part time job)? It would really help me with some of mine articles. Of course, I will mention your website name or URL (not all articles directories allows URL\'s , so I can\'t 100% promise that you will get a direct link to your blog).',0,'spam','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)','',0,0),(34742,633,'Hubert Klein Ikkink','h.kleinikkink@gmail.com','http://www.mrhaki.com','85.150.236.57','2010-05-05 12:48:43','2010-05-05 07:18:43','We used the following approach on our project:\r\n\r\n// File: Bootstrap.groovy\r\nimport org.apache.commons.lang.StringUtils\r\n\r\ndef init = { ctx -&gt;\r\n  String.mixin StringUtils\r\n}\r\n\r\nNow we can use \"abcdefg\".abbreviate(6) to get \'abc...\'\r\nWhat happened? We added all static methods from StringUtils with a first argument of type String to the String class, so we can use them in our application.',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2','',0,0),(34873,615,'Enjoy each others','escortbanners@gmail.com','http://www.pickescort.com/','92.112.169.103','2010-05-21 05:59:43','2010-05-21 00:29:43','Truly it was certainly interesting for me to read this blog. Thank you for it. I like such topics and anything connected to them. I would like to read more on that blog soon.',0,'spam','Mozilla/2.0 (compatible; MSIE 3.02; Windows CE; 240x320)','',0,0),(34876,743,'fan','fanjunhan@sina.com','','112.192.190.96','2010-05-21 20:05:56','2010-05-21 14:35:56','where is  jbpm.jar in JBPM 4.3?\r\nwhere is your last two code?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.1 (KHTML, like Gecko) Chrome/5.0.335.0 Safari/533.1','',0,0),(34875,767,'Guitar Tablature: Learn To Play Twinkle, Twinkle Little Star With Guitar Tab','','http://discountmusicalinstruments.info/acoustic-guitar/guitar-tablature-learn-to-play-twinkle-twinkle-little-star-with-guitar-tab/','174.132.166.2','2010-05-21 16:15:02','2010-05-21 10:45:02','[...] Injecting method to convert String number to number (Having , $ brackets) &laquo; IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34878,633,'Versace Sunglass','ssewsawholeq@gmail.com','http://www.wholesalecoolsunglasses.com/versace-sunglass-c-17.html','218.6.8.86','2010-05-21 22:58:51','2010-05-21 17:28:51','good share, great article, very usefull for us...thank you',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; America Online Browser 1.1; rev1.2; Windows NT 5.1; SV1; .NET CLR 1.1.4322)','',0,0),(34881,604,'converse shoes','shoespublisher@gmail.com','http://www.shoespublisher.com/','61.19.86.165','2010-05-22 01:24:41','2010-05-21 19:54:41','Great information! I’ve been looking for something like this for a while now. Thanks!',0,'spam','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)','',0,0),(34882,681,'Club Penguin','anthonycooper200@gmail.com','http://clubpenguincp.com/','173.208.78.62','2010-05-22 03:07:09','2010-05-21 21:37:09','Lately I\'ve been gaining a bit of weight. What would you suggest?',0,'spam','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)','',0,0),(34710,592,'Gaurav','gaurav@intelligrape.com','','122.160.66.142','2010-04-23 16:35:59','2010-04-23 11:05:59','Never knew that it would be so easy. Thanks for sharing..',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.19) Gecko/2010040116 Ubuntu/9.04 (jaunty) Firefox/3.0.19','',0,0),(34725,538,'Vivek Krishna','vivek@intelligrape.com','http://www.IntelliGrape.com','59.164.2.129','2010-04-28 19:49:14','2010-04-28 14:19:14','That would be perfect! Thanks for the tip Tim. :)',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2','',0,10),(34911,743,'iCollegeInfo','Onell@gmail.com','http://icollegeinfo.com/','217.66.205.76','2010-05-28 22:21:19','2010-05-28 16:51:19','Hi there could I reference some of the insight found in this blog if I reference you with a link back to your site?',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)','',0,0),(34912,633,'C++ Wrapper Library for Firebird Embedded SQL | Download Zone','','http://www.download-our.com/?p=3079','38.106.27.218','2010-05-29 00:10:11','2010-05-28 18:40:11','[...] Injecting Method to trim string length on gsp pages « IntelliGrape &#8230; [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34913,767,'forex robot','chased@yea.com','http://www.article-elf.com/','173.233.65.154','2010-05-29 05:26:36','2010-05-28 23:56:36','Terrific work! This is the type of information that should be shared around the web. Shame on the search engines for not positioning this post higher!',0,'spam','Mozilla/4.0 (compatible; MSIE 5.0; Windows 2000) Opera 6.0 [en]','',0,0),(34821,663,'anon','anon@x.com','','60.226.82.162','2010-05-14 04:15:33','2010-05-13 22:45:33','setuid is VERY bad. It creates a potential security risk. Most utilities, financial institutions and large cmpanies would disallow this method.\r\n\r\nYou already mention that sudo is available. This sort of thing is MUCH, much better:\r\n\r\nhttp://www.cyberciti.biz/faq/use-sudo-or-sudoers-to-start-stop-restart-apache/',0,'1','Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET CLR 1.1.4322)','',0,0),(34827,663,'dmittal','dmittal@intelligrape.com','http://www.IntelliGrape.com','122.160.66.142','2010-05-14 11:53:13','2010-05-14 06:23:13','Hi anon, thanks for the comment and the useful link. I didn\'t know that sudo is configurable to such an extent.\r\n\r\nI understand that the approach you suggested is much better from security stand-point, but in my particular case, I wanted that I should be able to deploy without being prompted for the password for each server. There are only 2 users that exist on the servers -- the applicationUser and the root user. So, it was not a problem for us that ALL users would be able to stop/start apache processes. \r\n\r\n-Deepak',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.29 Safari/533.4','',0,12),(34624,527,'Kimble','kimab@stud.hist.no','','195.1.79.94','2010-04-01 03:09:22','2010-03-31 21:39:22','jFreeChart is nice and all, but incredible slow and cpu consuming. Have a look at http://code.google.com/p/flot/ if client side rendering is acceptable to your project.',0,'1','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3pre) Gecko/20100330 Ubuntu/9.10 (karmic) Namoroka/3.6.3pre','',0,0),(34914,743,'Go2Education','Bulleri@gmail.com','http://www.go2education.net/','213.168.125.101','2010-05-29 23:30:04','2010-05-29 18:00:04','Wow, I never new that, much appreciated.',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 8.50','',0,0),(34915,743,'Super Call Saver Telecommunications Savings Portal &raquo; Blog Archive &raquo; HELIO / SK TELECOM &#8211; 2008 JBOSS INNOVATION AWARD WINNER','','http://www.supercallsaver.com/2010/05/29/helio-sk-telecom-2008-jboss-innovation-award-winner/','69.163.202.16','2010-05-30 01:22:26','2010-05-29 19:52:26','[...] Embedding JBPM 4.3 &#105;&#110; &#97; Grails 1.2.2 Application &laquo; IntelliGrape Blog [...]',0,'spam','The Incutio XML-RPC PHP Library -- WordPress/2.9.2','pingback',0,0),(34629,527,'vishal','vishal@intelligrape.com','http://www.intelligrape.com/blog/wp-admin/','122.160.66.142','2010-04-01 11:30:28','2010-04-01 06:00:28','Hey thanx...\r\nflot looks nice...\r\ni had even tried jQueryChart plugin, but left it due to HTML canvas tag',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.18) Gecko/2010021501 Ubuntu/9.04 (jaunty) Firefox/3.0.18','',0,19),(34688,538,'Tim','tim@accio.co.uk','','81.159.209.94','2010-04-16 20:56:10','2010-04-16 15:26:10','Nice, but you should be able to use Springs property override configuration. Set the default value in your resource.groovy as you have above.  But when you want to override the property you can do this in you Config.groovy file.\r\n\r\nbeans {\r\n    sampleBean {\r\n        value = \"Whatever....\"\r\n    }\r\n}\r\nor beans.sampleBean.value = \"Whatever....\"\r\n\r\nThis way you can also set that value to be environment specific. \r\n\r\nSee http://grails.org/doc/latest/guide/14.%20Grails%20and%20Spring.html#14.6 Property Override Configuration for more information.',0,'1','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.6 Safari/533.4','',0,0),(34902,663,'t shirt screen printing','greeen@gmail.com','http://tshirt.pheromonewipes.com/T-shirt-printing/anchorman-t-shirts-90.html','92.112.146.64','2010-05-27 16:11:54','2010-05-27 10:41:54','Thanks for your post',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; InfoPath.1)','',0,0),(34901,778,'vishal','vishal@intelligrape.com','http://www.intelligrape.com/blog/wp-admin/','122.160.66.142','2010-05-27 13:44:31','2010-05-27 08:14:31','Hi amit,\r\nThanks for the suggestion..\r\ni was unaware about isNAN() so i used this..',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.19) Gecko/2010040116 Ubuntu/9.04 (jaunty) Firefox/3.0.19','',0,19),(34900,778,'Amit Jain','amit@intelligrape.com','','122.160.66.142','2010-05-27 13:36:24','2010-05-27 08:06:24','We also have isNaN() function defined in javascript which returns true if value passed is not a valid number.\r\n\r\nThanks',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.9) Gecko/20100401 Ubuntu/9.10 (karmic) Firefox/3.5.9','',0,0),(34786,236,'srinath','srinathbtech@gmail.com','','122.169.208.114','2010-05-12 18:40:45','2010-05-12 13:10:45','Hi,\r\nHow to get sessionFactory .\r\n\r\nI was getting below issue \r\n groovy.lang.MissingPropertyException: No such property: sessionFactory for class:\r\n\r\ndo i need to import any jars?\r\n\r\nthanks.',0,'1','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.19) Gecko/2010040118 Ubuntu/8.10 (intrepid) Firefox/3.0.19','',0,0),(34632,527,'Roshan Shrestha','roshan@teamqsi.com','','69.95.42.13','2010-04-01 20:08:13','2010-04-01 14:38:13','If you are not against flash, then Open Flash Chart produces much more beautiful charts than JFreeCharts, and the server only has to send XML or JSON data to the browser. There is even a Grails plugin for that (http://grails.org/plugin/ofchart)?',0,'1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2','',0,0),(34904,714,'mmsycqoxti','nxtuda@gmloiq.com','http://xfneciprpmhj.com/','174.50.32.62','2010-05-27 23:28:34','2010-05-27 17:58:34','8doM6i  <a href=\"http://yfahveahpppj.com/\" rel=\"nofollow\">yfahveahpppj</a>, [url=http://fbwbinqdqhgn.com/]fbwbinqdqhgn[/url], [link=http://qdcugoulghfz.com/]qdcugoulghfz[/link], http://yrfflhodmqni.com/',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','',0,0),(34905,778,'drake fireworks','Janco3851@yahoo.com','http://www.musiclyricsnow.net/d/drake/fireworks/','173.208.25.77','2010-05-28 00:16:25','2010-05-27 18:46:25','Thanks for sharing, I found this story while surfing for new lyrics, useful comments and great points made.',0,'spam','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 8.50','',0,0),(34906,743,'forex robot','chased@yea.com','http://www.article-elf.com/','173.233.65.154','2010-05-28 03:42:29','2010-05-27 22:12:29','found your site on del.icio.us today and really liked it.. i bookmarked it and will be back to check it out some more later',0,'spam','Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 4.0)','',0,0),(34909,681,'James Oldham','Beny5bn@YAHOO.com','http://www.flashsh.com/pages/','74.63.230.194','2010-05-28 13:22:33','2010-05-28 07:52:33','Hello Thanks very good for report,I follow your blog :-P',0,'spam','Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; Media Center PC 6.0; InfoPath.2; MS-RTC LM 8)','',0,0),(34910,778,'Conway Hudson','info@wwwwhatseek.com','http://wwwwhatseek.com','109.164.3.134','2010-05-28 17:07:43','2010-05-28 11:37:43','<i>We also have isNaN() function defined in javascript which returns true if value passed is not a valid number.</i>\n+1',0,'spam','Mozilla/5.0 (Windows; U; Windows NT 6.0; cs; rv:1.9.1.7) Gecko/20091221 Firefox/3.5.7 (.NET CLR 3.5.30729)','',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL auto_increment,
  `link_url` varchar(255) NOT NULL default '',
  `link_name` varchar(255) NOT NULL default '',
  `link_image` varchar(255) NOT NULL default '',
  `link_target` varchar(25) NOT NULL default '',
  `link_category` bigint(20) NOT NULL default '0',
  `link_description` varchar(255) NOT NULL default '',
  `link_visible` varchar(20) NOT NULL default 'Y',
  `link_owner` bigint(20) unsigned NOT NULL default '1',
  `link_rating` int(11) NOT NULL default '0',
  `link_updated` datetime NOT NULL default '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL default '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL default '',
  PRIMARY KEY  (`link_id`),
  KEY `link_category` (`link_category`),
  KEY `link_visible` (`link_visible`)
) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL auto_increment,
  `blog_id` int(11) NOT NULL default '0',
  `option_name` varchar(64) NOT NULL default '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL default 'yes',
  PRIMARY KEY  (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=MyISAM AUTO_INCREMENT=4670 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,0,'siteurl','http://www.intelligrape.com/blog','yes'),(2,0,'blogname','IntelliGrape Blog','yes'),(3,0,'blogdescription','','yes'),(4,0,'users_can_register','','yes'),(5,0,'admin_email','dmittal@IntelliGrape.com','yes'),(6,0,'start_of_week','1','yes'),(7,0,'use_balanceTags','','yes'),(8,0,'use_smilies','1','yes'),(9,0,'require_name_email','1','yes'),(10,0,'comments_notify','1','yes'),(11,0,'posts_per_rss','10','yes'),(13,0,'rss_use_excerpt','0','yes'),(14,0,'mailserver_url','mail.example.com','yes'),(15,0,'mailserver_login','login@example.com','yes'),(16,0,'mailserver_pass','password','yes'),(17,0,'mailserver_port','110','yes'),(18,0,'default_category','1','yes'),(19,0,'default_comment_status','open','yes'),(20,0,'default_ping_status','open','yes'),(21,0,'default_pingback_flag','1','yes'),(22,0,'default_post_edit_rows','10','yes'),(23,0,'posts_per_page','10','yes'),(24,0,'what_to_show','posts','yes'),(25,0,'date_format','F j, Y','yes'),(26,0,'time_format','g:i a','yes'),(27,0,'links_updated_date_format','F j, Y g:i a','yes'),(28,0,'links_recently_updated_prepend','<em>','yes'),(29,0,'links_recently_updated_append','</em>','yes'),(30,0,'links_recently_updated_time','120','yes'),(31,0,'comment_moderation','0','yes'),(32,0,'moderation_notify','1','yes'),(33,0,'permalink_structure','/%year%/%monthnum%/%day%/%postname%/','yes'),(34,0,'gzipcompression','','yes'),(35,0,'hack_file','0','yes'),(36,0,'blog_charset','UTF-8','yes'),(37,0,'moderation_keys','','no'),(38,0,'active_plugins','a:2:{i:0;s:19:\"akismet/akismet.php\";i:1;s:23:\"wp-syntax/wp-syntax.php\";}','yes'),(563,0,'wporg_popular_tags','O:8:\"stdClass\":2:{s:7:\"timeout\";i:1267075516;s:6:\"cached\";a:100:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";s:4:\"1354\";}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"Post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";s:4:\"1031\";}s:6:\"plugin\";a:3:{s:4:\"name\";s:6:\"plugin\";s:4:\"slug\";s:6:\"plugin\";s:5:\"count\";s:3:\"820\";}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";s:3:\"773\";}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";s:3:\"757\";}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";s:3:\"686\";}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";s:3:\"592\";}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";s:3:\"450\";}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";s:3:\"424\";}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";s:3:\"419\";}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";s:3:\"418\";}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";s:3:\"407\";}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";s:3:\"349\";}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";s:3:\"314\";}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";s:3:\"302\";}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"AJAX\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";s:3:\"290\";}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";s:3:\"259\";}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";s:3:\"251\";}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";s:3:\"225\";}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";s:3:\"218\";}s:4:\"tags\";a:3:{s:4:\"name\";s:4:\"tags\";s:4:\"slug\";s:4:\"tags\";s:5:\"count\";s:3:\"202\";}s:9:\"wordpress\";a:3:{s:4:\"name\";s:9:\"wordpress\";s:4:\"slug\";s:9:\"wordpress\";s:5:\"count\";s:3:\"202\";}s:7:\"comment\";a:3:{s:4:\"name\";s:7:\"comment\";s:4:\"slug\";s:7:\"comment\";s:5:\"count\";s:3:\"194\";}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";s:3:\"194\";}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";s:3:\"193\";}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";s:3:\"184\";}s:5:\"stats\";a:3:{s:4:\"name\";s:5:\"stats\";s:4:\"slug\";s:5:\"stats\";s:5:\"count\";s:3:\"179\";}s:10:\"statistics\";a:3:{s:4:\"name\";s:10:\"statistics\";s:4:\"slug\";s:10:\"statistics\";s:5:\"count\";s:3:\"178\";}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";s:3:\"178\";}s:10:\"categories\";a:3:{s:4:\"name\";s:10:\"categories\";s:4:\"slug\";s:10:\"categories\";s:5:\"count\";s:3:\"176\";}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";s:3:\"175\";}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";s:3:\"170\";}s:5:\"flash\";a:3:{s:4:\"name\";s:5:\"flash\";s:4:\"slug\";s:5:\"flash\";s:5:\"count\";s:3:\"167\";}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";s:3:\"164\";}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";s:3:\"160\";}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";s:3:\"155\";}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";s:3:\"153\";}s:10:\"formatting\";a:3:{s:4:\"name\";s:10:\"Formatting\";s:4:\"slug\";s:10:\"formatting\";s:5:\"count\";s:3:\"150\";}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";s:3:\"150\";}s:6:\"search\";a:3:{s:4:\"name\";s:6:\"search\";s:4:\"slug\";s:6:\"search\";s:5:\"count\";s:3:\"149\";}s:5:\"theme\";a:3:{s:4:\"name\";s:5:\"theme\";s:4:\"slug\";s:5:\"theme\";s:5:\"count\";s:3:\"148\";}s:4:\"wpmu\";a:3:{s:4:\"name\";s:4:\"wpmu\";s:4:\"slug\";s:4:\"wpmu\";s:5:\"count\";s:3:\"138\";}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";s:3:\"137\";}s:5:\"login\";a:3:{s:4:\"name\";s:5:\"login\";s:4:\"slug\";s:5:\"login\";s:5:\"count\";s:3:\"133\";}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"Facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";s:3:\"131\";}s:3:\"css\";a:3:{s:4:\"name\";s:3:\"CSS\";s:4:\"slug\";s:3:\"css\";s:5:\"count\";s:3:\"127\";}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";s:3:\"127\";}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";s:3:\"127\";}s:4:\"list\";a:3:{s:4:\"name\";s:4:\"list\";s:4:\"slug\";s:4:\"list\";s:5:\"count\";s:3:\"125\";}s:3:\"ads\";a:3:{s:4:\"name\";s:3:\"ads\";s:4:\"slug\";s:3:\"ads\";s:5:\"count\";s:3:\"123\";}s:9:\"dashboard\";a:3:{s:4:\"name\";s:9:\"dashboard\";s:4:\"slug\";s:9:\"dashboard\";s:5:\"count\";s:3:\"123\";}s:8:\"security\";a:3:{s:4:\"name\";s:8:\"security\";s:4:\"slug\";s:8:\"security\";s:5:\"count\";s:3:\"118\";}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";s:3:\"117\";}s:3:\"tag\";a:3:{s:4:\"name\";s:3:\"tag\";s:4:\"slug\";s:3:\"tag\";s:5:\"count\";s:3:\"115\";}s:7:\"picture\";a:3:{s:4:\"name\";s:7:\"picture\";s:4:\"slug\";s:7:\"picture\";s:5:\"count\";s:3:\"112\";}s:8:\"pictures\";a:3:{s:4:\"name\";s:8:\"pictures\";s:4:\"slug\";s:8:\"pictures\";s:5:\"count\";s:3:\"110\";}s:5:\"users\";a:3:{s:4:\"name\";s:5:\"users\";s:4:\"slug\";s:5:\"users\";s:5:\"count\";s:3:\"108\";}s:5:\"embed\";a:3:{s:4:\"name\";s:5:\"embed\";s:4:\"slug\";s:5:\"embed\";s:5:\"count\";s:3:\"108\";}s:10:\"navigation\";a:3:{s:4:\"name\";s:10:\"navigation\";s:4:\"slug\";s:10:\"navigation\";s:5:\"count\";s:3:\"106\";}s:4:\"user\";a:3:{s:4:\"name\";s:4:\"user\";s:4:\"slug\";s:4:\"user\";s:5:\"count\";s:3:\"105\";}s:4:\"digg\";a:3:{s:4:\"name\";s:4:\"Digg\";s:4:\"slug\";s:4:\"digg\";s:5:\"count\";s:3:\"103\";}s:4:\"code\";a:3:{s:4:\"name\";s:4:\"code\";s:4:\"slug\";s:4:\"code\";s:5:\"count\";s:3:\"101\";}s:6:\"flickr\";a:3:{s:4:\"name\";s:6:\"flickr\";s:4:\"slug\";s:6:\"flickr\";s:5:\"count\";s:3:\"101\";}s:4:\"html\";a:3:{s:4:\"name\";s:4:\"html\";s:4:\"slug\";s:4:\"html\";s:5:\"count\";s:2:\"98\";}s:9:\"bookmarks\";a:3:{s:4:\"name\";s:9:\"bookmarks\";s:4:\"slug\";s:9:\"bookmarks\";s:5:\"count\";s:2:\"97\";}s:6:\"random\";a:3:{s:4:\"name\";s:6:\"random\";s:4:\"slug\";s:6:\"random\";s:5:\"count\";s:2:\"97\";}s:8:\"bookmark\";a:3:{s:4:\"name\";s:8:\"bookmark\";s:4:\"slug\";s:8:\"bookmark\";s:5:\"count\";s:2:\"97\";}s:11:\"integration\";a:3:{s:4:\"name\";s:11:\"integration\";s:4:\"slug\";s:11:\"integration\";s:5:\"count\";s:2:\"95\";}s:3:\"url\";a:3:{s:4:\"name\";s:3:\"url\";s:4:\"slug\";s:3:\"url\";s:5:\"count\";s:2:\"93\";}s:5:\"yahoo\";a:3:{s:4:\"name\";s:5:\"yahoo\";s:4:\"slug\";s:5:\"yahoo\";s:5:\"count\";s:2:\"93\";}s:5:\"tweet\";a:3:{s:4:\"name\";s:5:\"tweet\";s:4:\"slug\";s:5:\"tweet\";s:5:\"count\";s:2:\"91\";}s:7:\"plugins\";a:3:{s:4:\"name\";s:7:\"plugins\";s:4:\"slug\";s:7:\"plugins\";s:5:\"count\";s:2:\"90\";}s:4:\"blog\";a:3:{s:4:\"name\";s:4:\"blog\";s:4:\"slug\";s:4:\"blog\";s:5:\"count\";s:2:\"90\";}s:4:\"menu\";a:3:{s:4:\"name\";s:4:\"menu\";s:4:\"slug\";s:4:\"menu\";s:5:\"count\";s:2:\"89\";}s:9:\"slideshow\";a:3:{s:4:\"name\";s:9:\"slideshow\";s:4:\"slug\";s:9:\"slideshow\";s:5:\"count\";s:2:\"89\";}s:3:\"cms\";a:3:{s:4:\"name\";s:3:\"cms\";s:4:\"slug\";s:3:\"cms\";s:5:\"count\";s:2:\"89\";}s:6:\"custom\";a:3:{s:4:\"name\";s:6:\"custom\";s:4:\"slug\";s:6:\"custom\";s:5:\"count\";s:2:\"88\";}s:8:\"template\";a:3:{s:4:\"name\";s:8:\"template\";s:4:\"slug\";s:8:\"template\";s:5:\"count\";s:2:\"87\";}s:5:\"feeds\";a:3:{s:4:\"name\";s:5:\"feeds\";s:4:\"slug\";s:5:\"feeds\";s:5:\"count\";s:2:\"86\";}s:9:\"automatic\";a:3:{s:4:\"name\";s:9:\"automatic\";s:4:\"slug\";s:9:\"automatic\";s:5:\"count\";s:2:\"85\";}s:9:\"thumbnail\";a:3:{s:4:\"name\";s:9:\"thumbnail\";s:4:\"slug\";s:9:\"thumbnail\";s:5:\"count\";s:2:\"82\";}s:4:\"meta\";a:3:{s:4:\"name\";s:4:\"meta\";s:4:\"slug\";s:4:\"meta\";s:5:\"count\";s:2:\"82\";}s:6:\"editor\";a:3:{s:4:\"name\";s:6:\"editor\";s:4:\"slug\";s:6:\"editor\";s:5:\"count\";s:2:\"81\";}s:4:\"news\";a:3:{s:4:\"name\";s:4:\"News\";s:4:\"slug\";s:4:\"news\";s:5:\"count\";s:2:\"80\";}s:11:\"delicious-1\";a:3:{s:4:\"name\";s:9:\"delicious\";s:4:\"slug\";s:11:\"delicious-1\";s:5:\"count\";s:2:\"79\";}s:5:\"share\";a:3:{s:4:\"name\";s:5:\"Share\";s:4:\"slug\";s:5:\"share\";s:5:\"count\";s:2:\"79\";}s:7:\"adsense\";a:3:{s:4:\"name\";s:7:\"adsense\";s:4:\"slug\";s:7:\"adsense\";s:5:\"count\";s:2:\"77\";}s:4:\"text\";a:3:{s:4:\"name\";s:4:\"text\";s:4:\"slug\";s:4:\"text\";s:5:\"count\";s:2:\"77\";}s:14:\"administration\";a:3:{s:4:\"name\";s:14:\"administration\";s:4:\"slug\";s:14:\"administration\";s:5:\"count\";s:2:\"74\";}s:3:\"php\";a:3:{s:4:\"name\";s:3:\"php\";s:4:\"slug\";s:3:\"php\";s:5:\"count\";s:2:\"74\";}s:8:\"lightbox\";a:3:{s:4:\"name\";s:8:\"lightbox\";s:4:\"slug\";s:8:\"lightbox\";s:5:\"count\";s:2:\"74\";}s:5:\"music\";a:3:{s:4:\"name\";s:5:\"music\";s:4:\"slug\";s:5:\"music\";s:5:\"count\";s:2:\"71\";}s:6:\"author\";a:3:{s:4:\"name\";s:6:\"author\";s:4:\"slug\";s:6:\"author\";s:5:\"count\";s:2:\"70\";}s:6:\"upload\";a:3:{s:4:\"name\";s:6:\"upload\";s:4:\"slug\";s:6:\"upload\";s:5:\"count\";s:2:\"69\";}s:6:\"events\";a:3:{s:4:\"name\";s:6:\"events\";s:4:\"slug\";s:6:\"events\";s:5:\"count\";s:2:\"69\";}s:6:\"button\";a:3:{s:4:\"name\";s:6:\"button\";s:4:\"slug\";s:6:\"button\";s:5:\"count\";s:2:\"69\";}s:11:\"advertising\";a:3:{s:4:\"name\";s:11:\"advertising\";s:4:\"slug\";s:11:\"advertising\";s:5:\"count\";s:2:\"69\";}s:4:\"atom\";a:3:{s:4:\"name\";s:4:\"atom\";s:4:\"slug\";s:4:\"atom\";s:5:\"count\";s:2:\"68\";}s:4:\"mail\";a:3:{s:4:\"name\";s:4:\"mail\";s:4:\"slug\";s:4:\"mail\";s:5:\"count\";s:2:\"68\";}s:7:\"contact\";a:3:{s:4:\"name\";s:7:\"contact\";s:4:\"slug\";s:7:\"contact\";s:5:\"count\";s:2:\"67\";}}}','no'),(39,0,'home','http://www.intelligrape.com/blog','yes'),(40,0,'category_base','','yes'),(41,0,'ping_sites','http://rpc.pingomatic.com/','yes'),(42,0,'advanced_edit','0','yes'),(43,0,'comment_max_links','2','yes'),(44,0,'gmt_offset','5.5','yes'),(45,0,'default_email_category','1','yes'),(46,0,'recently_edited','a:5:{i:0;s:30:\"/themes/Intelligrape/style.css\";i:1;s:43:\"wp-content/themes/silver-light-01/style.css\";i:2;s:38:\"wp-content/plugins/akismet/akismet.php\";i:3;s:69:\"wp-content/plugins/google-analytics-for-wordpress/googleanalytics.php\";i:4;s:62:\"wp-content/plugins/all-in-one-seo-pack/all_in_one_seo_pack.php\";}','no'),(47,0,'use_linksupdate','0','yes'),(48,0,'template','Intelligrape','yes'),(49,0,'stylesheet','Intelligrape','yes'),(50,0,'comment_whitelist','1','yes'),(52,0,'blacklist_keys','','no'),(53,0,'comment_registration','','yes'),(54,0,'rss_language','en','yes'),(55,0,'html_type','text/html','yes'),(56,0,'use_trackback','0','yes'),(57,0,'default_role','author','yes'),(58,0,'db_version','12329','yes'),(59,0,'uploads_use_yearmonth_folders','1','yes'),(60,0,'upload_path','wp-content/uploads','yes'),(61,0,'secret','l(0h*Q8oGR!ZCOfrpgf8%M1T$GYluY4CYY1bsmp4kVoA^ao(ub$NMth*AYNMyk@p','yes'),(62,0,'blog_public','1','yes'),(63,0,'default_link_category','2','yes'),(64,0,'show_on_front','posts','yes'),(65,0,'tag_base','','yes'),(66,0,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:54:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(68,0,'widget_categories','a:3:{s:6:\"number\";i:1;i:1;a:4:{s:5:\"count\";b:0;s:12:\"hierarchical\";b:0;s:8:\"dropdown\";b:0;s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(826,0,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(827,0,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(828,0,'_transient_update_plugins','O:8:\"stdClass\":3:{s:12:\"last_checked\";i:1275175955;s:7:\"checked\";a:3:{s:19:\"akismet/akismet.php\";s:5:\"2.2.7\";s:9:\"hello.php\";s:5:\"1.5.1\";s:23:\"wp-syntax/wp-syntax.php\";s:3:\"0.8\";}s:8:\"response\";a:2:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":5:{s:2:\"id\";s:2:\"15\";s:4:\"slug\";s:7:\"akismet\";s:11:\"new_version\";s:5:\"2.2.8\";s:3:\"url\";s:44:\"http://wordpress.org/extend/plugins/akismet/\";s:7:\"package\";s:55:\"http://downloads.wordpress.org/plugin/akismet.2.2.8.zip\";}s:23:\"wp-syntax/wp-syntax.php\";O:8:\"stdClass\":5:{s:2:\"id\";s:3:\"383\";s:4:\"slug\";s:9:\"wp-syntax\";s:11:\"new_version\";s:5:\"0.9.8\";s:3:\"url\";s:46:\"http://wordpress.org/extend/plugins/wp-syntax/\";s:7:\"package\";s:57:\"http://downloads.wordpress.org/plugin/wp-syntax.0.9.8.zip\";}}}','yes'),(829,0,'_transient_update_themes','O:8:\"stdClass\":2:{s:12:\"last_checked\";i:1275175955;s:7:\"checked\";a:3:{s:12:\"Intelligrape\";s:3:\"1.0\";s:7:\"classic\";s:3:\"1.5\";s:7:\"default\";s:3:\"1.6\";}}','yes'),(4562,0,'_transient_timeout_feed_mod_a5420c83891a9c88ad2a4f04584a5efc','1275061955','no'),(4563,0,'_transient_feed_mod_a5420c83891a9c88ad2a4f04584a5efc','1275018755','no'),(4551,0,'_transient_feed_57bc725ad6568758915363af670fd8bc','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:23:\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Newest\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Newest\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 28 May 2010 03:33:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"zhouzb889 on \"Login to view all\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/login-to-view-all/#post-18191\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 14:22:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18191@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"This plugin is designed to help you add hidden contents only visible for the visitor who are logged in.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"zhouzb889\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"fbarret on \"Display Last Post(s)\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/extend/plugins/display-last-posts/#post-18198\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 19:42:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18198@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"Allows to display the last post(s) anywhere on your WordPress site/blog, using a shortcode or a short PHP code (for the templates).\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"fbarret\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"cyclop on \"Wordpress Video\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://wordpress.org/extend/plugins/wordpress-video/#post-18218\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 15:37:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18218@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:116:\"Gives the opportunity to embed in post any video from:  Youtube.com, videos.sapo.pt,  google, vimeo.com and more!!!!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"cyclop\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"eskapism on \"Simple Fields\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://wordpress.org/extend/plugins/simple-fields/#post-17865\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 09 May 2010 20:08:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"17865@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"It\'s a field manager.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"eskapism\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"kutu on \"Fantasy Sports Widget\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"http://wordpress.org/extend/plugins/fantasy-sports-widget/#post-18203\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 03:52:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18203@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:106:\"The Fantasy Knuckleheads Fantasy Sports Widget is an aggregation of the web\'s best fantasy sports content.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"kutu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"splitmango on \"Ubertor Active Listings\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wordpress.org/extend/plugins/ubertor-active-listings/#post-18227\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 18:35:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18227@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Display your Ubertor active listings on your Wordpress blog\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"splitmango\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"PhilipIsMyName on \"Video Download\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/video-download/#post-18192\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 15:25:02 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18192@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"Allow your readers to download embedded YouTube videos directly or as mp3 files.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"PhilipIsMyName\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"wgalway on \"Icecast Now Playing\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/extend/plugins/icecast-now-playing/#post-18195\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 18:22:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18195@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"Plugin to display Icecast connection statistics.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"wgalway\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"agentstorm on \"Agent Storm\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/extend/plugins/agent-storm/#post-18231\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 21:41:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18231@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:109:\"This plugin integrates Agent Storm Contact Management and IDX Functionality into\nyour Wordpress powered blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"agentstorm\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"mark.dimarco@gmail.com on \"press9-ab-testing\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/press9-ab-testing/#post-18230\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 21:39:10 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18230@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:106:\"press9-ab-testing lets you create A/B tests from press9\'s test designer and run the test within WordPress.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"mark.dimarco@gmail.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"apeatling on \"BuddyPress Followers\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/extend/plugins/buddypress-followers/#post-18221\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 16:48:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18221@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Allow your site members to follow other members\' activity.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"apeatling\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"johnnyp28 on \"Dynamic-Photo-Album\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/extend/plugins/dynamic-photo-album/#post-17984\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 May 2010 15:42:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"17984@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"This plugin creates a small photo album in the sidebar of your weblog and shows thumbnails of your photos using visual effects (javascript). The uniqu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"johnnyp28\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"digdan on \"BackLinkCloud\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/backlink-cloud/#post-18181\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 24 May 2010 22:38:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18181@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:114:\"The Backlink Cloud plugin uses the backlink cloud server for listing, creating, and validating link reciprocation.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"digdan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"wpuser0815 on \"PiwikSearchEngineKeywords\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wordpress.org/extend/plugins/piwik-search-engine-keywords/#post-18174\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 24 May 2010 13:45:52 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18174@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"Displays incoming queries from search engines like Google. The queries data come from a Piwik-database.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"wpuser0815\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"ksingla on \"Wincache Stats Widget\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/wincache-stats/#post-18238\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 07:02:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18238@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"Widget to show wincache statistics.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"ksingla\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:7:{s:12:\"content-type\";s:24:\"text/html; charset=UTF-8\";s:13:\"last-modified\";s:19:\"2010-05-25 14:22:16\";s:4:\"etag\";s:34:\"\"b026cbc4aa71a15f586a50c1561fbce6\"\";s:14:\"content-length\";s:4:\"6765\";s:4:\"date\";s:29:\"Fri, 28 May 2010 03:52:35 GMT\";s:6:\"server\";s:9:\"LiteSpeed\";s:10:\"connection\";s:5:\"close\";}s:5:\"build\";s:14:\"20090627192103\";}','no'),(4550,0,'_transient_timeout_feed_57bc725ad6568758915363af670fd8bc','1275061955','no'),(4566,0,'_transient_timeout_feed_mod_1a5f760f2e2b48827d4974a60857e7c2','1275061955','no'),(4567,0,'_transient_feed_mod_1a5f760f2e2b48827d4974a60857e7c2','1275018755','no'),(4564,0,'_transient_timeout_feed_mod_57bc725ad6568758915363af670fd8bc','1275061955','no'),(4565,0,'_transient_feed_mod_57bc725ad6568758915363af670fd8bc','1275018755','no'),(838,0,'can_compress_scripts','1','yes'),(3862,0,'rewrite_rules','a:71:{s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:14:\".*wp-atom.php$\";s:19:\"index.php?feed=atom\";s:13:\".*wp-rdf.php$\";s:18:\"index.php?feed=rdf\";s:13:\".*wp-rss.php$\";s:18:\"index.php?feed=rss\";s:14:\".*wp-rss2.php$\";s:19:\"index.php?feed=rss2\";s:14:\".*wp-feed.php$\";s:19:\"index.php?feed=feed\";s:22:\".*wp-commentsrss2.php$\";s:34:\"index.php?feed=rss2&withcomments=1\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:29:\"comments/page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:42:\"tag/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:37:\"tag/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:30:\"tag/(.+?)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:12:\"tag/(.+?)/?$\";s:25:\"index.php?tag=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:58:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:68:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:88:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:85:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&tb=1\";s:77:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:65:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&paged=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&cpage=$matches[5]\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)(/[0-9]+)?/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&page=$matches[5]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&cpage=$matches[4]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:25:\".+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:35:\".+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:55:\".+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:50:\".+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:50:\".+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:18:\"(.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:38:\"(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:33:\"(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:26:\"(.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:33:\"(.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:18:\"(.+?)(/[0-9]+)?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";}','yes'),(198,0,'GoogleAnalyticsPP','a:14:{s:8:\"uastring\";s:12:\"UA-8385477-1\";s:12:\"dlextensions\";s:31:\"doc,exe,.js,pdf,ppt,tgz,zip,xls\";s:8:\"dlprefix\";s:10:\"/downloads\";s:9:\"artprefix\";s:17:\"/outbound/article\";s:9:\"comprefix\";s:17:\"/outbound/comment\";s:12:\"comautprefix\";s:23:\"/outbound/commentauthor\";s:14:\"blogrollprefix\";s:18:\"/outbound/blogroll\";s:11:\"domainorurl\";s:6:\"domain\";s:7:\"extrase\";b:0;s:7:\"imagese\";b:0;s:13:\"trackoutbound\";b:1;s:13:\"admintracking\";b:0;s:12:\"trackadsense\";b:0;s:6:\"userv2\";b:0;}','yes'),(88,0,'aiosp_home_description','','yes'),(89,0,'aiosp_home_title','','yes'),(90,0,'aiosp_rewrite_titles','1','yes'),(91,0,'aiosp_use_categories','0','yes'),(92,0,'aiosp_category_noindex','1','yes'),(93,0,'aiosp_archive_noindex','1','yes'),(94,0,'aiosp_tags_noindex','0','yes'),(95,0,'aiosp_generate_descriptions','1','yes'),(96,0,'aiosp_post_title_format','%post_title% | %blog_title%','yes'),(97,0,'aiosp_page_title_format','%page_title% | %blog_title%','yes'),(98,0,'aiosp_category_title_format','%category_title% | %blog_title%','yes'),(99,0,'aiosp_archive_title_format','%date% | %blog_title%','yes'),(100,0,'aiosp_tag_title_format','%tag% | %blog_title%','yes'),(101,0,'aiosp_search_title_format','%search% | %blog_title%','yes'),(102,0,'aiosp_description_format','%description%','yes'),(103,0,'aiosp_paged_format','- Part %page%','yes'),(104,0,'aiosp_404_title_format','Nothing found for %request_words%','yes'),(105,0,'aiosp_post_meta_tags','','yes'),(106,0,'aiosp_page_meta_tags','','yes'),(107,0,'aiosp_home_meta_tags','','yes'),(108,0,'aiosp_do_log','','yes'),(109,0,'widget_pages','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:6:\"sortby\";s:10:\"post_title\";s:7:\"exclude\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(110,0,'widget_calendar','a:3:{i:2;a:1:{s:5:\"title\";s:0:\"\";}i:4;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(111,0,'widget_archives','a:2:{i:2;a:3:{s:5:\"count\";b:0;s:8:\"dropdown\";b:0;s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(112,0,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(113,0,'widget_recent_entries','a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}','yes'),(114,0,'widget_tag_cloud','a:2:{i:2;a:1:{s:5:\"title\";s:9:\"Tag Cloud\";}s:12:\"_multiwidget\";i:1;}','yes'),(115,0,'widget_text','a:2:{i:1;a:2:{s:5:\"title\";s:14:\"This is a test\";s:4:\"text\";s:16:\"this is a test. \";}s:12:\"_multiwidget\";i:1;}','yes'),(116,0,'widget_rss','a:2:{i:1;a:4:{s:5:\"items\";i:10;s:5:\"title\";s:0:\"\";s:5:\"error\";b:1;s:3:\"url\";s:54:\"Error: could not find an RSS or ATOM feed at that URL.\";}s:12:\"_multiwidget\";i:1;}','yes'),(117,0,'widget_recent_comments','a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}','yes'),(4501,0,'_transient_timeout_plugin_slugs','1275028947','no'),(4502,0,'_transient_plugin_slugs','a:3:{i:0;s:19:\"akismet/akismet.php\";i:1;s:9:\"hello.php\";i:2;s:23:\"wp-syntax/wp-syntax.php\";}','no'),(857,0,'widget_akismet','a:1:{s:5:\"title\";s:12:\"Spam Blocked\";}','yes'),(861,0,'akismet_connectivity_time','1275331360','yes'),(4505,0,'category_children','a:5:{i:1;a:2:{i:0;s:3:\"162\";i:1;s:3:\"205\";}i:109;a:1:{i:0;s:3:\"110\";}i:27;a:1:{i:0;s:3:\"204\";}i:9;a:1:{i:0;s:3:\"145\";}i:7;a:2:{i:0;s:3:\"226\";i:1;s:3:\"211\";}}','yes'),(4553,0,'_transient_timeout_feed_1a5f760f2e2b48827d4974a60857e7c2','1275061955','no'),(4554,0,'_transient_feed_1a5f760f2e2b48827d4974a60857e7c2','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:23:\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Recently Updated\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Recently Updated\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 28 May 2010 03:35:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"WildCuddler on \"Twitter Blog\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/extend/plugins/twitter-blog/#post-11971\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 24 Jul 2009 01:14:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"11971@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"Tweets your post, then captures tweets replying to that tweet and converts them to comments.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WildCuddler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:100:\"roohit on \"Tweet individual highlights directly to Twitter w/ TinyURL back to your highlighted page\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/extend/plugins/tweet-highlights/#post-14774\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 16 Dec 2009 10:22:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"14774@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:149:\"Select any text, it gets highlighted in color; directly tweet your selection to Twitter etc. Automatically includes a tinyURL to your page. Very COOL\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"roohit\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"zhouzb889 on \"Login to view all\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/login-to-view-all/#post-18191\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 14:22:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18191@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:103:\"This plugin is designed to help you add hidden contents only visible for the visitor who are logged in.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"zhouzb889\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"brianfreytag on \"Social Media Widget\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/extend/plugins/social-media-widget/#post-18183\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 02:22:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18183@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"Place social media icons on your Sidebar by inputting URLs to your profiles!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"brianfreytag\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"fbarret on \"Display Last Post(s)\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/extend/plugins/display-last-posts/#post-18198\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 19:42:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18198@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"Allows to display the last post(s) anywhere on your WordPress site/blog, using a shortcode or a short PHP code (for the templates).\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"fbarret\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"agentstorm on \"Agent Storm\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"http://wordpress.org/extend/plugins/agent-storm/#post-18231\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 21:41:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18231@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:109:\"This plugin integrates Agent Storm Contact Management and IDX Functionality into\nyour Wordpress powered blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"agentstorm\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"apeatling on \"BuddyPress Followers\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/extend/plugins/buddypress-followers/#post-18221\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 16:48:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18221@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Allow your site members to follow other members\' activity.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"apeatling\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"cyclop on \"Wordpress Video\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://wordpress.org/extend/plugins/wordpress-video/#post-18218\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 15:37:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18218@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:116:\"Gives the opportunity to embed in post any video from:  Youtube.com, videos.sapo.pt,  google, vimeo.com and more!!!!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"cyclop\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"jamesbenson on \"Constant Contact for Wordpress\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/extend/plugins/constant-contact-api/#post-15851\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Feb 2010 10:55:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"15851@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"Integrate Constant Contact into your website with this full-featured plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"jamesbenson\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"madeinthayaland on \"WP Minify\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/extend/plugins/wp-minify/#post-9940\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 01 Apr 2009 00:34:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"9940@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"This plugin uses the Minify engine to combine and compress JS and CSS files\nto improve page load time.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"madeinthayaland\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"eskapism on \"Simple Fields\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://wordpress.org/extend/plugins/simple-fields/#post-17865\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 09 May 2010 20:08:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"17865@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"It\'s a field manager.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"eskapism\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:38:\"idxco on \"IDX Broker Wordpress Plugin\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"http://wordpress.org/extend/plugins/idx-broker-wordpress-plugin/#post-17949\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 12 May 2010 23:38:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"17949@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:136:\"The IDX Broker plugin gives Realtors&trade; an easier way to add IDX Broker Widgets, Menu links, and Custom Links to any Wordpress blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"idxco\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"dphiffer on \"JSON API\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/extend/plugins/json-api/#post-14132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 11 Nov 2009 01:06:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"14132@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"A RESTful API for WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"dphiffer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"sethshoultes on \"Advanced Events Registration\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wordpress.org/extend/plugins/advanced-events-registration/#post-15038\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 30 Dec 2009 07:34:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"15038@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:136:\"Out-of-the-box Events Registration integrated with PayPal IPN for your Wordpress blog/website. Upgrade to Pro Version | Donate | Support\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"sethshoultes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:23:\"sebaxtian on \"Kalendas\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/extend/plugins/kalendas/#post-18200\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 23:31:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"18200@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"Kalendas gets your events from multiple Google Calendars and displays them in your page using a time range.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"sebaxtian\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:7:{s:12:\"content-type\";s:24:\"text/html; charset=UTF-8\";s:13:\"last-modified\";s:19:\"2009-07-24 01:14:56\";s:4:\"etag\";s:34:\"\"987c4ad3d519b7bf8a3a14ca7b383324\"\";s:14:\"content-length\";s:4:\"6932\";s:4:\"date\";s:29:\"Fri, 28 May 2010 03:52:35 GMT\";s:6:\"server\";s:9:\"LiteSpeed\";s:10:\"connection\";s:5:\"close\";}s:5:\"build\";s:14:\"20090627192103\";}','no'),(860,0,'akismet_available_servers','a:4:{s:11:\"72.233.69.3\";b:1;s:12:\"66.135.58.61\";b:1;s:12:\"66.135.58.62\";b:1;s:11:\"72.233.69.2\";b:1;}','yes'),(76,0,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:9:{i:0;s:7:\"pages-2\";i:1;s:10:\"archives-2\";i:2;s:6:\"meta-2\";i:3;s:17:\"recent-comments-2\";i:4;s:8:\"search-2\";i:5;s:14:\"recent-posts-2\";i:6;s:10:\"calendar-2\";i:7;s:7:\"links-2\";i:8;s:11:\"tag_cloud-2\";}s:9:\"sidebar-1\";a:2:{i:0;s:8:\"search-3\";i:1;s:10:\"calendar-4\";}s:13:\"array_version\";i:3;}','yes'),(79,0,'cron','a:4:{i:1275219100;a:2:{s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1275240651;a:1:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1275283859;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(453,0,'auth_salt','xkAo@tEEb*%t','yes'),(454,0,'logged_in_salt','i(5BscyaufxG','yes'),(430,0,'page_on_front','0','yes'),(431,0,'page_for_posts','','yes'),(321,0,'wordpress_api_key','c4edfe108847','yes'),(322,0,'akismet_discard_month','true','yes'),(323,0,'akismet_spam_count','12257','yes'),(456,0,'show_avatars','1','yes'),(457,0,'avatar_rating','G','yes'),(458,0,'upload_url_path','','yes'),(459,0,'thumbnail_size_w','150','yes'),(460,0,'thumbnail_size_h','150','yes'),(461,0,'thumbnail_crop','1','yes'),(462,0,'medium_size_w','300','yes'),(463,0,'medium_size_h','300','yes'),(464,0,'avatar_default','mystery','yes'),(465,0,'enable_app','1','yes'),(466,0,'enable_xmlrpc','1','yes'),(467,0,'large_size_w','1024','yes'),(468,0,'large_size_h','1024','yes'),(469,0,'image_default_link_type','file','yes'),(470,0,'image_default_size','','yes'),(471,0,'image_default_align','','yes'),(472,0,'close_comments_for_old_posts','0','yes'),(473,0,'close_comments_days_old','14','yes'),(474,0,'thread_comments','0','yes'),(475,0,'thread_comments_depth','5','yes'),(476,0,'page_comments','1','yes'),(477,0,'comments_per_page','50','yes'),(478,0,'default_comments_page','newest','yes'),(479,0,'comment_order','asc','yes'),(480,0,'use_ssl','0','yes'),(481,0,'sticky_posts','a:0:{}','yes'),(482,0,'dismissed_update_core','a:0:{}','yes'),(483,0,'dashboard_widget_options','a:3:{s:24:\"dashboard_incoming_links\";a:5:{s:4:\"home\";s:32:\"http://www.intelligrape.com/blog\";s:4:\"link\";s:114:\"http://blogsearch.google.com/blogsearch?hl=en&scoring=d&partner=wordpress&q=link:http://www.intelligrape.com/blog/\";s:3:\"url\";s:147:\"http://blogsearch.google.com/blogsearch_feeds?hl=en&scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://www.intelligrape.com/blog/\";s:5:\"items\";i:10;s:9:\"show_date\";b:0;}s:17:\"dashboard_primary\";a:7:{s:4:\"link\";s:33:\"http://wordpress.org/development/\";s:3:\"url\";s:38:\"http://wordpress.org/development/feed/\";s:5:\"title\";s:26:\"WordPress Development Blog\";s:5:\"items\";i:2;s:12:\"show_summary\";i:1;s:11:\"show_author\";i:0;s:9:\"show_date\";i:1;}s:19:\"dashboard_secondary\";a:4:{s:4:\"link\";s:28:\"http://planet.wordpress.org/\";s:3:\"url\";s:33:\"http://planet.wordpress.org/feed/\";s:5:\"title\";s:20:\"Other WordPress News\";s:5:\"items\";i:5;}}','yes'),(484,0,'nonce_salt','uyveE!ZcY4vZ','yes'),(862,0,'current_theme','Intelligrape Blog','yes'),(822,0,'_transient_doing_cron','1275393802','yes'),(4389,0,'_transient_update_core','O:8:\"stdClass\":3:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":5:{s:8:\"response\";s:6:\"latest\";s:3:\"url\";s:30:\"http://wordpress.org/download/\";s:7:\"package\";s:40:\"http://wordpress.org/wordpress-2.9.2.zip\";s:7:\"current\";s:5:\"2.9.2\";s:6:\"locale\";s:5:\"en_US\";}}s:12:\"last_checked\";i:1275197529;s:15:\"version_checked\";s:5:\"2.9.2\";}','yes'),(824,0,'widget_links','a:2:{i:2;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(825,0,'widget_search','a:3:{i:2;a:0:{}i:3;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(821,0,'db_upgraded','','yes'),(4668,0,'_site_transient_timeout_theme_roots','1275395241','yes'),(4669,0,'_site_transient_theme_roots','a:3:{s:12:\"Intelligrape\";s:7:\"/themes\";s:7:\"classic\";s:7:\"/themes\";s:7:\"default\";s:7:\"/themes\";}','yes'),(816,0,'_transient_random_seed','efa046e5e1f0da44ac596617f897d726','yes'),(817,0,'timezone_string','','yes'),(818,0,'embed_autourls','1','yes'),(819,0,'embed_size_w','','yes'),(820,0,'embed_size_h','600','yes'),(4556,0,'_transient_timeout_feed_mod_36bb75df7fff0ebbab8ca4938480c056','1275061953','no'),(4557,0,'_transient_feed_mod_36bb75df7fff0ebbab8ca4938480c056','1275018753','no'),(4541,0,'_transient_timeout_feed_0ff4b43bd116a9d8720d689c80e7dfd4','1275061953','no'),(4560,0,'_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c','1275061954','no'),(4561,0,'_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c','1275018754','no'),(4547,0,'_transient_timeout_feed_a5420c83891a9c88ad2a4f04584a5efc','1275061955','no'),(4548,0,'_transient_feed_a5420c83891a9c88ad2a4f04584a5efc','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:23:\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 28 May 2010 03:33:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"matt on \"Akismet\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"http://wordpress.org/extend/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"15@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"takayukister on \"Contact Form 7\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://wordpress.org/extend/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"2141@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"takayukister\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:38:\"bravenewcode on \"WPtouch iPhone Theme\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"http://wordpress.org/extend/plugins/wptouch/#post-5468\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 May 2008 04:58:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"5468@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"WPtouch automatically transforms your WordPress blog into an iPhone application-style theme, complete with ajax loading articles and effects, when vie\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"bravenewcode\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"arnee on \"Google XML Sitemaps\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"http://wordpress.org/extend/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"132@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"arnee\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"uberdose on \"All in One SEO Pack\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"753@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:92:\"Automatically optimizes your Wordpress blog for Search Engines (Search Engine Optimization).\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"MikeChallis on \"Fast and Secure Contact Form\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://wordpress.org/extend/plugins/si-contact-form/#post-12636\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 Aug 2009 01:20:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"12636@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:137:\"A super customizable contact form that lets your visitors send you email. Blocks all common spammer tactics. Spam is no longer a problem.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"MikeChallis\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"eight7teen on \"SexyBookmarks\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/extend/plugins/sexybookmarks/#post-9249\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Feb 2009 11:30:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"9249@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"Adds an attractive social bookmarking menu to your posts, pages, index, or any combination of the three.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"eight7teen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"alexrabe on \"NextGEN Gallery\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/extend/plugins/nextgen-gallery/#post-1169\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 23 Apr 2007 20:08:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"1169@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"NextGEN Gallery is a full integrated Image Gallery plugin for WordPress with a Flash slideshow option.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"alexrabe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"orenshmu on \"Post videos and photo galleries\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"http://wordpress.org/extend/plugins/post-rich-videos-and-photos-galleries/#post-7094\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 21 Sep 2008 12:15:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"7094@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"Post your videos and photo galleries/flash slideshows easily and in seconds.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"orenshmu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:23:\"GamerZ on \"WP-PageNavi\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"http://wordpress.org/extend/plugins/wp-pagenavi/#post-363\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 23:17:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"363@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"Adds a more advanced paging navigation to your WordPress site.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"GamerZ\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"freediver on \"Smart YouTube\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"http://wordpress.org/extend/plugins/smart-youtube/#post-2935\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 12 Feb 2008 12:05:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"2935@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:112:\"Smart Youtube plugin allows you to insert full featured YouTube videos into your post, comments and in RSS feed.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"freediver\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"whiteshadow on \"Broken Link Checker\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/extend/plugins/broken-link-checker/#post-2441\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 08 Oct 2007 21:35:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"2441@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:129:\"This plugin will check your posts, comments and other places for broken links and missing images and notify you if any are found.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"whiteshadow\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"cavemonkey50 on \"Google Analyticator\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://wordpress.org/extend/plugins/google-analyticator/#post-130\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"130@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"Adds the necessary JavaScript code to enable Google Analytics. Includes widgets for Analytics data display.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"cavemonkey50\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"Rajesh Babu on \"Platinum SEO Pack\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.org/extend/plugins/platinum-seo-pack/#post-6066\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jun 2008 15:04:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"6066@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"Platinum SEO Plugin offers Complete onsite SEO solution for your Wordpress blog.Platinum SEO Plugin offers all the functionalities of All In One SEO p\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Rajesh Babu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:7:\"\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"dtsn on \"TweetMeme Button\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://wordpress.org/extend/plugins/tweetmeme/#post-9292\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 24 Feb 2009 14:55:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"9292@http://wordpress.org/extend/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"Adds a button which easily lets you retweet your blog posts.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"dtsn\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:7:{s:12:\"content-type\";s:24:\"text/html; charset=UTF-8\";s:13:\"last-modified\";s:19:\"2007-03-09 22:11:30\";s:4:\"etag\";s:34:\"\"8675051e89bf6e8eba42545ba20839d9\"\";s:14:\"content-length\";s:4:\"6891\";s:4:\"date\";s:29:\"Fri, 28 May 2010 03:52:35 GMT\";s:6:\"server\";s:9:\"LiteSpeed\";s:10:\"connection\";s:5:\"close\";}s:5:\"build\";s:14:\"20090627192103\";}','no'),(4539,0,'_transient_feed_36bb75df7fff0ebbab8ca4938480c056','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:1:\"\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:4:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"link:http://www.intelligrape.com/blog/ - Google Blog Search\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:117:\"http://blogsearch.google.com/blogsearch?hl=en&scoring=d&ie=ISO-8859-1&num=10&q=link:http://www.intelligrape.com/blog/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"Google Blog Search Results: <b>3</b> results for <b>http://www.intelligrape.com/blog/</b> - showing 1 through 3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:3:{i:0;a:6:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:3:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"links for 2010-04-21\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://inetgate.wordpress.com/2010/04/22/links-for-2010-04-21/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:317:\"Buy Comments for  your Blog or Facebook Page. Start the Conversation. ブログにコメントを書いてくれる有償のサービス。いわゆるサクラを雇ってブログをにぎやかに見せかける．．．電波系ブログだとこのサービスを使い出すところが出てくる悪寒。 ...\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:3:{s:9:\"publisher\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"思考と習作（ブックマーク）\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"inetgate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"date\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Wed, 21 Apr 2010 17:02:13 GMT\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:3:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"Accessing Session Map in the Domain or Service Layer <b>...</b>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://bradrhoads.blogspot.com/2010/01/accessing-session-map-in-domain-or.html\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:226:\"Accessing Session Map in the Domain or Service Layer « IntelliGrape Blog: \"The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can  be directly accessed by the name “session”. ...\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:3:{s:9:\"publisher\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Brad&#39;s Blog\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Brad Rhoads\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"date\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Fri, 08 Jan 2010 04:18:00 GMT\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:3:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"Using jQuery and Grails to create chained selects / drop-downs <b>...</b>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://bradrhoads.blogspot.com/2009/10/using-jquery-and-grails-to-create.html\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:206:\"Using jQuery and Grails to create chained selects / drop-downs « IntelliGrape Blog: \"Chain select basically means populating the next drop-down on the basis of what you select in the present drop-down. ...\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:3:{s:9:\"publisher\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Brad&#39;s Blog\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Brad Rhoads\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"date\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Thu, 22 Oct 2009 16:49:00 GMT\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:36:\"http://a9.com/-/spec/opensearch/1.1/\";a:3:{s:12:\"totalResults\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:10:\"startIndex\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:12:\"itemsPerPage\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"3\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:8:{s:4:\"date\";s:29:\"Fri, 28 May 2010 03:52:33 GMT\";s:6:\"pragma\";s:8:\"no-cache\";s:7:\"expires\";s:29:\"Fri, 01 Jan 1990 00:00:00 GMT\";s:13:\"cache-control\";s:25:\"no-cache, must-revalidate\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"set-cookie\";s:138:\"PREF=ID=7a1270be45e32a21:TM=1275018753:LM=1275018753:S=UzQLvrvPa7ImxLtI; expires=Sun, 27-May-2012 03:52:33 GMT; path=/; domain=.google.com\";s:22:\"x-content-type-options\";s:7:\"nosniff\";s:6:\"server\";s:4:\"bsfe\";}s:5:\"build\";s:14:\"20090627192103\";}','no'),(4538,0,'_transient_timeout_feed_36bb75df7fff0ebbab8ca4938480c056','1275061953','no'),(4558,0,'_transient_timeout_feed_mod_0ff4b43bd116a9d8720d689c80e7dfd4','1275061954','no'),(4559,0,'_transient_feed_mod_0ff4b43bd116a9d8720d689c80e7dfd4','1275018754','no'),(4544,0,'_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c','1275061954','no'),(4545,0,'_transient_feed_867bd5c64f85878d03a060509cd2f92c','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"Dev Blog: WordPress 3.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1358\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/development/2010/05/wordpress-3-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2029:\"<p>As Matt teased earlier, the first release candidate (RC1) for WordPress 3.0 is now available. What&#8217;s an RC? An RC comes after beta and before the final launch. It means we think we&#8217;ve got everything done: all features finished, all bug squashed, and all potential issues addressed. But, then, with over 20 million people using WordPress with a wide variety of configurations and hosting setups, it&#8217;s entirely possible that we&#8217;ve missed something. So! For the brave of heart, please download the RC and test it out (but not on your live site unless you&#8217;re extra adventurous). Some things to know:</p>\n<ul>\n<li>Custom menus are finished! Yay!</li>\n<li>Multi-site is all set.</li>\n<li>The look of the WordPress admin has been lightened up a little bit, so you can focus more on your content.</li>\n<li>There are a ton of changes, so plugin authors, please test your plugins <strong>now</strong>, so that if there is a compatibility issue, we can figure it out before the final release.</li>\n<li>Plugin and theme *users* are also encouraged to test things out. If you find problems, let your plugin/theme authors know so they can figure out the cause.</li>\n<li>There are a couple of <a href=\"http://wordpress.org/development/feed/ http://core.trac.wordpress.org/report/5\">known issues</a>.</li>\n</ul>\n<p>If you are testing the RC and come across a bug, you can:</p>\n<ul>\n<li>Report it on the <a href=\"http://lists.automattic.com/mailman/listinfo/wp-testers\">wp-testers mailing list</a></li>\n<li>Join the dev chat and tell us live at irc.freenode.net #wordpress-dev</li>\n<li>File a bug ticket on the <a href=\"https://core.trac.wordpress.org/query?status=reopened&amp;status=assigned&amp;status=reviewing&amp;status=new&amp;status=accepted&amp;group=status&amp;milestone=3.0\">WordPress Trac </a></li>\n</ul>\n<p>We hope you enjoy playing with the 3.0 RC as much as we&#8217;ve enjoyed making it for you. Enjoy!</p>\n<p><a href=\"http://wordpress.org/wordpress-3.0-RC1.zip\">Download WordPress 3.0 RC1</a></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 28 May 2010 02:35:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Dev Blog: Lucky Seven\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1354\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"http://wordpress.org/development/2010/05/lucky-seven/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1902:\"<p>Has it really been seven years since the first release of WordPress? It seems like just yesterday we were fresh to the world, a new entrant to a market  everyone said was already saturated. (As a side note, if the common perception is that a market is finished and that everything interesting has been done already, it&#8217;s probably a really good time to enter it.)</p>\n<p>The growth over the past year has blown me away. Since our last birthday we&#8217;ve doubled theme downloads to over 10 million, and doubled plugin downloads to 60 million. Most importantly, we continued to grow the development community to 1,528 people active on Trac and 13 committers, both numbers the highest in the history of WordPress.</p>\n<p>That&#8217;s 1,528 people pouring their hearts and souls into GPL software we all own, we all build on, we can use as we please, we can all make better. We&#8217;ve evolved from a simple script to a web platform.</p>\n<p>We&#8217;re on the cusp of version 3.0, with a release candidate coming out any minute now.</p>\n<p>If you&#8217;d like to celebrate WordPress&#8217;s birthday with us &#8212; tell a friend! Help them upgrade their blog or find the perfect theme. Talk about how WordPress is built by and for a community. Drop in to help test 3.0, including all the plugins you use. Write something to take advantage of the new 3.0 features, or teach your friends how to. If you buy any themes or plugins, make sure they&#8217;re GPL or compatible just like WordPress. We&#8217;ve got a long road ahead of us, it&#8217;s important that we not forget that Open Source got us this far, and is the only way we&#8217;re going to get to the next level. The whole of what we can build together is far greater than the sum of our parts. Spread the good word. <img src=\"http://wordpress.org/development/wp-includes/images/smilies/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" /> </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 23:04:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Matt: Warning: Undo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34457\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"http://ma.tt/2010/05/warning-undo/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:324:\"<p><a href=\"http://www.alistapart.com/articles/neveruseawarning/\">A List Apart: Articles: Never Use a Warning When you Mean Undo</a>. I think I missed that one when it came out. It&#8217;s excellent! Encapsulates a lot of the thinking that went into the painstaking implementation of &#8220;undo&#8221; in WordPress 2.9.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 22:28:54 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Akismet: Akismet plugin 2.2.8\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://blog.akismet.com/?p=366\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"http://blog.akismet.com/2010/05/27/akismet-plugin-2-2-8/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1589:\"<p>Version 2.2.8 of the Akismet plugin for WordPress is <a href=\"http://wordpress.org/extend/plugins/akismet/\">now available</a>.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/akismet/changelog/\">Changes in this version</a> include better diagnostic checks, and fixes for a bug that prevented false positive reports from being submitted in some circumstances.</p>\n<p>Users of modern WordPress versions can upgrade by following the prompts in the wp-admin dashboard.</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/akismet.wordpress.com/366/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/akismet.wordpress.com/366/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/akismet.wordpress.com/366/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/akismet.wordpress.com/366/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/akismet.wordpress.com/366/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/akismet.wordpress.com/366/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/akismet.wordpress.com/366/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/akismet.wordpress.com/366/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/akismet.wordpress.com/366/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/akismet.wordpress.com/366/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=blog.akismet.com&blog=116920&post=366&subd=akismet&ref=&feed=1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 05:36:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"WordPress.tv: John Hawkins: Beginning Plugin Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://wordpress.tv/?p=3820\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.tv/2010/04/24/john-hawkins-plugin-development-oc10/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1409:\"<div id=\"x-video-2\" class=\"video-player\">\n\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/3820/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/3820/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wptv.wordpress.com/3820/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wptv.wordpress.com/3820/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wptv.wordpress.com/3820/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wptv.wordpress.com/3820/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wptv.wordpress.com/3820/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wptv.wordpress.com/3820/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wptv.wordpress.com/3820/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wptv.wordpress.com/3820/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=3820&subd=wptv&ref=&feed=1\" /><div><a href=\"http://wordpress.tv/2010/04/24/john-hawkins-plugin-development-oc10/\"><img alt=\"John Hawkins: Beginning Plugin Development\" src=\"http://cdn.videos.wordpress.com/DpyTLYpd/regulartrack001_h264_896k_2997p_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 05:30:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Ryan Markel\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"Mike Little: Seven Years Since WordPress 0.7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"http://zed1.com/journalized/?p=1497\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"http://zed1.com/journalized/archives/2010/05/27/seven-years-since-wordpress-0-7/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:702:\"<p>It was seven years ago today that <a href=\"http://wordpress.org/development/2003/05/wordpress-now-available/\">WordPress was first released</a> . Just a few months after it&#8217;s <a href=\"http://ma.tt/2003/01/the-blogging-software-dilemma/#comment-445\">inception</a>.</p>\n<p>Now WordPress is a grown up CMS capable of <a href=\"http://wordpress.org/showcase/\">much more than just blogging</a>, but I noticed that one of the key points of that release still holds true.</p>\n<blockquote><p><strong>New Administration Interface</strong> — We’ve made it as simple as possible, and no more.</p></blockquote>\n<p>I&#8217;m eagerly looking forward to the 3.0 release, that is just around the corner.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 01:30:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"mike\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"Weblog Tools Collection: 5 free, ultralightweight WordPress themes that pack punch\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8097\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:110:\"http://weblogtoolscollection.com/archives/2010/05/26/5-free-ultralightweight-wordpress-themes-that-pack-punch/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1878:\"<p>These WordPress themes may be tiny, but they pack a big visual punch. These themes are great for sites with audiences with limited access to broadband, or any blog that wants to focus on speed and clean design.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/baughxie.png\" alt=\"Baughxie\" title=\"Baughxie\" width=\"300\" height=\"250\" class=\"alignnone size-full wp-image-8104\" /></p>\n<p><a href=\"http://wordpress.org/extend/themes/baughxie\">Baughxie</a> &#8211; a polished but very lightweight two column theme.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/mini.png\" alt=\"Mini\" title=\"Mini\" width=\"300\" height=\"225\" class=\"alignnone size-full wp-image-8108\" /></p>\n<p><a href=\"http://wordpress.org/extend/themes/mini\">Mini</a> &#8211; Minimal and elegant three column theme.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/simple-green.png\" alt=\"Simple Green\" title=\"Simple Green\" width=\"300\" height=\"216\" class=\"alignnone size-full wp-image-8106\" /></p>\n<p><a href=\"http://wordpress.org/extend/themes/simple-green\">Simple Green</a> &#8211; Very professional and very fast.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/r755.png\" alt=\"R755\" title=\"R755\" width=\"300\" height=\"225\" class=\"alignnone size-full wp-image-8103\" /></p>\n<p><a href=\"http://wordpress.org/extend/themes/r755\">R755</a> &#8211; Simple yet sophisticated. Can be either two or three columns.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/swift.png\" alt=\"Swift\" title=\"Swift\" width=\"300\" height=\"225\" class=\"alignnone size-full wp-image-8109\" /></p>\n<p><a href=\"http://wordpress.org/extend/themes/swift\">Swift</a> &#8211; This is actually more of a theme framework than a theme. It has a theme options page with layout, font, and color options. Nicely done.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 23:42:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Klint Finley\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Matt: Create Windows 7 Hotspots\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34454\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://ma.tt/2010/05/windows-7-hotspots/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:721:\"<p>Windows 7 has an <a href=\"http://www.wi-fiplanet.com/tutorials/article.php/3849841/How-to-Create-Wireless-Hosted-Networks-in-Windows-7.htm\">awesome utility called netsh</a> that allows you to create wifi networks, even if you&#8217;re already connected to a wifi network on the same interface, which is actually slightly better than <a href=\"http://docs.info.apple.com/article.html?path=Mac/10.5/en/8156.html\">the same feature on OS X</a>. If you don&#8217;t want to play with the command-line, <a href=\"http://www.connectify.me/\">there&#8217;s a handy utility called Connectify that makes creating a wifi hotspot from your Windows 7 box a breeze</a>. This was one of the things I missed most about my Mac laptops.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 26 May 2010 21:46:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Podcast: Killer Search Marketing Tips\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://wp-community.org/?p=534\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://feedproxy.google.com/~r/wordpresspodcast/~3/fCBj5jogUUE/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2177:\"<p><a href=\"http://www.ninebyblue.com/\">Vanessa Fox</a> is a seasoned speaker, blogger and now writer.  While at Google she worked on Webmaster Central and led the way on creating  lots of the great features that make it easier to understand how Google sees  your sites. On this week’s show we discussed: her new  book on <a href=\"http://www.marketingintheageofgoogle.com/\">marketing in the age of Google</a>, common SEO pitfalls to avoid, and  search engine optimization tips in particular about <a href=\"http://janeandrobot.com/\">helping search engines</a> discover your  content, using related articles and internal linking and a smart XML sitemap  strategy.</p>\n<p>Also touched upon is the use of keyword research tools for  businesses, bloggers, and basically anyone out there who has a website and  wants it to be found. Vanessa points at a great <a href=\"http://www.ninebyblue.com/marketing-in-the-age-of-google/keyword-research-tools-marketing-in-the-age-of-google/\">list  of keyword research tools</a> she has on her site.</p>\n<p>The news section this week included highlighting of a couple  videos from WordCampTV from <a href=\"http://wordpress.tv/2010/04/24/jonathan-dingman-wordpress-optimization-oc10/\">Jonathan  Dingman</a> and <a href=\"http://wordpress.tv/2010/03/06/daryl-koopersmith-rethinking-themes/\">Daryl  Koopersmith</a>. In addition, the <a href=\"http://buddypress.org/2010/05/buddypress-1-2-4/\">BuddyPress</a> update  was just released and comes highly recommended.</p>\n<p>Plugin picks of the week:</p>\n<ul>\n<li><a href=\"http://wordpress.org/extend/plugins/nktagcloud/\">Better Tag Cloud</a></li>\n<li><a href=\"http://wordpress.org/extend/plugins/facebook-comments-for-wordpress/\">Facebook  Comments for WordPress</a></li>\n</ul>\n<p><a href=\"http://wp-community.org/2010/05/25/search-marketing-tips/\">Killer Search Marketing Tips</a> is an episode of <a href=\"http://wp-community.org\">The WordPress Podcast</a>, which is a weekly podcast hosted by <a href=\"http://yoast.com/\">Joost de Valk</a> and <a href=\"http://www.w3-edge.com/\">Frederick Townes</a>.</p><img src=\"http://feeds.feedburner.com/~r/wordpresspodcast/~4/fCBj5jogUUE\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 22:33:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"joost@pressthis.com (Joost de Valk & Frederick Townes)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"WP Blackberry: Version 1.2: Stats, Audio, Share, and More !\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:38:\"http://blackberry.wordpress.org/?p=267\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://blackberry.wordpress.org/2010/05/25/release-1-2-stats-audio-share/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3035:\"<p>We are happy to announce that WordPress for BlackBerry version 1.2 <a href=\"http://blackberry.wordpress.org/download/\">is now available</a>.  Depending on your region or country, you might not see the latest version in the BlackBerry App World, but on your device you should now already see the latest version 1.2 .</p>\n<p>So what&#8217;s new in version 1.2:</p>\n<ul>\n<li>Ability to show comprehensive site stats for WordPress.com sites and for self-hosted sites running the <a href=\"http://wordpress.org/extend/plugins/stats/\">WP.com stats plugin</a></li>\n<li>Ability to add audio recordings to a post/page</li>\n<li>Ability to post media files that are not tied to post/page</li>\n<li>Ability to add a signature on posts created from the mobile app</li>\n<li>&#8220;1- click&#8221; share to WordPress within the native BlackBerry Browser and File Explorer</li>\n<li>Improvements on GPS support</li>\n<li>Redesigned GUI with touch support</li>\n</ul>\n<a href=\"http://blackberry.wordpress.org/2010/05/25/release-1-2-stats-audio-share/#gallery-1-slideshow\">Click to view slideshow.</a>\n<p>The app now supports the following languages:</p>\n<ul>\n<li>English</li>\n<li> Italian</li>\n<li>Finnish [Thanks Apuasi]</li>\n<li>French [Thanks Yann Nave]</li>\n<li>Indonesian [Thanks Kate of Pixel Insert]</li>\n<li>German [Thanks Frank Wessel]</li>\n<li> Portuguese (Portugal) [Thanks José Fontainhas]</li>\n<li>Japanese [Thanks Nao]</li>\n<li>Spanish [Thanks danivloven]</li>\n</ul>\n<p>Interested in translating the app ?  Visit <a href=\"http://translate.wordpress.org/projects\">translate.wordpress.org/projects</a>.  </p>\n<p>And a special thanks to Frank Wessel of Vodafone-DE for his invaluable feedback.</p>\n<p>Have questions or feedback that would enhance the app ? Please visit the <a href=\"http://blackberry.forums.wordpress.org/\">WordPress for BlackBerry forums</a>.</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wpblackberry.wordpress.com/267/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wpblackberry.wordpress.com/267/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wpblackberry.wordpress.com/267/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wpblackberry.wordpress.com/267/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wpblackberry.wordpress.com/267/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wpblackberry.wordpress.com/267/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wpblackberry.wordpress.com/267/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wpblackberry.wordpress.com/267/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wpblackberry.wordpress.com/267/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wpblackberry.wordpress.com/267/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=blackberry.wordpress.org&blog=8247031&post=267&subd=wpblackberry&ref=&feed=1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 20:30:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Danilo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"WordPress.tv: Jonathan Dingman: Essential WordPress Plugins & Optimization\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://wordpress.tv/?p=3810\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wordpress.tv/2010/04/24/jonathan-dingman-wordpress-optimization-oc10/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1407:\"<div id=\"x-video-4\" class=\"video-player\">\n\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/3810/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/3810/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wptv.wordpress.com/3810/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wptv.wordpress.com/3810/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wptv.wordpress.com/3810/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wptv.wordpress.com/3810/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wptv.wordpress.com/3810/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wptv.wordpress.com/3810/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wptv.wordpress.com/3810/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wptv.wordpress.com/3810/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=3810&subd=wptv&ref=&feed=1\" /><div><a href=\"http://wordpress.tv/2010/04/24/jonathan-dingman-wordpress-optimization-oc10/\"><img alt=\"Jonathan Dingman: Essential Plugins\" src=\"http://cdn.videos.wordpress.com/X1wZELVU/regulartrack_h264_896k_2997p_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 25 May 2010 04:00:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Ryan Markel\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Matt: Proustian Telephone\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34451\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"http://ma.tt/2010/05/proustian-telephone/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2109:\"<p>From <a href=\"http://www.alaindebotton.com/\">Alain de Botton&#8217;s</a> book <a href=\"http://www.amazon.com/How-Proust-Change-Your-Life/dp/0679779159\">How Proust Can Change Your Life</a>, highly recommended:</p>\n<blockquote><p>Take the unemotive example of the telephone. Bell invented it in 1876. By 1900, there were thirty thousand phones in France. Proust rapidly acquired one (tel. 29205) and particularly liked a service called the &#8220;theater-phone,&#8221; which allowed him to listen to live opera and theater in Paris venues.</p>\n<p>He might have appreciated his phone, but he noted how quickly everyone else began taking theirs for granted. As early as 1907, he wrote that the machine was</p>\n<blockquote><p>a supernatural instrument before whose miracle we used to stand amazed, and which we now employ without giving it a thought, to summon our tailor or to order an ice cream.</p></blockquote>\n<p>Moreover, if the confiserie had a busy line or the connection to the tailor a hum, instead of admiring the technological advances that had frustrated our sophisticated desires, we tended to react with childish ingratitude.</p>\n<blockquote><p>Since we are children who play with divine forces without shuddering before their mystery, we only find the telephone &#8220;convenient,&#8221; or rather, as we are <span id=\"more-34451\"></span>spoilt children, we find that &#8220;it isn&#8217;t convenient,&#8221; we fill <cite>Le Figaro</cite> with our complaints.</p></blockquote>\n<p>A mere thirty-one years separated Bell&#8217;s invention from Proust&#8217;s sad observations on the state of French telephone-appreciation. It had taken a little more than three decades for a technological marvel to cease attracting admiring glances and turn into a household object that we wouldn&#8217;t hesitate to condemn were we to suffer at its hands the minor inconvenience of a delayed <i>glace au chocolat</i>.</p>\n<p>It points clearly enough to the problems faced by human beings, comparatively humdrum things, in seeking eternal, or at least life-long, appreciation from their fellows.</p></blockquote>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 24 May 2010 16:30:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"Weblog Tools Collection: WordPress Plugin Releases for 05/24\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8093\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"http://weblogtoolscollection.com/archives/2010/05/24/wordpress-plugin-releases-for-0524-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3570:\"<p>Good morning everyone. Hope you all had a great weekend. Fortunately for me it is a long weekend here and I sure can use the extra day off.</p>\n<p>Here are the latest plugins fresh from the oven.</p>\n<h3>New Plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/work-from-home-projects/\">Work-from-home Projects</a><br />\nOnce activated, this plugin will create a widget displaying various work from home opportunities. From the options page you can type in your own keywords to select which opportunities to display or go with the default. The appearance of the widget is also customizable.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/export-opml/\">Export OPML</a><br />\nThis plugin will export the visible items in your blogroll to a OPML file in your blog root. Then you need only create a link to it somewhere. Handy if you have a large list of links and don&#8217;t want to clutter your blog.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/picnet-mouse-eye-tracking-service-plugin/\">Mouse Eye Tracking Service</a><br />\nThe plugin will tap in to PicNet&#8217;s Mouse Eye Tracking Service, a web analytics service which tracks user activity on your site and displays the data in the form of heat maps, click maps, page navigation maps, etc. Requires registration with Mouse Eye Tracking Service. They have both free and paid options.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/dynamicwp-image-flipper/\">DynamicWP Image Flipper</a><br />\nA cool way to show off an image gallery. View images by either clicking or dragging the animated corners as if reading a book. The plugin creates a widget which you can drop in to your sidebar.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/wow-recruit-widget/\">WOW Recruitment Widget</a><br />\nCreates a widget that displays recruitment status for the popular World of Warcraft game.</p>\n<h3>Updated Plugins</h3>\n<p><a href=\"http://wordpress.org/extend/plugins/osm/\">OSM</a> (OpenStreetMap)<br />\nAdd a OSM map to your posts and pages, complete with tracks and markers, via shortcode. You can also add geo data info to your post and pages.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/wp-google-buzz/\">WP Google-Buzz</a><br />\nSpice up your content by adding a Google Buzz button to your posts.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/facebook-comments-for-wordpress/\">Facebook Comments for WordPress</a><br />\nIntegrates the Facebook commenting system right into your website.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/avh-amazon/\">AVH Amazon</a><br />\nDisplay one or more random item(s) from your Amazon wish list, baby registry and/or wedding registry. You can use widgets or insert a shortcode in to your posts/pages.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/rico-ajax-menu/\">Rico Ajax Menu</a><br />\nCreate a menu with tabs, accordions or pull-down using Rico Ajax (http://openrico.org/).</p>\n<p><a href=\"http://wordpress.org/extend/plugins/bing-maps-widget/\">Bing Maps Widget</a><br />\nAdd a Bing Map to your sidebar via a widget or to your posts by adding a shortcode.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/all-in-one-webmaster/\">All in One Webmaster</a><br />\nIntegrate Google Webmaster Tools, Yahoo SiteExplorer, Bing Webmaster Central and more into your blog.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/seo-ultimate/\">SEO Ultimate</a><br />\nAn all-in-one SEO solution.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/scatter-gallery/\">Scatter Gallery</a><br />\nCreate a photo gallery with scattered thumbnails.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 24 May 2010 11:00:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Len Kutchma\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"Weblog Tools Collection: How to show ads to only search engine visitors using Who Sees Ads\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8085\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:119:\"http://weblogtoolscollection.com/archives/2010/05/24/how-to-show-ads-to-only-search-engine-visitors-using-who-sees-ads/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4270:\"<p>Perennial Weblog Tools Collection community favorite <a href=\"http://planetozh.com/blog/my-projects/wordpress-plugin-who-sees-ads-control-adsense-display/\">Who Sees Ads</a> can be used to show ads only to certain visitors &#8211; such as people who have arrived on your site from a search engine. It&#8217;s a useful way to improve your click-through-ratio, and please your regular readers by hiding ads from them.</p>\n<p>This is a quick introduction to using the plugin. Showing ads only to search engine visitors is extremely simple &#8211; Who Sees Ads can do much, much more. Check out the links at the end of this article for more information.</p>\n<p><strong>NOTE:</strong> Although the plugin says it&#8217;s for WordPress 2.5, it works fine with WordPress 2.92. I haven&#8217;t been able to test it with 3.0 yet because I don&#8217;t have any 3.0 test sites indexed in any search engines yet. Anyone else know if it works with 3.0?</p>\n<p>If you don&#8217;t want to do this with a plugin, you can do it with some simple PHP, see <a href=\"http://www.scratch99.com/2008/09/avoid-smart-pricing-show-adsense-only-to-search-engine-visitors/\">here</a>.</p>\n<p>1. Install and activate Who Sees Ads.</p>\n<p><strong>NOTE:</strong> If you use WordPress Firewall (and <a href=\"http://weblogtoolscollection.com/archives/2010/04/27/more-plugins-for-securing-your-wordpress-install/\">I recommend you do</a>), you&#8217;ll need to deactivate it while you install, activate, and configure this plugin.</p>\n<p>2. Click &#8220;Who Sees Ads&#8221; under &#8220;Settings&#8221; on the dashboard.</p>\n<p>3. Under &#8220;Edit Contexts&#8221; type a name for your context, preferably something descriptive like &#8220;Search Engines Only.&#8221;</p>\n<p>4. Drag the &#8220;if Visitor comes from a search engine then Display&#8221; box from the &#8220;Possible Rules&#8221; box to the &#8220;Active Rules&#8221; box.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/screenshot-11.jpg\" alt=\"Who Sees Ads? Screenshot 1\" title=\"Who Sees Ads? Screenshot 1\" width=\"400\" height=\"321\" class=\"alignnone size-full wp-image-8087\" /></p>\n<p>5. Paste the code for your ad (from Adsense or wherever) into the &#8220;Ad Code&#8221; box.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/screenshot-2.jpg\" alt=\"Who Sees Ads? Screenshot 2\" title=\"Who Sees Ads? Screenshot 2\" width=\"400\" height=\"371\" class=\"alignnone size-full wp-image-8089\" /></p>\n<p>6. Under &#8220;Edit Context&#8221; select the context your just created. Code for your new context should appear. You can now copy and paste this into posts or into your theme templates.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/screenshot-3.jpg\" alt=\"Who Sees Ads? Screenshot 3\" title=\"Who Sees Ads? Screenshot 3\" width=\"400\" height=\"131\" class=\"alignnone size-full wp-image-8090\" /></p>\n<p>That&#8217;s all you need to do to get this very simple configuration to work &#8211; but wouldn&#8217;t it be nice if you could drop that PHP code into a widget? You can, but you&#8217;ll need another plugin for that.</p>\n<p>7. Install and activate <a href=\"http://wordpress.org/extend/plugins/samsarin-php-widget/\">Samsarin PHP Widget</a> &#8211; this plugin allows you to add widgets to your sidebar that can execute PHP code.</p>\n<p>8. Go to &#8220;Widgets&#8221; under &#8220;Appearance&#8221; on the dashboard.</p>\n<p>9. Drag an instance of Samsarin PHP Widget to your sidebar and position it where you want the ads to appear.</p>\n<p>10. Paste the code from step 6 in the widget.</p>\n<p><strong>Don&#8217;t forget to turn WordPress Firewall back on if you turned it off.</strong></p>\n<p>For a look at some other things you can do with this plugin:</p>\n<p><a href=\"http://weblogtoolscollection.com/archives/2009/04/29/9-ways-to-make-your-wordpress-blog-smart/\">9 Ways to Make Your WordPress Blog “Smart”</a></p>\n<p><a href=\"http://weblogtoolscollection.com/archives/2008/06/11/hiding-advertisements-for-single-posts/\">Hiding Advertisements For Single Posts</a></p>\n<p>And of course <a href=\"http://planetozh.com/blog/my-projects/wordpress-plugin-who-sees-ads-control-adsense-display/\">visit the plugin homepage</a> for even more documentation and ideas!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 24 May 2010 06:46:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Klint Finley\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Weblog Tools Collection: WordPress Theme Releases for 05/23\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8073\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"http://weblogtoolscollection.com/archives/2010/05/23/wordpress-theme-releases-for-0523/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5647:\"<p>Good morning everyone and welcome to the latest installment of WordPress Theme Releases proudly brought to you by Weblog Tools Collection.</p>\n<h4><a href=\"http://www.blogging-inside.de/en/webdesign/kostenloses-phototheme-fuer-wordpress-joomla-und-drupal/\" title=\"Photo Theme: www.blogging-inside.de\">Photo Theme</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/PhotoTheme.png\" alt=\"\" title=\"PhotoTheme\" width=\"200\" height=\"147\" class=\"alignnone size-full wp-image-8074\" /></p>\n<p>Photo Theme is the newest release from Blogging Inside and much like their other themes features a soothing colour palette. This theme comes with a 300px wide sidebar (perfect for your ads) and a whopping seven widgetized areas. It is also localized and comes with the language files for English, German, French, Spanish, Italian and Russian.</p>\n<h4><a href=\"http://www.missui.com/archives/129.html\" title=\"Magnitade: www.missui.com\">Magnitade</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/Magnitade.png\" alt=\"\" title=\"Magnitade\" width=\"200\" height=\"138\" class=\"alignnone size-full wp-image-8075\" /></p>\n<p>Magnitade comes to us from Jing Xuan and sports a crisp and clean look. Although it is meant to be used as a gallery theme it can easily be adapted for other purposes. It requires the WP-PostViews and WordPress Related Posts plugins to function, both of which are included in the ZIP package.</p>\n<h4><a href=\"http://www.diaboliquedesign.com/diaboliquefountain/\" title=\"Diabolique Fountain: www.diaboliquedesign.com\">Diabolique Fountain</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/DiaboliqueFountain.png\" alt=\"\" title=\"DiaboliqueFountain\" width=\"200\" height=\"144\" class=\"alignnone size-full wp-image-8076\" /></p>\n<p>Diabolique Fountain, from Diabloique Design, is a nice looking dark theme which sports a horizontal navigation menu for displaying pages including a drop down menu for child pages, a left widgetized sidebar and a large footer area.</p>\n<h4><a href=\"http://3oneseven.com/21/wordpress-theme-dark-horizon/\" title=\"Dark Horizon: 3oneseven.com\">Dark Horizon</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/DarkHorizon.png\" alt=\"\" title=\"DarkHorizon\" width=\"200\" height=\"98\" class=\"alignnone size-full wp-image-8077\" /></p>\n<p>If you are unfamiliar with Milo&#8217;s work you are in for a treat as she turns out some of the most artistic and beautiful themes I&#8217;ve come across. Dark Horizon is no different. As the name implies, Dark Horizon is a dark portfolio theme with blue tints. It features a drop down menu for both pages and categories, a jQuery powered front page slider and built-in support for pagenavi and related posts. It is also cufon custom font enabled and comes with an options page. The only drawback is the theme is not hosted on her site. If you want to download it you will have to visit 4shared.com.</p>\n<h4><a href=\"http://3oneseven.com/28/300-wordpress-theme/\" title=\"300: 3oneseven.com\">300</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/300.png\" alt=\"\" title=\"300\" width=\"200\" height=\"105\" class=\"alignnone size-full wp-image-8078\" /></p>\n<p>300 is another visually stunning theme from Milo of 3oneseven. Like Dark Horizon, it is a dark theme with red highlights. It is cufon custom font enabled, contains Flickr support and has an options panel for full control over the front page. The footer holds links, complete with custom icons, to some of your favourite social networking sites such as Twitter and Facebook and the front page sports a jQuery slider. As is the case with Dark Horizon, if you want to download 300 you&#8217;ll be directed to 4shared.com.</p>\n<h4><a href=\"http://3oneseven.com/14/ocean-blue-theme/\" title=\"Ocean Blue: 3oneseven.com\">Ocean Blue</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/OceanBlue.png\" alt=\"\" title=\"OceanBlue\" width=\"200\" height=\"99\" class=\"alignnone size-full wp-image-8079\" /></p>\n<p>Ocean Blue is the third theme from Milo we are featuring. Unlike the previous two themes, this one is brighter with its main colours being blue and white. While it is aimed at the real estate niche, with a bit of work it can be used with a regular blog. Some of the features include a jQuery powered front page slider, built-in twitter status updates, a large footer area, drop down menu for pages and categories and built-in related posts. Included is a print style sheet. Again, if you want to download this theme you&#8217;ll need to do it from 4shared.com.</p>\n<h4><a href=\"http://mainolo.com/blog/2010/04/blitzy-free-wordpress-theme/\" title=\"Blitzy: mainolo.com\">Blitzy</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/blitzy.jpg\" alt=\"\" title=\"blitzy\" width=\"200\" height=\"138\" class=\"alignnone size-full wp-image-8080\" /></p>\n<p>If you&#8217;re looking for a less cluttered look, the single column Blitzy theme from Mainolo is worth taking a look at. Some believe that not having a sidebar will allow your visitors to concentrate on the content as there are no distractions. If you still want to include such things as links etc fear not for Blitzy comes with a fully widgetized footer. This is a clean and crisp looking theme that comes with an options page and allows you to change the header graphic from the backend.</p>\n<p>We hope you enjoy the latest offerings and as always if you have any comments, questions or suggestions, feel free to drop them in the comments section below. We always look forward to hearing from you.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 23 May 2010 06:27:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Len Kutchma\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Matt: Tips for Turkey\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34442\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"http://ma.tt/2010/05/tips-for-turkey/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"<p>I am going to be in Turkey for about 10 days starting on Tuesday. Any tips or must-sees in Istanbul and elsewhere?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 22 May 2010 03:37:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"BuddyPress: BuddyPress 1.2.4\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"http://buddypress.org/?p=1285\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://buddypress.org/2010/05/buddypress-1-2-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:976:\"<p>Up for grabs is <a href=\"http://wordpress.org/extend/plugins/buddypress/\">BuddyPress 1.2.4</a>, which includes a number of important bug fixes to the 1.2 branch of code and is a highly recommended upgrade.</p>\n<p>This highly anticipated version provides fixes to <a href=\"http://trac.buddypress.org/query?status=closed&amp;group=priority&amp;order=priority&amp;col=id&amp;col=summary&amp;col=owner&amp;col=type&amp;col=priority&amp;col=reporter&amp;col=keywords&amp;milestone=1.2.4\">74 reported tickets</a> and adds improved support for WordPress 3.0 to help ensure a safe and worry free upgrade. Check out the <a href=\"http://buddypress.org/about/release-history/\">BuddyPress release history</a> for details on the important fixes in this release.</p>\n<p>A tip of the hat to boonebgorges, dwenaus, wpmuguru, paulgibbs, rvenable, and everyone else that contributed. Your involvement in the community is very much appreciated and thanks for helping out this time around!</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 22 May 2010 01:00:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"John James Jacoby\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"WordPress.tv: Blair Williams: Pimp Your WordPress Plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://wordpress.tv/?p=3805\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"http://wordpress.tv/2010/04/24/blair-williams-wordpress-plugins-oc10/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1409:\"<div id=\"x-video-3\" class=\"video-player\">\n\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/3805/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/3805/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wptv.wordpress.com/3805/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wptv.wordpress.com/3805/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wptv.wordpress.com/3805/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wptv.wordpress.com/3805/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wptv.wordpress.com/3805/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wptv.wordpress.com/3805/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wptv.wordpress.com/3805/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wptv.wordpress.com/3805/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=3805&subd=wptv&ref=&feed=1\" /><div><a href=\"http://wordpress.tv/2010/04/24/blair-williams-wordpress-plugins-oc10/\"><img alt=\"Blair Williams: Pimp Your WordPress Plugin\" src=\"http://cdn.videos.wordpress.com/darIVVJN/ocwordcamp001_h264_1096k_2997p_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 May 2010 21:30:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Ryan Markel\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"WordPress.tv: Scott Elkin: WordPress and Forum Integration\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://wordpress.tv/?p=3798\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.tv/2010/04/24/scott-elkin-forum-integration-oc10/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1405:\"<div id=\"x-video-5\" class=\"video-player\">\n\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/3798/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/3798/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wptv.wordpress.com/3798/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wptv.wordpress.com/3798/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wptv.wordpress.com/3798/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wptv.wordpress.com/3798/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wptv.wordpress.com/3798/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wptv.wordpress.com/3798/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wptv.wordpress.com/3798/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wptv.wordpress.com/3798/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=3798&subd=wptv&ref=&feed=1\" /><div><a href=\"http://wordpress.tv/2010/04/24/scott-elkin-forum-integration-oc10/\"><img alt=\"Scott Elkin: WordPress and Forum Integration\" src=\"http://cdn.videos.wordpress.com/ihX2EsUw/ocwordcamp_h264_1096k_2997p_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 21 May 2010 02:30:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Ryan Markel\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Matt: DailyBurn & IAC\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34439\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"http://ma.tt/2010/05/dailyburn-iac/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:339:\"<p>A company I met through <a href=\"http://techstars.org/\">Techstars</a> and later invested in alongside <a href=\"http://fourhourworkweek.com/blog/\">Tim Ferriss</a>, <a href=\"http://dailyburn.com/\">DailyBurn</a>, <a href=\"http://techcrunch.com/2010/05/20/iac-dailyburn/\">just was bought by IAC</a>. Congrats to Andy and the team there.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 23:22:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"Joseph: What Should I Present On At WordCamp Reno?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://josephscott.org/?p=2299\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"http://josephscott.org/archives/2010/05/what-should-i-present-on-at-wordcamp-reno/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1156:\"<p>I&#8217;ve been asked to present at WordCamp Reno and we&#8217;ve been throwing around a few topic ideas.  If you are going to be attending the <a href=\"http://www.renotahoewordcamp.com/\">Reno Tahoe WordCamp</a> on June 12th here&#8217;s your chance to weigh in on what presentation I&#8217;ll be giving:</p>\n<p><br />\n<br />\n	<a href=\"http://polldaddy.com/poll/3228098/\">What topic should I present on at WordCamp Reno? &#8211; http://www.renotahoewordcamp.com/</a><span><a href=\"http://polldaddy.com/features-surveys/\">customer surveys</a></span><br />\n</p>\n\n\n<p>Related posts:<ol><li><a href=\"http://josephscott.org/archives/2009/04/reno-tahoe-wordcamp/\" rel=\"bookmark\" title=\"Permanent Link: Reno-Tahoe WordCamp\">Reno-Tahoe WordCamp</a></li>\n<li><a href=\"http://josephscott.org/archives/2010/04/wordcamp-san-francisco-2010/\" rel=\"bookmark\" title=\"Permanent Link: WordCamp San Francisco &#8211; 2010\">WordCamp San Francisco &#8211; 2010</a></li>\n<li><a href=\"http://josephscott.org/archives/2009/02/ill-be-at-wordcamp-denver/\" rel=\"bookmark\" title=\"Permanent Link: I&#8217;ll Be At WordCamp Denver\">I&#8217;ll Be At WordCamp Denver</a></li>\n</ol></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 16:15:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Joseph Scott\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"Dougal Campbell: Quick Tip: Faster WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://dougal.gunters.org/?p=2209\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:128:\"http://dougal.gunters.org/blog/2010/05/20/quick-tip-faster-wordpress-news?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3725:\"<div><img width=\"150\" height=\"150\" src=\"http://media.dougal.us.s3.amazonaws.com/wordpress/wp-content/uploads/2008/11/wplogo-notext-rgb.png\" class=\"attachment-post-thumbnail wp-post-image\" alt=\"WordPress\" title=\"WordPress\" /></div><p>By default, the &#8220;Other WordPress News&#8221; widget in your <a href=\"http://wordpress.org/\">WordPress</a> Dashboard only updates twice a day (every twelve hours). Personally, I like to get updates quicker than that. I check my Dashboard several times a day to see if there&#8217;s some new post that I should know about. So I set mine up to update every two hours. Frequently enough to keep me more up-to-date, but not so frequently that it might be annoying to the <a href=\"http://planet.wordpress.org/\">Planet WordPress</a> server.</p>\n<p>If you&#8217;d like to do the same, add this code snippet to your theme&#8217;s <code>functions.php</code> file, or add a plugin header to it and install as a regular plugin:</p>\n<div class=\"geshi no php\">\n<div class=\"head\">// Customize the Planet WordPress news feed update time:</div>\n<ol>\n<li class=\"li1\">\n<div class=\"de1\">add_filter<span class=\"br0\">&#40;</span> <span class=\"st0\">\'wp_feed_cache_transient_lifetime\'</span><span class=\"sy0\">,</span> <span class=\"st0\">\'dc_reschedule_rss_fetch\'</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">&#41;</span><span class=\"sy0\">;</span></div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\">&nbsp;</div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\"><span class=\"kw2\">function</span> dc_reschedule_rss_fetch<span class=\"br0\">&#40;</span> <span class=\"re1\">$lifetime</span><span class=\"sy0\">,</span> <span class=\"re1\">$url</span> <span class=\"br0\">&#41;</span> <span class=\"br0\">&#123;</span></div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\">&nbsp; <span class=\"kw1\">if</span> <span class=\"br0\">&#40;</span> <span class=\"kw2\">false</span> <span class=\"sy0\">!==</span> <span class=\"kw3\">strpos</span><span class=\"br0\">&#40;</span> <span class=\"re1\">$url</span><span class=\"sy0\">,</span> <span class=\"st0\">\'planet.wordpress.org\'</span> <span class=\"br0\">&#41;</span> <span class=\"br0\">&#41;</span> <span class=\"br0\">&#123;</span></div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\">&nbsp; &nbsp; <span class=\"re1\">$lifetime</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7200</span><span class=\"sy0\">;</span> <span class=\"co1\">// expire after 2 hours (7200 seconds)</span></div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\">&nbsp; <span class=\"br0\">&#125;</span></div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\">&nbsp; <span class=\"kw1\">return</span> <span class=\"re1\">$lifetime</span><span class=\"sy0\">;</span></div>\n</li>\n<li class=\"li1\">\n<div class=\"de1\"><span class=\"br0\">&#125;</span></div>\n</li>\n</ol>\n</div>\n<p>This will set the cache lifetime for the Planet Wordpress feed data to be two hours instead of twelve.</p>\n<p>If you use this tip, I also recommend increasing the number of feed items displayed, as suggested in my <a href=\"http://dougal.gunters.org/blog/2010/04/12/customize-your-wordpress-dashboard\">Customize Your WordPress Dashboard</a> article!</p>\n\n\n<p>Related posts:<ol><li><a href=\"http://dougal.gunters.org/blog/2007/02/13/openid-news\" rel=\"bookmark\" title=\"Permanent Link: OpenID News\">OpenID News</a></li>\n<li><a href=\"http://dougal.gunters.org/blog/2010/04/12/customize-your-wordpress-dashboard\" rel=\"bookmark\" title=\"Permanent Link: Customize Your WordPress Dashboard\">Customize Your WordPress Dashboard</a></li>\n<li><a href=\"http://dougal.gunters.org/blog/2004/04/03/quick-end-of-the-week-update\" rel=\"bookmark\" title=\"Permanent Link: Quick end-of-the-week update\">Quick end-of-the-week update</a></li>\n</ol></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 12:40:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Dougal\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress.tv: Maryrose Lyons: Writing for Blogs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://wordpress.tv/?p=3755\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"http://wordpress.tv/2010/03/06/maryrose-lyons-writing-ireland10/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1396:\"<div id=\"x-video-16\" class=\"video-player\">\n\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/3755/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/3755/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wptv.wordpress.com/3755/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wptv.wordpress.com/3755/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wptv.wordpress.com/3755/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wptv.wordpress.com/3755/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wptv.wordpress.com/3755/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wptv.wordpress.com/3755/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wptv.wordpress.com/3755/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wptv.wordpress.com/3755/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=3755&subd=wptv&ref=&feed=1\" /><div><a href=\"http://wordpress.tv/2010/03/06/maryrose-lyons-writing-ireland10/\"><img alt=\"Maryrose Lyons: Writing for Blogs\" src=\"http://cdn.videos.wordpress.com/lZduJz20/wcirl-writing-maryrose-lyons_1_std.original.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 19 May 2010 20:45:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Ryan Markel\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"Matt: Facebook Over-optimization\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34435\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"http://ma.tt/2010/05/facebook-over-optimization/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:604:\"<p>On Facebook I was trying to get to an event and clicked &#8220;see all&#8221; on the friend finder instead of the events area. Then something caught my eye, <a href=\"http://s.ma.tt/files/2010/05/fb-friends.jpg\">every friend Facebook was suggesting for me was female</a>, and most I didn&#8217;t know. (Update, there&#8217;s one guy in there.) The first part of that is interesting &#8212; perhaps they&#8217;re testing some optimization in the friend-adder with the assumption that since I&#8217;m a straight male I&#8217;m more likely to add girls than guys, but if so that seems a little skeezy.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 19 May 2010 17:53:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"Alex King: Why Custom Post Types are Great\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://alexking.org/?p=4343\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://alexking.org/blog/2010/05/19/why-custom-post-types-are-great\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1339:\"<p>WordPress 3.0 will introduce a simple programatic way for developers to create <a href=\"http://justintadlock.com/archives/2010/04/29/custom-post-types-in-wordpress\" rel=\"external\">custom post types</a>. I&#8217;ve seen people talking at length about this feature, but most discussion focuses on how you can have a custom display for certain content, support custom URL structures or <a href=\"http://kovshenin.com/archives/custom-post-types-in-wordpress-3-0/\" rel=\"external\">manage content differently</a>. These things aren&#8217;t new &#8211; they are all things you could do previously without too much trouble by using a little custom code with taxonomies or post meta (especially with the <a href=\"http://carringtontheme.com\">Carrington framework</a>).</p>\n<p>No, the real power of custom post types is more subtle &#8211; <strong>it removes those posts from default queries</strong>.</p>\n<p>Selecting posts based on certain criteria has always been pretty straightforward in WordPress. What has been hard has been excluding that content from all default queries (home, archives, category, feeds, comment feeds, etc.). By using a custom post type, you can easily exclude content from these default queries, and this is a <em>huge</em> win.</p>\n<img src=\"http://alexking.org/wp/?ak_action=api_record_view&id=4343&type=feed\" alt=\"\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 19 May 2010 15:41:50 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"WordPress Podcast: Small Business Fundamentals\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://wp-community.org/?p=519\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://feedproxy.google.com/~r/wordpresspodcast/~3/DlyltyyyZfc/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1951:\"<p>Lorna Li is the Marketing Manager of Salesforce.com, the leading Customer Relationship Management (CRM) tool. Discussed on the show were several topics helpful for small businesses (SMB) getting started with a web site, including: selecting a domain name, keyword research / discovery, site structure, how to get the right site design, choose the right <a href=\"http://markjaquith.wordpress.com/2010/05/14/web-hosts-should-adapt-to-wordpress/\">web host</a>, <a href=\"http://codepoet.com/\">find consultants</a> and even selecting the <a href=\"http://lornali.com/social-media/concise-list-seo-plugins-wordpress\">best plugins</a> to save you time.<br />\n Plugin Picks of the Week:</p>\n<ul>\n<li><a href=\"http://alexking.org/blog/2010/05/13/exclude-file-type-requests\">Exclude File Type Requests</a></li>\n<li><a href=\"http://blogwaffe.com/2006/10/04/wordpress-plugin-no-self-pings/\">No Self Pings</a></li>\n<li><a href=\"http://www.salesforce.com/form/signup/wordpress-to-lead.jsp?d=70130000000F4Mw\">WordPress-to-lead for SalesForce</a></li>\n</ul>\n<p><strong>Bonus:</strong> next to working at <a href=\"http://salesforce.com/\">Salesforce CRM</a>, you can also hire Lorna as a <a href=\"http://lornali.com/\">Green Marketing Consultant</a> through her blog, which is packed with good info on marketing, which is still awesomely useful even if you&#8217;re not that green. She has a good presentation on <a href=\"http://lornali.com/social-media/bootstrap-marketing-101\">bootstrap marketing</a> too that is worth checking out.</p>\n<p><a href=\"http://wp-community.org/2010/05/19/small-business-fundamentals/\">Small Business Fundamentals</a> is an episode of <a href=\"http://wp-community.org\">The WordPress Podcast</a>, which is a weekly podcast hosted by <a href=\"http://yoast.com/\">Joost de Valk</a> and <a href=\"http://www.w3-edge.com/\">Frederick Townes</a>.</p><img src=\"http://feeds.feedburner.com/~r/wordpresspodcast/~4/DlyltyyyZfc\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 19 May 2010 08:00:02 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"joost@pressthis.com (Joost de Valk & Frederick Townes)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Matt: BankSimple\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34433\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"http://ma.tt/2010/05/banksimple/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:778:\"<p>When I <a href=\"http://ma.tt/2009/08/starting-a-bank/\">wrote about starting a bank, aka SafeBank</a>, I was overwhelmed by the feedback and at least once a week since then I&#8217;ve been contacted by someone working on the idea. One I hadn&#8217;t heard of yet though is <a href=\"http://banksimple.net/\">BankSimple</a>, which I noticed yesterday because <a href=\"http://al3x.net/2010/05/17/something-new.html\">Alex Payne is leaving Twitter to work on it</a>. I&#8217;m fully focused on <a href=\"http://wordpress.org/\">WordPress</a> and <a href=\"http://automattic.com/\">Automattic</a> so can&#8217;t be involved with any new ventures as more than an advisor, but I&#8217;m glad smart people are tackling the problem and I hope to have an account at one (or more) someday.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 May 2010 15:32:15 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Matt: Postrank Platform Roundup\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34431\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"http://ma.tt/2010/05/postrank-platform-roundup/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:421:\"<p><a href=\"http://www.readwriteweb.com/archives/surprise_traditional_blogging_platforms_still_reig.php#comment-212047\">Surprise: Traditional Blogging Platforms Still Reign Supreme</a>, comparative activity metrics across blogging platforms using some data from Postrank. I think if they included WP.com users with custom domains we would be double or trip where listed &#8212; even more if they included self-hosted.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 May 2010 15:10:40 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"Joseph: wp-comments-notifier\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://josephscott.org/?p=2290\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"http://josephscott.org/archives/2010/05/wp-comments-notifier/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1233:\"<p>If you use Windows for your desktop there&#8217;s a handy little tool for WordPress comment management &#8211; <a href=\"http://www.deanlee.cn/projects/wp-comments-notifiera-wordpress-comments-notifier/\">wp-comments-notifier</a>.  It uses the WordPress XML-RPC APIs to check for new comments and manage them.  How-To Geek has a <a href=\"http://www.howtogeek.com/howto/17431/manage-your-wordpress-blog-comments-from-your-windows-desktop/\">great post describing how to use it</a>.</p>\n\n\n<p>Related posts:<ol><li><a href=\"http://josephscott.org/archives/2010/04/the-easy-way-to-get-recent-comments-in-wordpress/\" rel=\"bookmark\" title=\"Permanent Link: The Easy Way To Get Recent Comments In WordPress\">The Easy Way To Get Recent Comments In WordPress</a></li>\n<li><a href=\"http://josephscott.org/archives/2008/12/wordpress-27-released-xml-rpc-and-atompub-changes/\" rel=\"bookmark\" title=\"Permanent Link: WordPress 2.7 Released &#8211; XML-RPC and AtomPub Changes\">WordPress 2.7 Released &#8211; XML-RPC and AtomPub Changes</a></li>\n<li><a href=\"http://josephscott.org/archives/2009/02/ill-be-at-wordcamp-denver/\" rel=\"bookmark\" title=\"Permanent Link: I&#8217;ll Be At WordCamp Denver\">I&#8217;ll Be At WordCamp Denver</a></li>\n</ol></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 May 2010 14:43:17 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Joseph Scott\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:23:\"Matt: Travel Minimalism\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34429\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"http://ma.tt/2010/05/travel-minimalism/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:440:\"<p>The best part about traveling is the forced minimalism. My life at home, as it has evolved, is quite complex and full of stuff. On the road I&#8217;m reduced to what I carry in a small backpack and hand bag &#8212; clutter becomes a physical burden. I really enjoy this simplicity as it helps me focus. One of my favorite things to watch as a friend or colleague travels more is how their bag gets smaller and smaller with each trip.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 18 May 2010 06:27:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:30;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Publisher Blog: Mike Pratt on BuddyPress – Social Networking in a Box\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://publisherblog.automattic.com/?p=951\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:96:\"http://publisherblog.automattic.com/2010/05/17/mike-pratt-buddypress-social-networking-in-a-box/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2288:\"<p>At a recent <a href=\"http://www.meetup.com/dfwwordpress/\">Dallas Fort Worth WordPress meetup</a>, <a href=\"http://mikepratt.tv/\">Mike Pratt</a> gave a presentation on how he&#8217;s using WordPress and BuddyPress to build his very own social network:</p>\n<blockquote><p>\n&#8230; there are a ton of excellent needs and reasons to use BuddyPress to take your site and turn it into the community it is begging to become. That’s the killer point: there needs to be a community underlying all of this. Maybe your focused on gardeners in Texas or stamp collectors in Des Moines or people around the world dealing with Cystic Fibrosis – if you have a community in mind then BuddyPress is an amazing tool because you can shape the community according to you/its needs. Take that Facebook (or Ning)!\n</p></blockquote>\n<p>The slides and the full video from the presentation and more of his thoughts are available at <a href=\"http://mikepratt.tv/2010/03/dfw-wordpress-meetup-buddypress-social-networking-in-box/\">mikepratt.tv</a></p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wordpresspublishers.wordpress.com/951/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wordpresspublishers.wordpress.com/951/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wordpresspublishers.wordpress.com/951/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wordpresspublishers.wordpress.com/951/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wordpresspublishers.wordpress.com/951/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wordpresspublishers.wordpress.com/951/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wordpresspublishers.wordpress.com/951/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wordpresspublishers.wordpress.com/951/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wordpresspublishers.wordpress.com/951/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wordpresspublishers.wordpress.com/951/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=publisherblog.automattic.com&blog=1470857&post=951&subd=wordpresspublishers&ref=&feed=1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 17 May 2010 23:36:22 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Raanan Bar-Cohen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:31;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"Alex King: Is WordPress a Platform or Product?\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://alexking.org/?p=4147\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"http://alexking.org/blog/2010/05/17/wordpress-platform-or-product\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:7393:\"<p>At <a href=\"http://crowdfavorite.com\">Crowd Favorite</a> we get a lot of inquiries from people who are interested in building something with or on WordPress. These potential projects vary greatly in scope and concept &#8211; some are just a couple of days, some are 6 months or more. To make things more complicated, these potential clients often view WordPress in very different ways. The main difference is fundamental &#8211; do they see WordPress as a platform or as a product?</p>\n<p>Some people view WordPress as a CMS platform to build on. They want us to help them create a website, service, etc. and they see WordPress as a platform that their idea can be built on. For these projects we will typically use some existing tools for various features but build customized solutions based on the feature set we work to define with the client. The final solution typically has a smooth and cohesive back-end administrative interface and is logically consistent throughout the feature set.</p>\n<p>These projects are typically larger engagements and these clients are typically willing to make a larger investment in the development of their project in exchange for a more cohesive, consistent and robust result.</p>\n<p>On the other side of the spectrum are people who come to us viewing WordPress (and the thousands of plugins that themes that are available for it) as a product. These folks typically are looking to create a website with a certain feature set and may already have in mind a collection of existing plugins that they think may be useful for creating these features. They expect the project to be more a matter of configuration than development.</p>\n<p>These clients are typically primarily interested in keeping costs down and will trade elegance for expedience.</p>\n<p>As you might imagine, these two very divergent approaches can lead to some significant challenges, especially when initially talking to potential clients.</p>\n<p>The first thing we do is try to figure out which camp a project falls into. Once we know if it&#8217;s a platform or product project, everything gets quite a bit easier. This can be much more difficult than you might imagine. Our prospective clients typically see WordPress in only one way, while we can see it from many angles given our extensive experience. A number of clients will describe what sounds like a platform implementation, then all of a sudden they may tell us something that swerves onto the product path. The opposite can also be true. We always try to determine this as early in the process as possible, but we&#8217;ve also had rare cases where a project has switched tracks in the middle &#8211; I recommend doing all you can to avoid this.</p>\n<p>Once we&#8217;ve established the type of project involved, we have to do a couple of things:</p>\n<ol>\n<li>determine if the client&#8217;s desired approach will lead to a successful implementation based on their description of the end result</li>\n<li>do a finger-in-the-air scope to budget check to make sure they are compatible</li>\n<li>determine if we are comfortable building the project as the client desires (we think it could be a product implementation, but there&#8217;s a <a href=\"http://www.randsinrepose.com/archives/2010/04/26/the_twinge.html\" rel=\"external\">Twinge</a>&#8230;)</li>\n<li>if we get through all of the aforementioned, create a rough development outline for the purposes of creating an estimate</li>\n</ol>\n<p>The first part here is the most important. It&#8217;s very important to us that we have a happy client at the end of a project. If we are hearing requirements that all lean towards a platform project but the client is voicing an opinion for a product implementation, that&#8217;s a concern. When everyone is on the same page, the chance of missing expectations is greatly reduced.</p>\n<p>For example, if a client wants to do a product implementation but has specific functional requirements for various components and is unwilling to relax those requirements based on existing functionality (in WordPress, a plugin, etc.), then we should really be talking about a platform project instead of a product project.</p>\n<p>There are also some significant differences in post-launch support and follow-up development with each approach. We will often engage in an ongoing support and maintenance relationship with clients whom we have developed larger platform sites for. These relationships generally run quite smoothly, with requests for additional features and functionality being built incrementally on top of the foundation we built in the initial implementation phase of the project.</p>\n<p>Conversely, for the product projects we engage in, it is more typical that we build the site or service and hand it off to the client to run from there. When the client comes back in the future and wants changes made, the ease of implementation and resulting cost of new features can vary widely based on how these new features can be implemented on the wide variance of approaches utilized by the off-the-shelf plugins that provide many of the features for their site. It&#8217;s also not uncommon for upgrades to a 3rd party plugin to change certain functionality in such a way that it no longer works exactly as desired for the client&#8217;s purposes.</p>\n<p>Another challenge with WordPress as a product engagements is managing expectations in regards to 3rd-party plugins and themes. In most cases we will try to budget time to code-review any plugin we include in one of our builds to make sure it is secure and will scale to client&#8217;s needs. This can result in us advising the client not to use the plugin or theme they had intended, or require additional time and cost investment in addressing shortcomings of the plugin or theme. There is also the issue of fixing functional bugs in these plugins.</p>\n<p>People who view WordPress as a product will typically expect that any collection of plugins will work elegantly and seemlessly together. Rarely is this the case. Even between experienced WordPress developers you will find preferences for different implementation approaches. Mix in plugins written by developers that do not have extensive WordPress experience and you can end up trying to weld the transmission from a 57 Chevy to a tricycle.</p>\n<p>The important thing for us from a project perspective is to be honest and consistent with our clients. They may not want to hear than plugin X and plugin Y aren&#8217;t going to be compatible, but it&#8217;s a lot better to tell them up front than to have to tell them late in the development cycle when you discover that you&#8217;ve run out of duct tape.</p>\n<p>While you can probably tell from my descriptions here that we prefer to work with WordPress as a platform because we like building elegant solutions. However, we do engage in WordPress as a product projects as well and have built some sites and services we are quite proud of.</p>\n<p>WordPress is both a platform and a product &#8211; it&#8217;s a wonderful and confusing world.</p>\n<p>If you&#8217;re a WordPress developer or are interested in building something interesting with WordPress, taking a moment to figure out if you need/want to use WordPress as a platform or as a product may save you quite a few headaches.</p>\n<img src=\"http://alexking.org/wp/?ak_action=api_record_view&id=4147&type=feed\" alt=\"\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 17 May 2010 21:33:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:32;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Matt: Vision\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34427\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://ma.tt/2010/05/vision/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:349:\"<p>&#8220;The difference between a vision and a hallucination is that other people can see the vision.&#8221; &#8212; <a href=\"http://blog.pmarca.com/\">Marc Andreessen</a> from <a href=\"http://ecorner.stanford.edu/authorMaterialInfo.html?mid=2457\">a talk at Stanford a few days ago</a>. Hat tip: <a href=\"http://www.niallkennedy.com/\">Niall</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 17 May 2010 21:12:09 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:33;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"Weblog Tools Collection: WordPress Theme Releases for 05/17\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8049\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"http://weblogtoolscollection.com/archives/2010/05/17/wordpress-theme-releases-for-0517/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3672:\"<p>Hello everyone. You may or may not know me. My name is Len and I normally toil away in the <a href=\"http://weblogtoolscollection.com/news/\" title=\"Weblogtoolscollection Forums\">forums</a> here at WLTC testing all of the theme submissions before they make it here to the main site. Our regular theme author Perurry is away for a while so I will be pulling double duty in his absence. If you have any comments, questions or suggestions please feel free to drop them in the comments section below.</p>\n<p>With that said, let&#8217;s take a look at some of the latest and greatest theme releases from the WordPress community.</p>\n<h4><a title=\"Oceanic Flight: www.jbwebdev.com\" href=\"http://www.jbwebdev.com/blog/free-wordpress-template-from-jbwebdev/\">Oceanic Flight</a></h4>\n<p><img class=\"alignnone size-full wp-image-8058\" title=\"oceanic_flight\" src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/oceanic_flight.png\" alt=\"\" height=\"150\" width=\"200\" /></p>\n<p>Oceanic Flight comes to us from JB WEBDEV. It sports two widgetized sidebars, horizontal navigation above the header image and a large search box in the header area. The theme comes in a wide-screen format with its main colours being white, gray and a soothing off-brown. It is easily customizable.</p>\n<h4><a href=\"http://www.dynamicwp.net/free-themes/naturalpaper-theme/\" title=\"NaturalPaper: www.dynamicwp.net\">NaturalPaper</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/NaturalPaper.jpg\" alt=\"\" title=\"NaturalPaper\" class=\"alignnone size-full wp-image-8061\" height=\"150\" width=\"200\" /></p>\n<p>NaturalPaper is the latest offering from the gang at DynamicWP. The theme has a sort of paper and wood feel to it. It comes with a widgetized sidebar including a tabber section to display your most popular posts, latest posts and comments. It has a horizontal menu above the header area to display pages and another below the header area for categories, including a drop down menu for sub-categories. From the theme&#8217;s options page you can change the default Gravatar image, exclude pages/categories from the nav menus, include your Twitter &#038; RSS links and turn off/on the TimThumb script.</p>\n<h4><a href=\"http://www.patricksy.com/technicolor/\" title=\"Technicolor: www.patricksy.com\">Technicolor</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/technicolor.png\" alt=\"\" title=\"technicolor\" class=\"alignnone size-full wp-image-8064\" height=\"138\" width=\"200\" /></p>\n<p>Technicolor is an elegant looking dark theme from WordPress Theme Designer. Although it is aimed at video bloggers, this theme can easily be used for regular blogs. It comes with a widgetized sidebar and footer and features a video showcase displayed on the home page which can be controlled from the theme&#8217;s options page.</p>\n<h4><a href=\"http://www.blogging-inside.de/en/webdesign/kostenloses-brownishorange-theme-fuer-wordpress-joomla-drupal-html/\" title=\"BrownishOrange: www.blogging-inside.de\">BrownishOrange</a></h4>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/BrownishOrange.png\" alt=\"\" title=\"BrownishOrange\" class=\"alignnone size-full wp-image-8066\" height=\"150\" width=\"200\" /></p>\n<p>BrownishOrange is, you guessed it, a brown and orange coloured theme. It is the latest release from the stable of BloggingInside who has been turning out quite a few themes if you have been paying attention to our forums. It&#8217;s appearance is quite soothing and comes with three widgetized areas: a content block above the main content area, the sidebar and another content block directly below the main content area.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 17 May 2010 05:26:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Len Kutchma\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:34;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"Matt: Beyond Consumer Culture\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34425\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"http://ma.tt/2010/05/beyond-consumer-culture/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1734:\"<blockquote><p>[P]sychological evidence suggests that is is close relationships, a meaningful life, economic security, and health that contribute most to well-being. While there are marked improvements in happiness when people at low levels of income earn more (as their economic security improves and their range of opportunities grows), as incomes increase this extra earning power converts less effectively into increased happiness. In part, this may stem from <strong>people&#8217;s tendency to habituate to the consumption level they are exposed to.</strong> Goods that were once perceived as luxuries can over time be seen as entitlements or event necessities.</p>\n<p>By the 1960s, for instance, the Japanese already viewed a fan, a washingmachine, and electric rice cookers as essential goods for a satisfactory living standard. In due course, a car, an air conditioner, and a color television were added to the list of &#8220;essentials.&#8221; And in the United States, 83 percent of people saw clothes dryers as a necessity in 2006. Even products around only a short time quickly become viewed as necessities. Half of Americans now think they must have a mobile phone, and one third of them <strong>see a high-speed Internet connection as essential.</strong></p></blockquote>\n<p>Emphasis mine. From the <a href=\"http://www.worldwatch.org/sow10\">State of the World 2010: Transforming Cultures</a>. <a href=\"http://blogs.worldwatch.org/transformingcultures/\">They also have a nice, WordPress-powered blog</a>. (A necessity.) You can see the <a href=\"http://books.google.com/books?id=bTeRWMK-uM8C&#038;pg=PA9&#038;source=gbs_selected_pages&#038;cad=3#v=onepage&#038;q&#038;f=false\">context of the quote in Google Books</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 15 May 2010 15:05:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:35;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Mark Jaquith: Web Hosts: WordPress is here to stay. Adapt!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"http://markjaquith.wordpress.com/?p=431\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:80:\"http://markjaquith.wordpress.com/2010/05/14/web-hosts-should-adapt-to-wordpress/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:4985:\"<p><a href=\"http://wordpress.org/\">WordPress</a> is the number one user-installed web app, and its growth is showing no signs of slowing. If you are a web host, and you don&#8217;t have a specific strategy for WordPress, you&#8217;re likely operating your service inefficiently, and may be opening yourself up to security issues. This is the year to adapt, or be left behind by nimbler upstarts.</p>\n<h3>Performance</h3>\n<p>WordPress does not currently ship with any output caching. First, because most blogs never get enough traffic to need it, so it&#8217;s not worth the added complexity and configuration that it would add to our relatively nimble core. But also because every environment is different, and what works on one web host may actually degrade performance on another. So we leave it up to the WordPress user to choose whether they need a caching plugin, and which one to run.</p>\n<p>As a web host, you know what caching strategies will work best with your server architecture. You have the ability to roll out things like Memcached or APC. You can route image requests to a lightweight web server or a CDN. These changes will result in a better user experience, and they&#8217;ll save you money.</p>\n<h3>Security</h3>\n<p>All code has bugs. WordPress has had its share of security issues through the years. As a web host, you can help keep your users out in front of security issues instead of just being reactive when someone gets hacked. First, by encouraging, or even demanding that users upgrade their sites to the newest available version of WordPress. In practice, there aren&#8217;t any widespread attacks against the current version of WordPress. The large scale attacks you see from time to time are against old versions of the software whose users haven&#8217;t updated in a while. It is in a web host&#8217;s interest to encourage upgrades and reduce the incidence of exploitation.</p>\n<p>Because WordPress is so widespread, it also is often the victim of attacks that originated against other software or server misconfiguration. So a bad guy gets in using something else, and then once in, they look for WordPress installs to exploit. You can help users recover from these attacks by aggressively backing up their data and by looking for suspicious files or suspicious code that could indicate that a bad actor is exploiting their WordPress install.</p>\n<h3>What you can do</h3>\n<ul>\n<li>Get your company to abandon the mindset that you&#8217;re just a dumb host who doesn&#8217;t care what software your users are running. Users want and are willing to pay for a more specialized experience. If you tell them that it&#8217;s not your problem, they&#8217;re going to go find a service that will support their web hosting needs.</li>\n<li>Offer WordPress-specific hosting. Specially optimized, prodigiously backed up, with a more locked-down environment. And because it is a specialty service, you can charge more than you do for your regular hosting products!</li>\n<li>Build an internal WordPress Response Team that has in-depth training to help diagnose and fix WordPress bug, security and scaling issues. And in the meantime, hire a <a title=\"WordPress consulting\" href=\"http://coveredwebservices.com/\">WordPress consultant like me</a> or one of <a href=\"http://codepoet.com/\">these fine consultancies</a> to get your WordPress strategy rolling.</li>\n</ul>\n<p>People ask me for hosting recommendations all the time. I have a few decent hosts that I&#8217;ll recommend, but I don&#8217;t have any hosts about which I can say &#8220;use them, because they know how to host WordPress, and they&#8217;ll support you.&#8221; I&#8217;d like nothing better than to have a dozen such hosts to recommend by this time next year. WordPress is here to stay, and it&#8217;s time for web hosts to adapt!</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/markjaquith.wordpress.com/431/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/markjaquith.wordpress.com/431/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/markjaquith.wordpress.com/431/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/markjaquith.wordpress.com/431/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/markjaquith.wordpress.com/431/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/markjaquith.wordpress.com/431/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/markjaquith.wordpress.com/431/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/markjaquith.wordpress.com/431/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/markjaquith.wordpress.com/431/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/markjaquith.wordpress.com/431/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=markjaquith.wordpress.com&blog=316&post=431&subd=markjaquith&ref=&feed=1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 May 2010 08:17:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Mark Jaquith\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:36;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"Weblog Tools Collection: WordPress security monitoring and diagnosis\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8040\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://weblogtoolscollection.com/archives/2010/05/13/security-monitoring/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5475:\"<p>The three components of information security are: Confidentiality, Integrity and Availability (CIA). If you&#8217;ve followed the steps <a href=\"http://weblogtoolscollection.com/archives/2010/04/27/more-plugins-for-securing-your-wordpress-install/\">my previous tutorial</a>, you&#8217;ll have come a long way towards ensuring all three. But you&#8217;ll always need to keep an eye on things &#8211; remember, no site is hack proof. Here are some tools to verify the integrity of your data. <strong>These plugins will not protect your site from attacks, they will only help you monitor your site and diagnose problems.</strong></p>\n<p>I have not tested any of these with the latest WordPress 3.0 beta.</p>\n<p><strong>Monitoring</strong></p>\n<p>In my <a href=\"http://weblogtoolscollection.com/archives/2010/04/15/how-to-improve-basic-security-on-a-fresh-wordpress-install/\">first article on WordPress security</a> I mentioned Open Source Tripwire as an option for monitoring your WordPress install for unexpected changes. A reader pointed out that it wasn&#8217;t the best solution since it&#8217;s no longer maintained and suggested a couple other alternatives. Since then, I&#8217;ve discovered a much easier way of monitoring your WP install: <a href=\"http://wordpress.org/extend/plugins/wordpress-file-monitor/\">WordPress File Monitor</a>.</p>\n<p>What it does: monitors all the files in your WordPress directory (except the ones you tell it not to) and e-mails you whenever something changes. This means nothing changes without you knowing about it. If someone edits your theme files to include spam links or uploads weird php scripts, you&#8217;ll know right away.</p>\n<p><img src=\"http://weblogtoolscollection.com/wp-content/uploads/2010/05/screenshot-1.jpg\" alt=\"WordPress File Monitor Screenshot\" title=\"WordPress File Monitor Screenshot\" width=\"524\" height=\"321\" class=\"alignnone size-full wp-image-8041\" /></p>\n<p>Above is a screenshot of the settings I use.</p>\n<p>Dashboard Alert: I had this set to yes for a while, but having clear the notification pretty much anytime I made a post (because I upload images, and the sitemap.xml changes) got tedious. Just keep up with the e-mail alerts if you turn this off.</p>\n<p>Scan Interval: 30 minutes might be a little too often, I should probably cut this back to something more sane like 2 hours.</p>\n<p>Detection Method: My main site is quite large and performance is a big concern for me, so I keep it set to Modification Date. If you&#8217;re really paranoid and have a small site, change this to Hash.</p>\n<p>E-mail address fields: self explanatory.</p>\n<p>Notification format: Detailed. Why would you want anything less?</p>\n<p>Site Root: Theoretically, you shouldn&#8217;t have to change this.</p>\n<p>Exclude paths: I exclude my cache folder (if you don&#8217;t use WP Supercache or something similar, you don&#8217;t need to worry about this) and error_logs that get a lot of errors. I do have it monitor my Uploads folder in case someone tries to slip an exploit disguised as an image in there somewhere.</p>\n<p><strong><a href=\"http://wordpress.org/extend/plugins/antivirus/\">AntiVirus for WordPress</a></strong></p>\n<p>I learned about this one from the plugin author in the comments on my original post. As far as I can tell, it scans the core WordPress files and template files for exploits.</p>\n<p>You can also have it do a daily scan and send you the results. I don&#8217;t do this since I&#8217;m constantly monitoring my site for changes with WordPress File Monitor. If you don&#8217;t want to monitor every single change in your WP directory, this could be a good alternative.</p>\n<p><strong><a href=\"http://wordpress.org/extend/plugins/exploit-scanner/\">WordPress Exploit scanner</a></strong></p>\n<p>This seems to do a more thourough scan than Antivirus for WordPress, but I always run into memory problems if I try to run it with the &#8220;Files&#8221; option checked.</p>\n<p><strong>What to do if you&#8217;ve been hacked</strong></p>\n<p>Detailed instructions will have to wait for a future post. For right now, <a href=\"http://codex.wordpress.org/FAQ_My_site_was_hacked\">see the WordPress Codex entry</a> for what to do.</p>\n<p><strong>Bonus: greping for great justice</strong></p>\n<p>grep is a UNIX command for searching the entire text of a file or files on a computer. If you know the exploit you&#8217;re looking for, it&#8217;s extremely useful. To do this you&#8217;ll need SSH access to your web server, and you&#8217;ll need to be comfortable using it.</p>\n<p>I had a nightmare of an exploit a while back that I eventually figured out: somehow someone had uploaded a copy of <a href=\"http://cker.name/webadmin/\">webadmin.php</a> (with a different name so it would be harder to spot) to a few places on my server. They could then navigate straight to that file and change any file on my server whenever they wanted. I found one instance of it and deleted it, and thought that would be that. But I was still finding that my template files were getting edited. Here&#8217;s what I did:</p>\n<p>1. Logged into my web server by SSH<br />\n2. Changed directory to my public directory (you may need to ask your web host where this is)<br />\n3. Ran the following command: &#8220;grep -r &#8216;webadmin&#8217; *&#8221;</p>\n<p>I was then able to locate the file because even though the file had been renamed, it still contained the text &#8220;webadmin.&#8221; I was then able to delete the file.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 May 2010 04:43:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Klint Finley\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:37;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"Publisher Blog: Rosetta Stone Joins WordPress.com VIP\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://publisherblog.automattic.com/?p=944\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"http://publisherblog.automattic.com/2010/05/13/rosetta-stone-joins-wordpress-com-vip/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2560:\"<p><a href=\"http://www.rosettastone.com\">Rosette Stone</a>, the technology-based language learning company,  has launched their new blog <a href=\"http://blog.rosettastone.com\">RVOICE</a> on <a href=\"http://vip.wordpress.com\">WordPress.com VIP</a>:<br />\n<img src=\"http://s2.wp.com/mshots/v1/http%3A%2F%2Fblog.rosettastone.com%2F2010%2F05%2F11%2Fwelcome%2F?w=600&amp;r=1\" alt=\"http://blog.rosettastone.com/2010/05/11/welcome/\" width=\"600\" /></p>\n<p>The new blog, RVoice, will focus on:</p>\n<blockquote><p>&#8230; [a] discussion on the role of technology and pedagogy in changing how people learn languages. And we also wanted to provide an opportunity for you to get to know us better and for us to get to know you.</p>\n<p>Our intention is not to have a blog just for the sake of being current – no technology for technology’s sake, we like to say. This is about opening up the conversation and providing a focused forum for debate on new ideas and practices in the field of language learning. Clearly, there is lots of soul searching going on out there about tech-enabled language learning – what’s lacking is the participation of leading practitioners and a framework for the debate. We hope to change that.</p></blockquote>\n<p>[ Visit <a href=\"http://blog.rosettastone.com/\">RVOICE</a> ]</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wordpresspublishers.wordpress.com/944/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wordpresspublishers.wordpress.com/944/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wordpresspublishers.wordpress.com/944/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wordpresspublishers.wordpress.com/944/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wordpresspublishers.wordpress.com/944/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wordpresspublishers.wordpress.com/944/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wordpresspublishers.wordpress.com/944/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wordpresspublishers.wordpress.com/944/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wordpresspublishers.wordpress.com/944/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wordpresspublishers.wordpress.com/944/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=publisherblog.automattic.com&blog=1470857&post=944&subd=wordpresspublishers&ref=&feed=1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 May 2010 00:30:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Raanan Bar-Cohen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:38;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"Alex King: Exclude File Type Requests\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://alexking.org/?p=4316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://alexking.org/blog/2010/05/13/exclude-file-type-requests\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1490:\"<p>We&#8217;ve released a new <a href=\"http://wordpress.org/\" rel=\"external\">WordPress</a> plugin to help reduce the server load that can occasionally result from a large number of 404 requests on a WordPress-powered site. I <a href=\"http://alexking.org/blog/2008/07/31/404s-and-wordpress-server-load\">wrote about this issue in some detail</a> previously.</p>\n<p>This plugin gives you the ability to set a collection of file extensions that you do not want WordPress to handle. For example, a request to a .gif file probably isn&#8217;t a valid request to one of your posts or pages, so having WordPress look at the URL and try to find something to show is a waste of server resources.</p>\n<p>Note that this is a very basic implementation that has been only lightly tested on a few sites. If you have any trouble with it or think an alternate implementation would be an improvement, patches and/or suggestions are quite welcome.</p>\n<p>All of my plugins now have new homes on the <a href=\"http://crowdfavorite.com\">Crowd Favorite</a> website, along with their own dedicated <a href=\"http://crowdfavorite.com/forums/forum/exclude-file-type-requests\">community support forum</a>. You can find the details, screenshots, support info, etc. for this plugin on the <a href=\"http://crowdfavorite.com/wordpress/plugins/exclude-file-type-requests/\">Exclude File Type Requests plugin page</a>.</p>\n<p>Enjoy!</p>\n<img src=\"http://alexking.org/wp/?ak_action=api_record_view&id=4316&type=feed\" alt=\"\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 May 2010 23:37:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Alex\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:39;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"Matt: University of Houston profile\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34422\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"http://ma.tt/2010/05/university-of-houston-profile/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:481:\"<p>University of Houston, which I attended for 2 years, <a href=\"http://www.uh.edu/pride-stories/Matt-Mullenweg/index.php\">created a profile of me for their &#8220;You Are the Pride&#8221; campaign</a>. In the list I am currently alphabetically sandwiched between <a href=\"http://en.wikipedia.org/wiki/Carl_Lewis\" title=\"Famous sprinter and jumper\">Carl Lewis</a> and <a href=\"http://en.wikipedia.org/wiki/Hakeem_Olajuwon\" title=\"Amazing basketball player\">Hakeem Olajuwon</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 May 2010 23:06:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:40;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:23:\"Matt: State of the Word\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34418\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"http://ma.tt/2010/05/state-of-the-word/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:361:\"<p>Here&#8217;s the official video of the &#8220;State of the Word&#8221; presentation I did at <a href=\"http://2010.sf.wordcamp.org/\">WordCamp San Francisco</a> this year. I hope you all enjoy it!</p>\n<p></p>\n<p>(<a href=\"http://wordpress.tv/2010/05/12/sotw2010/\">Video from WordPress.tv</a> and powered by <a href=\"http://videopress.com/\">VideoPress</a>.)</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 13 May 2010 07:21:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:41;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WordPress.tv: Matt Mullenweg: State of the Word 2010\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"http://wordpress.tv/?p=3786\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.tv/2010/05/12/sotw2010/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1380:\"<div id=\"x-video-0\" class=\"video-player\">\n\n</div>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/3786/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/3786/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wptv.wordpress.com/3786/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wptv.wordpress.com/3786/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wptv.wordpress.com/3786/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wptv.wordpress.com/3786/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wptv.wordpress.com/3786/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wptv.wordpress.com/3786/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wptv.wordpress.com/3786/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wptv.wordpress.com/3786/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=3786&subd=wptv&ref=&feed=1\" /><div><a href=\"http://wordpress.tv/2010/05/12/sotw2010/\"><img alt=\"Matt Mullenweg: State of the Word 2010\" src=\"http://cdn.videos.wordpress.com/xj8pDCM4/state-of-the-word-compressed_scruberthumbnail_1.jpg\" width=\"160\" height=\"120\" /></a></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 12 May 2010 22:54:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Michael Pick\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:42;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WordPress Podcast: Google Webmaster Tools Inside Out\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://www2.webmasterradio.fm/wordpress-community-podcast/?p=44\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://feedproxy.google.com/~r/wordpresspodcast/~3/YJi-oZqeLfE/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1593:\"<p>Joost and Frederick discussed <a href=\"http://www.google.com/webmasters/tools/\">Google&#8217;s Webmaster Tools</a> with this weeks guest <a href=\"http://www.johnmu.com\">John Mueller</a> from Google. All the sections of Google Webmaster Tools were discussed, and their different uses for bloggers, from the new search queries and ranking overview to sitelinks, crawl errors, XML Sitemaps and the recently updated Google News Sitemaps (there&#8217;s actually a <a href=\"http://wordpress.org/extend/plugins/gn-xml-sitemap/\">WordPress plugin</a> for those).</p>\n<p>In the news this week: several <a href=\"http://central.wordcamp.org/\">upcoming WordCamps</a>, as well as the fact that <a href=\"http://wordpress.org/development/2010/05/wordpress-3-0-beta-2/\">WordPress 3.0 beta 2 was released</a>.</p>\n<p>In the plugin picks, at the tail end of the show, Frederick picked <a href=\"http://www.intensedebate.com/\">IntenseDebate</a>, a very cool comment system by Automattic. Joost picked <a href=\"http://www.mikeindustries.com/blog/clean-notifications\">clean notifications</a>, a plugin to clean up the comment and ping / trackback notification emails.</p>\n<p><a href=\"http://wp-community.org/2010/05/11/google-webmaster-tools-inside-out/\">Google Webmaster Tools Inside Out</a> is an episode of <a href=\"http://wp-community.org\">The WordPress Podcast</a>, which is a weekly podcast hosted by <a href=\"http://yoast.com/\">Joost de Valk</a> and <a href=\"http://www.w3-edge.com/\">Frederick Townes</a>.</p><img src=\"http://feeds.feedburner.com/~r/wordpresspodcast/~4/YJi-oZqeLfE\" height=\"1\" width=\"1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 12 May 2010 01:31:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"joost@pressthis.com (Joost de Valk & Frederick Townes)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:43;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"Dougal Campbell: WordPress and Drupal\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://dougal.gunters.org/?p=2127\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:117:\"http://dougal.gunters.org/blog/2010/05/11/wordpress-and-drupal?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2851:\"<p><a title=\"Dries Buytaert is to Drupal as Matt Mullenweg is to WordPress\" href=\"http://buytaert.net/\">Dries Buytaert</a> re-tweeted a couple of interesting things on <a href=\"http://twitter.com/\">Twitter</a> earlier today. First was this one:</p>\n<blockquote cite=\"http://twitter.com/Dries/statuses/13774399737\"><p>RT @<a href=\"http://twitter.com/chx1975\">chx1975</a>: WordPress is now approximately where Drupal was around Drupal 5 w/ content types. See you in 2015.</p></blockquote>\n<p>Ouch. Okay, so we&#8217;re late to the game where custom content types are concerned. But I doubt it will take us until 2015 to catch up.</p>\n<p>But Dries is even-handed, and calls fair game when someone retorts in favor of WordPress:</p>\n<blockquote cite=\"http://twitter.com/Dries/statuses/13775041694\"><p>Agreed, and fair enough. RT @<a href=\"http://twitter.com/newoceans_en\">newoceans_en</a>: @Dries Drupal 7 will hopefully be where Wordpress was around 5 years ago regarding <acronym title=\"User eXperience\"><span class=\"caps\">UX</span></acronym>.</p></blockquote>\n<p>I haven&#8217;t had a chance to look at the Drupal 7 user interface yet, so I can&#8217;t say if that&#8217;s a fair comparison or hyperbole. But, I suspect that five years of catching up is another exaggeration. But these two statements do highlight one difference between where each project has focussed their attention over the years: <a href=\"http://drupal.org/\">Drupal</a> has essentially been building a robust content management framework, and is working towards usability. <a href=\"http://wordpress.org/\">WordPress</a> started with ease-of-use and is becoming a more capable content framework.</p>\n<p>I think that in both cases, this is a result of project leaders listening to their respective communities. I&#8217;ve seen many instances of WordPress developers saying &#8220;Drupal makes it easy to do X. Why can&#8217;t WordPress do that?&#8221;, or Drupal developers saying &#8220;People like WordPress because it&#8217;s so easy to use, right out-of-the-box. Why can&#8217;t Drupal be like that?&#8221; Each project is learning from the strengths and success of the other. And that&#8217;s awesome, because everybody wins.</p>\n<p>It seems to me that both communities have a lot of good things to look forward to.</p>\n\n\n<p>Related posts:<ol><li><a href=\"http://dougal.gunters.org/blog/2009/06/22/drupal-shop-gives-props-to-wordpress\" rel=\"bookmark\" title=\"Permanent Link: Drupal shop gives props to WordPress\">Drupal shop gives props to WordPress</a></li>\n<li><a href=\"http://dougal.gunters.org/blog/2005/12/22/wordpress-book\" rel=\"bookmark\" title=\"Permanent Link: WordPress Book\">WordPress Book</a></li>\n<li><a href=\"http://dougal.gunters.org/blog/2009/07/30/wordpress-packages\" rel=\"bookmark\" title=\"Permanent Link: WordPress Packages?\">WordPress Packages?</a></li>\n</ol></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 11 May 2010 20:15:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"Dougal\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:44;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"Publisher Blog: Mashable on WordPress 3.0: The 5 Most Important New Features\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://publisherblog.automattic.com/?p=932\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:95:\"http://publisherblog.automattic.com/2010/05/10/wordpress-3-0-the-5-most-important-new-features/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2265:\"<p>Good summary post from Brian Casel on <a href=\"http://mashable.com\">Mashable</a> today regarding <a href=\"http://mashable.com/2010/05/10/new-features-wordpress-3/\">WordPress 3.0: The 5 Most Important New Features</a>:</p>\n<blockquote><p>WordPress has long been known as a dedicated blogging platform, giving users the tools they need to publish their message and interact with readers.  However, with the official release of version 3.0, set to drop this month, the platform will be much closer, if not well within the territory of a content management system (CMS).</p>\n<p>The list of new features in WordPress 3.0 isn’t very long in comparison to previous releases.  However, the changes that are coming will certainly have a significant impact, particularly if you use WordPress as a CMS.  Here is a rundown of the most important new features arriving in version 3.0.\n</p></blockquote>\n<p>Continue <a href=\"http://mashable.com/2010/05/10/new-features-wordpress-3/\">reading the full article</a>.</p>\n<br />  <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/wordpresspublishers.wordpress.com/932/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/wordpresspublishers.wordpress.com/932/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godelicious/wordpresspublishers.wordpress.com/932/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/delicious/wordpresspublishers.wordpress.com/932/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gostumble/wordpresspublishers.wordpress.com/932/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/stumble/wordpresspublishers.wordpress.com/932/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/godigg/wordpresspublishers.wordpress.com/932/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/digg/wordpresspublishers.wordpress.com/932/\" /></a> <a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/goreddit/wordpresspublishers.wordpress.com/932/\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/reddit/wordpresspublishers.wordpress.com/932/\" /></a> <img alt=\"\" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=publisherblog.automattic.com&blog=1470857&post=932&subd=wordpresspublishers&ref=&feed=1\" />\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 10 May 2010 21:36:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Raanan Bar-Cohen\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:45;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"Weblog Tools Collection: Underrated WordPress plugin round-up\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8027\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:90:\"http://weblogtoolscollection.com/archives/2010/05/09/underrated-wordpress-plugin-round-up/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3468:\"<p>I&#8217;ve seen a lot of &#8220;Best WordPress Plugins&#8221; lists, and there&#8217;s usually a lot of overlap on them. You don&#8217;t need me to tell you about <a href=\"http://wordpress.org/extend/plugins/platinum-seo-pack/\">Platinum SEO Pack</a>, <a href=\"http://wordpress.org/extend/plugins/simple-tags/\">Simple Tags</a>, and <a href=\"http://wordpress.org/extend/plugins/wp-super-cache/\">WP Super Cache</a>.</p>\n<p>Here are a few plugins that I think deserve more attention. These will probably be more useful to power-users who really want to tweak their WordPress site, but I encourage everyone to get their hands dirty every once and a while and get creative with their installs. Unless otherwise noted, these should work with with both WordPress 2.92 and WordPress 3.0.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/widget-logic/\">Widget Logic</a></p>\n<p>This gives every widget an extra field in which you can specify WP&#8217;s conditional tags. What this means is that you can have certain widgets appear on certain pages but not others. For example, I have my blogroll set to only appear on my front page.</p>\n<p><a href=\"http://www.prelovac.com/vladimir/wordpress-plugins/seo-friendly-images\">SEO Friendly Images</a></p>\n<p>This plugin can automatically add alt text to any image that doesn&#8217;t have one already. You can use the post title or the name of the image. This is great if you have a blog with lots of images that were never properly tagged and you don&#8217;t have time to go through and change them all by hand. It can also override WordPress&#8217;s default alt text &#8211; this would be useful if you have a group blog where one or more contributors frequently neglects to put any sort of alt text into their images.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/astickypostorderer/\">AStickyPostOrderER</a></p>\n<p>I&#8217;ve only recently discovered this plugin, and I&#8217;m totally in love with it. It lets you sticky or order posts within a tag or category. I&#8217;m experimenting with using this plugin to sticky &#8220;portal&#8221; or &#8220;best of&#8221; posts to the top of certain tag archives.</p>\n<p><a href=\"http://mcaleavy.org/code/domain-mirror/\">Domain Mirror</a></p>\n<p>This is an amazing plugin that lets you have different domains, titles, and taglines for the same WordPress install. If for some reason you don&#8217;t want to use redirects, you can use this plugin to host mirror sites from the same install. You can see it in action on the plugin authors pages <a href=\"http://lightpainting.org/\">lightpainting.org</a> and <a href=\"http://mcaleavy.org/\">mcaleavy.org</a>.</p>\n<p><a href=\"http://wordpress.org/extend/plugins/headspace2/\">Headspace2</a></p>\n<p>Platinum SEO Pack and All-in-One SEO Pack usually get all the attention, but Headspace2 is worth some special attention. It gives you far more (possibly too much) control over your WordPress site&#8217;s title and meta-description tags. Some users will find it overkill. I like it because it lets me set descriptions for category and tag pages. <strong>Note:</strong> This doesn&#8217;t seem to work with WordPress 3.0 yet.</p>\n<p><strong>All security plugins</strong></p>\n<p>I also think pretty much all <a href=\"http://weblogtoolscollection.com/archives/category/wordpress-security/\">WordPress security</a> plugins are underrated, which is why I&#8217;ve been covering that subject.</p>\n<p>What plugins do YOU think are underrated?</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 10 May 2010 00:54:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Klint Finley\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:46;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Matt: New WordPress Tattoo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"http://ma.tt/?p=34415\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://ma.tt/2010/05/new-wordpress-tattoo/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1023:\"<p><a href=\"http://www.flickr.com/photos/vegasgeek/4592410322/\"><img alt=\"\" src=\"http://farm5.static.flickr.com/4026/4592410322_eae50c99af_t.jpg\" title=\"John&#039;s Tattoo\" class=\"alignright\" width=\"100\" height=\"75\" /></a> <a href=\"http://johnhawkinsunrated.com/\">John Hawkins</a> is now the <a href=\"http://ma.tt/2009/02/my-wordpress-tattoo-bakers-hours/\">second person</a> with a real-life WordPress tattoo. You can <a href=\"http://www.flickr.com/photos/vegasgeek/4592410322/\">see it finished here</a>, and <a href=\"http://www.flickr.com/photos/vegasgeek/4592410170/in/photostream/\">two</a> <a href=\"http://www.flickr.com/photos/vegasgeek/4592410254/in/photostream/\">in-progress</a> shots. John used the variation of the logo they did for WordCamp Las Vegas which he also organizes. Perhaps we should create a <a href=\"http://codepoet.com/\">new category on Code Poet</a> for <a href=\"http://9seeds.com/\">9seeds</a>. <img src=\"http://ma.tt/blog/wp-includes/images/smilies/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" /> </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 09 May 2010 22:38:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:47;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"Lloyd: A New Favorite Comment Spam\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"http://foolswisdom.com/?p=2514\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"http://foolswisdom.com/a-new-favorite-comment-spam/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:510:\"<p>This blog is a honey pot for hand rolled comment spam. Here is a new favorite spam comment:</p>\n<blockquote><p>(without prestigious )With reference to previous Emails so I see that your solution was to ban me complicity , firstly thanks as this blog had no adds on it , you have given me the ammunition to go forward in a legal fight which I doubt, I would win, but in English courts to sue under £5000 , You can not recover costs</p></blockquote>\n<p>I wish I had any idea what they were writing about.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 09 May 2010 14:23:43 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"Lloyd\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:48;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"Weblog Tools Collection: Adding Scripts Properly to WordPress Part 3 – Page Detection\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8032\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:112:\"http://weblogtoolscollection.com/archives/2010/05/08/adding-scripts-properly-to-wordpress-part-3-page-detection/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8585:\"<p>You might find yourself in the situation where you only want a script to run on a certain page.  In fact, it’s good practice to only load your JavaScript files when absolutely necessary;  loading the files on every single page is a big no-no (I’ve been chastised before for this).</p>\n<p>While on the blog’s front-end, WordPress makes it <strong>super-easy</strong> with its conditional tags.</p>\n<p>I’m not going to go over the conditional tags here, but here are a few you can take advantage of:</p>\n<ul>\n<li><a href=\"http://codex.wordpress.org/Conditional_Tags#The_Main_Page\">is_home()</a></li>\n<li><a href=\"http://codex.wordpress.org/Conditional_Tags#The_Front_Page\">is_front_page()</a></li>\n<li><a href=\"http://codex.wordpress.org/Conditional_Tags#A_Single_Post_Page\">is_single()</a></li>\n<li><a href=\"http://codex.wordpress.org/Conditional_Tags#A_PAGE_Page\">is_page()</a></li>\n<li><a href=\"http://codex.wordpress.org/Conditional_Tags\">And much more</a>.</li>\n</ul>\n<p>While being selective on the front-end is relatively straightforward, the admin-panel is another monster.</p>\n<p>Sure, there’s the <strong>is_admin()</strong> conditional, but what if you only want to run a script in a certain section within the admin panel?</p>\n<p>One technique is to use the PHP reserved variable called <strong>$_GET</strong>.</p>\n<p>Say you have a plugin options page with a URL of:</p>\n<blockquote><pre><code>http://www.mydomain.com/wp-admin/options-general.php?page=my-plugin-file.php</code></pre>\n</blockquote>\n<p>You can use the <strong>$_GET</strong> variable to capture the page and run a conditional to determine if the page is yours.</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span></span>\n<span>if</span><span> </span><span>(</span><span>isset</span><span>(</span><span>$_GET</span><span>[</span><span>\'page\'</span><span>]</span><span>)</span><span>)</span><span> </span><span>{</span><span> </span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>if</span><span> </span><span>(</span><span>$_GET</span><span>[</span><span>\'page\'</span><span>]</span><span> </span><span>=</span><span>=</span><span> </span><span>\"my-plugin-file.php\"</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>/*load your scripts here */</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>}</span><span></span>\n<span>}</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>If there are no variables to capture, you may have to use the reserved variable <strong>$_SERVER</strong> to capture the page name.  From there, you would use a conditional or a switch statement.</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span></span>\n<span>switch</span><span> </span><span>(</span><span>basename</span><span>(</span><span>$_SERVER</span><span>[</span><span>\'SCRIPT_FILENAME\'</span><span>]</span><span>)</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"edit-comments.php\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>/*load scripts here*/</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>break</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"upload.php\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>/*load other scripts here*/</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>break</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>default</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>break</span><span>;</span><span></span>\n<span>}</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<h3>A Real-World Example</h3>\n<p>For a WordPress plugin I modified (<a href=\"http://wordpress.org/extend/plugins/wp-grins-lite/\">WP Grins Lite</a> &#8211; I&#8217;m not the original author), I wanted to include the JavaScript file only on specific pages.</p>\n<p>In the admin panel, I wanted the script to load when adding/editing posts and pages, and when editing a comment.</p>\n<p>On a post, I wanted the script to load only on posts and pages.  To make things interesting, I also wanted to only load the script if comments were open.</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span></span>\n<span>function</span><span> add_scripts</span><span>(</span><span>)</span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>global</span><span> </span><span>$post</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>if</span><span> </span><span>(</span><span>is_admin</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>switch</span><span> </span><span>(</span><span>basename</span><span>(</span><span>$_SERVER</span><span>[</span><span>\'SCRIPT_FILENAME\'</span><span>]</span><span>)</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"post.php\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"post-new.php\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"page.php\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"page-new\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>case</span><span> </span><span>\"comment.php\"</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>break</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>default</span><span>:</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>return</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>}</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>}</span><span> </span><span>else</span><span> </span><span>if</span><span> </span><span>(</span><span>(</span><span>!</span><span>is_single</span><span>(</span><span>)</span><span> </span><span>&amp;</span><span>&amp;</span><span> </span><span>!</span><span>is_page</span><span>(</span><span>)</span><span>)</span><span> </span><span>|</span><span>|</span><span> </span><span>\'closed\'</span><span> </span><span>=</span><span>=</span><span> </span><span>$post</span><span>-></span><span>comment_status</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>return</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>}</span><span> </span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;wp_enqueue_script</span><span>(</span><span>\'wp_grins_lite\'</span><span>,</span><span> plugins_url</span><span>(</span><span>\'wp-grins-lite\'</span><span>)</span><span> </span><span>.</span><span> </span><span>\'/js/wp-grins.js\'</span><span>,</span><span> </span><span>array</span><span>(</span><span>\"jquery\"</span><span>)</span><span>,</span><span> </span><span>1.0</span><span>)</span><span>;</span><span> </span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;wp_localize_script</span><span>(</span><span> </span><span>\'wp_grins_lite\'</span><span>,</span><span> </span><span>\'wpgrinslite\'</span><span>,</span><span> </span><span>$</span><span>this</span><span>-</span><span>></span><span>get_js_vars</span><span>(</span><span>)</span><span>)</span><span>;</span><span></span>\n<span>}</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>And there you have it.  Page detection in a nutshell.</p>\n<p><em>This article is an excerpt from <a href=\"http://www.ronalfy.com/about/\">Ronald Huereca&#8217;s</a> e-book entitled WordPress and Ajax (used with permission).</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 08 May 2010 20:00:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Ronald Huereca\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:49;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:96:\"Weblog Tools Collection: Adding Scripts Properly to WordPress Part 2 – JavaScript Localization\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://weblogtoolscollection.com/?p=8029\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"http://weblogtoolscollection.com/archives/2010/05/07/adding-scripts-properly-to-wordpress-part-2-javascript-localization/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:14329:\"<p>When adding scripts to WordPress, you will inevitably run into a small, but painful, issue of localization.</p>\n<p>Localizing a plugin or theme <a href=\"http://weblogtoolscollection.com/archives/2007/08/27/localizing-a-wordpress-plugin-using-poedit/\">is relatively straightforward</a>, but JavaScript presents its own difficulties since we can’t easily call the PHP functions necessary (which is one reason authors embed JavaScript in PHP files).</p>\n<p>Since embedding JavaScript in PHP files is <strong>never</strong> a good technique, we use localization to save the day.</p>\n<p>With JavaScript localization, you can use PHP magic to build your localized strings, and then use JavaScript to read/parse those strings.  What you do with them is only limited to your imagination.</p>\n<p>Furthermore, if you display anything with JavaScript, chances are your users will want the strings to be localized.</p>\n<p>Fortunately, WordPress provides the ultra-handy <strong>wp_localize_script</strong> function.</p>\n<h3>wp_localize_script</h3>\n<p>The <strong>wp_localize_script</strong> takes three arguments:</p>\n<ul>\n<li>handle</li>\n<li>object_name</li>\n<li>l10n</li>\n</ul>\n<h4>Handle</h4>\n<p>The handle argument will be the same handle you use for your script name.<br />\nFor example, if you have a handle of <strong>my_script</strong>, you would use the same name when calling the <strong>wp_localize_script</strong> function.</p>\n<h4>Object_name</h4>\n<p>The <strong>object_name</strong> argument is a string that tells WordPress to create a JavaScript object using the name you specify.</p>\n<p>It’s important that the string you pass <em>is as unique as possible</em> in order to minimize naming conflicts with other scripts.</p>\n<p>For the upcoming example, our object name will be <strong>my_unique_name</strong>.</p>\n<h4>l10n</h4>\n<p>The <strong>l10n</strong> argument is an array of strings you would like to localize.<br />\nWithin this array, you will want to take advantage of the <strong>__</strong> function.</p>\n<h4>wp_localize_script Example</h4>\n<p>For the purpose of this example, let’s create a function called <strong>localize_vars</strong> and have it return an array.</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span></span>\n<span>function</span><span> localize_vars</span><span>(</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>return</span><span> </span><span>array</span><span>(</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>\'SiteUrl\'</span><span> </span><span>=</span><span>></span><span> get_bloginfo</span><span>(</span><span>\'url\'</span><span>)</span><span>,</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>\'OtherText\'</span><span> </span><span>=</span><span>></span><span> __</span><span>(</span><span>\'my text\'</span><span>,</span><span> </span><span>\"my_localization_name\"</span><span>)</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>)</span><span>;</span><span></span>\n<span>}</span><span> </span><span>//End localize_vars</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>Please note the use of the <strong>__()</strong> function.  It takes in the text we want to localize, and our localization name. This will be the same name you use if you take advantage of localization within WordPress.</p>\n<p>The variable <strong>SiteURL</strong> gives us the http path to our WordPress site, which comes in handy in certain situations.</p>\n<p>From another area in our code, we call the <strong>localize_vars</strong> function:</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span> </span>\n<span>wp_enqueue_script</span><span>(</span><span>\'my_script\'</span><span>,</span><span> plugins_url</span><span>(</span><span>\'your-plugin-name\'</span><span>)</span><span> </span><span>.</span><span>\'/my_script.js\'</span><span>,</span><span> </span><span>array</span><span>(</span><span>\'jquery\'</span><span>)</span><span>,</span><span> </span><span>\'1.0.0\'</span><span>)</span><span>;</span><span></span>\n<span>wp_localize_script</span><span>(</span><span> </span><span>\'my_script\'</span><span>,</span><span> </span><span>\'my_unique_name\'</span><span>,</span><span> localize_vars</span><span>(</span><span>)</span><span>)</span><span>;</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>WordPress then conveniently adds localization JavaScript immediately before our main script is included.  Viewing the page source will reveal:</p>\n<blockquote><pre><code>\n<pre><span>/* &lt;![CDATA[ */</span>\n    my_unique_name <span>=</span> <span>{</span>\n        SiteUrl<span>:</span> <span>\"http://www.mydomain.com\"</span><span>,</span>\n        OtherText<span>:</span> <span>\"my localized text\"</span>\n    <span>}</span>\n<span>/* ]]&gt; */</span>\n<span>&lt;</span><span>/</span>script<span>></span>\n<span>&lt;</span>script type<span>=</span><span>\'text/javascript\'</span> src<span>=</span><span>\'http://www.mydomain.com/wp-content/plugins/my_plugin/my_script.js?ver=1.0.0\'</span><span>></span><span>&lt;</span><span>/</span>script<span>></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>With the localize example, you can use PHP magic to add just about anything to your localization object.  Hence, no need to ever embed JavaScript within a PHP file.</p>\n<p>Now you can call your localized JavaScript variables from your <strong>my_script.js</strong> file.  Here’s an example of an alert:</p>\n<blockquote><pre><code>\n<pre>alert<span>(</span>my_unique_name<span>.</span>SiteUrl<span>)</span><span>;</span>\nalert<span>(</span>my_unique_name<span>.</span>OtherText<span>)</span><span>;</span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>It’s really as easy as that.  You can now localize JavaScript strings.</p>\n<h3>Other Localization Techniques</h3>\n<p>While the <strong>wp_localize_script</strong> function does great work, it has one inherent flaw: each localized string is on a new line.  For plugins that require a lot of localized strings, the size of the page source can easily balloon to unacceptable levels.</p>\n<p>To remedy this, we can use two additional localization techniques: one uses JSON, and the other is a custom function.</p>\n<h3>The JSON Technique</h3>\n<p>The JSON Technique uses WordPress’ built-in JSON class in order to parse our localized variables.</p>\n<p>We would use the same <strong>localize_vars</strong> function, but would modify the way we queue our scripts.</p>\n<p>First, let’s create a helper function that will instantiate the JSON class and spit out our localized variables to screen.</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span></span>\n<span>function</span><span> js_localize</span><span>(</span><span>$name</span><span>,</span><span> </span><span>$vars</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>?></span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>&lt;</span><span>script type=\'text/javascript\'</span><span>></span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>/* &lt;![CDATA[ */</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>var</span><span> </span><span>&lt;?php</span><span> </span><span>echo</span><span> </span><span>$name</span><span>;</span><span> </span><span>?></span><span> </span><span>=</span><span> </span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>&lt;?php</span><span> </span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>require_once</span><span>(</span><span>ABSPATH </span><span>.</span><span> </span><span>\'/wp-includes/class-json.php\'</span><span>)</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>$wp_json</span><span> </span><span>=</span><span> </span><span>new</span><span> Services_JSON</span><span>(</span><span>)</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>echo</span><span> </span><span>stripslashes</span><span>(</span><span>$wp_json</span><span>-</span><span>></span><span>encodeUnsafe</span><span>(</span><span>$vars</span><span>)</span><span>)</span><span>;</span><span> </span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>?></span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>/* ]]&gt; */</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>&lt;/</span><span>script</span><span>></span><span></span>\n<span>&lt;?php</span><span></span>\n<span>}</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>The <strong>js_localize</strong> function takes in a <strong>$name</strong> (our object name) and an array of our localized variables (<strong>$vars</strong>).  </p>\n<p>The function then instantiates the JSON class and encodes the variables for output.</p>\n<p>Here’s how the code would look when queueing up your scripts:</p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span> </span>\n<span>js_localize</span><span>(</span><span>\'my_unique_name\'</span><span>,</span><span> localize_vars</span><span>(</span><span>)</span><span>)</span><span>;</span><span></span>\n<span>wp_enqueue_script</span><span>(</span><span>\'my_script\'</span><span>,</span><span> plugins_url</span><span>(</span><span>\'your-plugin-name\'</span><span>)</span><span> </span><span>.</span><span> </span><span>\'/my_script.js\'</span><span>,</span><span> </span><span>array</span><span>(</span><span>\'jquery\'</span><span>)</span><span>,</span><span> </span><span>\'1.0.0\'</span><span>)</span><span>;</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>Please note that the <strong>js_localize</strong> function is run before the script is queued.</p>\n<p>While this technique does eliminate the newlines and creates cleaner source code, it does have one major flaw.  It doesn’t work for all languages.</p>\n<p>For example, the Turkish language causes the above technique to crash and burn.</p>\n<p>However, if you don’t plan on having additional languages and want localization purely for the ability to access the JavaScript variables, then I would recommend this technique.</p>\n<h3>A Custom Function</h3>\n<p>For those wanting to eliminate the newlines caused by <strong>wp_localize_scripts</strong>, and still have the ability to handle complex languages, then a custom function will have to suffice.</p>\n<p>We’ll use the same exact code to queue our scripts, but the <strong>js_localize</strong> function will change a bit.</p>\n<p>My technique is to iterate through the localized variables, save them to an array, and output the array to screen. </p>\n<blockquote><pre><code>\n<pre><span>&lt;?php</span><span></span>\n<span>function</span><span> js_localize</span><span>(</span><span>$name</span><span>,</span><span> </span><span>$vars</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>$data</span><span> </span><span>=</span><span> </span><span>\"var </span><span>$name</span><span> = {\"</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>$arr</span><span> </span><span>=</span><span> </span><span>array</span><span>(</span><span>)</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>foreach</span><span> </span><span>(</span><span>$vars</span><span> </span><span>as</span><span> </span><span>$key</span><span> </span><span>=</span><span>></span><span> </span><span>$value</span><span>)</span><span> </span><span>{</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span>$arr</span><span>[</span><span>count</span><span>(</span><span>$arr</span><span>)</span><span>]</span><span> </span><span>=</span><span> </span><span>$key</span><span> </span><span>.</span><span> </span><span>\" : \'\"</span><span> </span><span>.</span><span> esc_js</span><span>(</span><span>$value</span><span>)</span><span> </span><span>.</span><span> </span><span>\"\'\"</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>}</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>$data</span><span> </span><span>.</span><span>=</span><span> </span><span>implode</span><span>(</span><span>\",\"</span><span>,</span><span>$arr</span><span>)</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>$data</span><span> </span><span>.</span><span>=</span><span> </span><span>\"};\"</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>echo</span><span> </span><span>\"&lt;script type=\'text/javascript\'></span><span>\\n</span><span>\"</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>echo</span><span> </span><span>\"/* &lt;![CDATA[ */</span><span>\\n</span><span>\"</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>echo</span><span> </span><span>$data</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>echo</span><span> </span><span>\"</span><span>\\n</span><span>/* ]]&gt; */</span><span>\\n</span><span>\"</span><span>;</span><span></span>\n<span>&#xa0;&#xa0;&#xa0;&#xa0;</span><span>echo</span><span> </span><span>\"&lt;/script></span><span>\\n</span><span>\"</span><span>;</span><span></span>\n<span>}</span><span></span>\n<span>?></span>\n</pre>\n<p></code></pre>\n</blockquote>\n<p>It might not be the most poetic thing you’ve ever seen, but it works pretty well, even for those complex languages.</p>\n<h3>Localization Conclusion</h3>\n<p>Within this article you learned the how and the why of JavaScript localization.</p>\n<p>The benefits of localizing your JavaScript are:</p>\n<ul>\n<li>No need to embed JavaScript and PHP.</li>\n<li>Can capture PHP variables without having to load the WordPress environment.</li>\n<li>Can enable others to translate your JavaScript strings.</li>\n</ul>\n<p>You also learned three different techniques to achieve localization.</p>\n<ul>\n<li>Using wp_localize_script &#8211; Recommended for general use.</li>\n<li>Using JSON &#8211; Recommended for non-complex localization and performance.</li>\n<li>Using a Custom Function &#8211; Recommended for complex localization and performance.</li>\n</ul>\n<p><em>This article is an excerpt from <a href=\"http://www.ronalfy.com/about/\">Ronald Huereca&#8217;s</a> e-book entitled WordPress and Ajax (used with permission).</em></p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 08 May 2010 03:16:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Ronald Huereca\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:8:{s:4:\"date\";s:29:\"Fri, 28 May 2010 03:52:34 GMT\";s:6:\"server\";s:9:\"LiteSpeed\";s:13:\"accept-ranges\";s:5:\"bytes\";s:10:\"connection\";s:5:\"close\";s:4:\"etag\";s:23:\"\"28258-4bff3c47-f500bf\"\";s:13:\"last-modified\";s:29:\"Fri, 28 May 2010 03:45:11 GMT\";s:12:\"content-type\";s:15:\"application/xml\";s:14:\"content-length\";s:6:\"164440\";}s:5:\"build\";s:14:\"20090627192103\";}','no'),(4542,0,'_transient_feed_0ff4b43bd116a9d8720d689c80e7dfd4','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:51:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n			\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"WordPress Development Blog\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"http://wordpress.org/development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress development and updates\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 28 May 2010 02:35:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:29:\"http://wordpress.org/?v=2.9.2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress 3.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/development/2010/05/wordpress-3-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"http://wordpress.org/development/2010/05/wordpress-3-0-release-candidate/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 28 May 2010 02:35:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1358\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:344:\"As Matt teased earlier, the first release candidate (RC1) for WordPress 3.0 is now available. What&#8217;s an RC? An RC comes after beta and before the final launch. It means we think we&#8217;ve got everything done: all features finished, all bug squashed, and all potential issues addressed. But, then, with over 20 million people using [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1992:\"<p>As Matt teased earlier, the first release candidate (RC1) for WordPress 3.0 is now available. What&#8217;s an RC? An RC comes after beta and before the final launch. It means we think we&#8217;ve got everything done: all features finished, all bug squashed, and all potential issues addressed. But, then, with over 20 million people using WordPress with a wide variety of configurations and hosting setups, it&#8217;s entirely possible that we&#8217;ve missed something. So! For the brave of heart, please download the RC and test it out (but not on your live site unless you&#8217;re extra adventurous). Some things to know:</p>\n<ul>\n<li>Custom menus are finished! Yay!</li>\n<li>Multi-site is all set.</li>\n<li>The look of the WordPress admin has been lightened up a little bit, so you can focus more on your content.</li>\n<li>There are a ton of changes, so plugin authors, please test your plugins <strong>now</strong>, so that if there is a compatibility issue, we can figure it out before the final release.</li>\n<li>Plugin and theme *users* are also encouraged to test things out. If you find problems, let your plugin/theme authors know so they can figure out the cause.</li>\n<li>There are a couple of <a href=\" http://core.trac.wordpress.org/report/5\">known issues</a>.</li>\n</ul>\n<p>If you are testing the RC and come across a bug, you can:</p>\n<ul>\n<li>Report it on the <a href=\"http://lists.automattic.com/mailman/listinfo/wp-testers\">wp-testers mailing list</a></li>\n<li>Join the dev chat and tell us live at irc.freenode.net #wordpress-dev</li>\n<li>File a bug ticket on the <a href=\"https://core.trac.wordpress.org/query?status=reopened&amp;status=assigned&amp;status=reviewing&amp;status=new&amp;status=accepted&amp;group=status&amp;milestone=3.0\">WordPress Trac </a></li>\n</ul>\n<p>We hope you enjoy playing with the 3.0 RC as much as we&#8217;ve enjoyed making it for you. Enjoy!</p>\n<p><a href=\"http://wordpress.org/wordpress-3.0-RC1.zip\">Download WordPress 3.0 RC1</a></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://wordpress.org/development/2010/05/wordpress-3-0-release-candidate/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:41:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Lucky Seven\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"http://wordpress.org/development/2010/05/lucky-seven/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/development/2010/05/lucky-seven/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 May 2010 23:04:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1354\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:307:\"Has it really been seven years since the first release of WordPress? It seems like just yesterday we were fresh to the world, a new entrant to a market  everyone said was already saturated. (As a side note, if the common perception is that a market is finished and that everything interesting has been [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1903:\"<p>Has it really been seven years since the first release of WordPress? It seems like just yesterday we were fresh to the world, a new entrant to a market  everyone said was already saturated. (As a side note, if the common perception is that a market is finished and that everything interesting has been done already, it&#8217;s probably a really good time to enter it.)</p>\n<p>The growth over the past year has blown me away. Since our last birthday we&#8217;ve doubled theme downloads to over 10 million, and doubled plugin downloads to 60 million. Most importantly, we continued to grow the development community to 1,528 people active on Trac and 13 committers, both numbers the highest in the history of WordPress.</p>\n<p>That&#8217;s 1,528 people pouring their hearts and souls into GPL software we all own, we all build on, we can use as we please, we can all make better. We&#8217;ve evolved from a simple script to a web platform.</p>\n<p>We&#8217;re on the cusp of version 3.0, with a release candidate coming out any minute now.</p>\n<p>If you&#8217;d like to celebrate WordPress&#8217;s birthday with us &#8212; tell a friend! Help them upgrade their blog or find the perfect theme. Talk about how WordPress is built by and for a community. Drop in to help test 3.0, including all the plugins you use. Write something to take advantage of the new 3.0 features, or teach your friends how to. If you buy any themes or plugins, make sure they&#8217;re GPL or compatible just like WordPress. We&#8217;ve got a long road ahead of us, it&#8217;s important that we not forget that Open Source got us this far, and is the only way we&#8217;re going to get to the next level. The whole of what we can build together is far greater than the sum of our parts. Spread the good word. <img src=\'http://wordpress.org/development/wp-includes/images/smilies/icon_smile.gif\' alt=\':)\' class=\'wp-smiley\' /> </p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"http://wordpress.org/development/2010/05/lucky-seven/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"WordPress 3.0, Beta 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/development/2010/05/wordpress-3-0-beta-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wordpress.org/development/2010/05/wordpress-3-0-beta-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 06 May 2010 21:05:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1340\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:370:\"Following the successful post-WordCamp San Francisco code sprint, we are now ready to release the second beta of WordPress 3.0.\nThings to test:\n\nRevised menu user interface\nChanges to the WordPress exporter and importer to make it more flexible\n\nAlready have a test install that you want to switch over to the beta? Try the beta tester plugin.\nTesters, don&#8217;t [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Peter Westwood\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:983:\"<p>Following the successful post-WordCamp San Francisco code sprint, we are now ready to release the second beta of WordPress 3.0.<br />\nThings to test:</p>\n<ul>\n<li>Revised menu user interface</li>\n<li>Changes to the WordPress exporter and importer to make it more flexible</li>\n</ul>\n<p>Already have a test install that you want to switch over to the beta? Try the <a href=\"http://westi.wordpress.com/2009/06/22/making-it-easy-to-be-a-wordpress-tester/\">beta tester plugin</a>.</p>\n<p>Testers, don&#8217;t forget to use the <a href=\"http://lists.automattic.com/mailman/listinfo/wp-testers\">wp-testers mailing list</a> to discuss bugs you encounter.</p>\n<p>We hope you like it! And if you don&#8217;t, well, check back when the release candidate is ready. <img src=\'http://wordpress.org/development/wp-includes/images/smilies/icon_smile.gif\' alt=\':)\' class=\'wp-smiley\' /> </p>\n<p>Download the <a href=\"http://wordpress.org/wordpress-3.0-beta2.zip\">WordPress 3.0 Beta 2</a> now!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/development/2010/05/wordpress-3-0-beta-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:47:\"\n		\n		\n		\n		\n		\n				\n		\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WordCamp San Francisco 2010\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"http://wordpress.org/development/2010/04/wordcampsf-2010/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"http://wordpress.org/development/2010/04/wordcampsf-2010/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 24 Apr 2010 15:49:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:3:{i:0;a:5:{s:4:\"data\";s:9:\"Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:6:\"Events\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:8:\"WordCamp\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1326\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:343:\"A week from today on May 1, hundreds of WordPress users, developers, designers and general enthusiasts will descend upon San Francisco for the 4th annual WordCamp SF. Since that first WordCamp in 2006, back when WordPress was on version 2.0 (Duke), the number of people using WordPress to power their web publishing &#8212; from personal [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4940:\"<p>A week from today on May 1, hundreds of WordPress users, developers, designers and general enthusiasts will descend upon San Francisco for the 4th annual <a href=\"http://2010.sf.wordcamp.org/\">WordCamp SF</a>. Since that first WordCamp in 2006, back when WordPress was on version 2.0 (Duke), the number of people using WordPress to power their web publishing &#8212; from personal blogs to large-scale commercial sites &#8212; has grown by millions. It&#8217;s no wonder this year&#8217;s event is going to be so great.</p>\n<p>If you&#8217;re unfamiliar with <a href=\"http://wordcamp.org/\">WordCamps</a>, here&#8217;s the skinny: the San Francisco event is the flagship, put together each year under the direction of WordPress co-founder and lead developer <a href=\"http://ma.tt\">Matt Mullenweg</a>, who traditionally reports on the &#8220;State of the Word&#8221; and assembles a lineup of <a href=\"http://2010.sf.wordcamp.org/speakers/\">speakers</a> that have inspired him over the past year. This year&#8217;s lineup includes luminaries such as Richard Stallman, the father of Free Software, best-selling author Scott Berkun, and Salon.com co-founder Scott Rosenberg. As the final speaker list is finalized, the remaining speakers will be added to the <a href=\"http://2010.sf.wordcamp.org/\">WordCamp SF website</a>, but a surprise or two is still possible.</p>\n<p>Though the main event is on Saturday, May 1, there are additional <a href=\"http://2010.sf.wordcamp.org/schedule/\">days of WordPress goodness</a> in store. Saturday, May 1 will be the main conference with scheduled speakers. There will be keynotes, session tracks for both bloggers/end-users and developers, and lightning talks to provide a broad mix of content, followed by a raging afterparty. Sunday, May 2 will shift location and tone, with a low-key developers&#8217; unconference for the super-code-focused attendees. May 3 and 4 are conference-free, but a WordPress core contributor in-person code sprint will span those two days, bringing together core contributors old and new from around the globe for two days of intense hacking (and let&#8217;s face it, 3.0 bug fixes).</p>\n<p>If you&#8217;re in the Bay Area, or can be, and want to attend <a href=\"http://2010.sf.wordcamp.org/\">WordCamp San Francisco</a>, <a href=\"http://2010.sf.wordcamp.org/tickets/\">go get your ticket today</a>!</p>\n<p style=\"text-align: center;\">*     *      *      *     *</p>\n<h3><strong>Other Upcoming WordCamps</strong></h3>\n<p>It&#8217;s definitely WordCamp season; just check out the growing list of upcoming WordCamps over the next couple of months! If you don&#8217;t see a WordCamp near you listed here, check the rest of the <a href=\"http://central.wordcamp.org/schedule/\">schedule at WordCamp.org</a>. In the meantime, don&#8217;t forget that many WordCamps post video of their presentations on <a href=\"http://wordpress.tv\">WordPress.tv</a>.</p>\n<p>April 24 (today!) &#8211; <a href=\"http://www.ocwordcamp.com/\">WordCamp Orange County</a><br />\nIrvine, CA USA</p>\n<p>April 29 &#8211; <a href=\"http://www.wordcampnashville.com/\">WordCamp Nashville</a><br />\nNashville, TN USA</p>\n<p><strong>May 1 &#8211; <a href=\"http://2010.sf.wordcamp.org/\">WordCamp San Francisco</a><br />\nSan Francisco, CA USA</strong></p>\n<p>May 8 &#8211; <a href=\"http://wordcamp.fr/\">WordCamp Paris</a><br />\nParis, France</p>\n<p>May 8 &#8211; <a href=\"http://argentina.wordcamp.org/\">WordCamp Argentina </a><br />\nBuenos Aires, Argentina</p>\n<p>May 8 &#8211; <a href=\"http://chile.wordcamp.org/\">WordCamp Chile</a><br />\nSantiago, Chile</p>\n<p>May 15–16 &#8211; <a href=\"http://denmark.wordcamp.org/\">WordCamp Denmark</a><br />\nCopenhagen, Denmark</p>\n<p>May 15 &#8211; <a href=\"http://www.wordcampvictoria.ca/\">WordCamp Victoria</a><br />\nVictoria, BC Canada</p>\n<p>May 21–22 &#8211; <a href=\"http://www.wordcamp.it/\">WordCamp Italy</a><br />\nMilan, Italy</p>\n<p>May 22 &#8211; <a href=\"http://www.wordcamp.my/\">WordCamp Malaysia</a><br />\nKuala Lumpur, Malaysia</p>\n<p>May 22–23 &#8211; <a href=\"http://wordcampraleigh.com/\">WordCamp Raleigh</a><br />\nRaleigh, North Carolina USA</p>\n<p>May 29–30 &#8211; <a href=\"http://wordcampfayetteville.com/\">WordCamp Fayetteville</a><br />\nFayetteville, Arkansas USA</p>\n<p>May 29 &#8211; <a href=\"http://yokohama2010.wordcamp.jp/\">WordCamp Yokohama</a><br />\nYokohama, Japan</p>\n<p>June 5–6 &#8211; <a href=\"http://wordcampchicago.com/\">WordCamp Chicago</a><br />\nChicago, Illinois USA</p>\n<p>June 12 &#8211; <a href=\"http://www.renotahoewordcamp.com/\">WordCamp Reno-Tahoe</a><br />\nReno, Nevada USA</p>\n<p>June 12 &#8211; <a href=\"http://wordcampvancouver.com/\">WordCamp Vancouver</a><br />\nVancouver, Canada</p>\n<p>June 18 &#8211; <a href=\"http://wordcamp.it/catania2010/\">WordCamp Catania</a><br />\nCatania, Italy</p>\n<p>June 19 &#8211; <a href=\"http://wordcampcolumbus.com/\">WordCamp Columbus </a><br />\nColumbus, Ohio USA</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/development/2010/04/wordcampsf-2010/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:53:\"\n		\n		\n		\n		\n		\n				\n		\n		\n		\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"Coming up on Beta 2: Sprint!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"http://wordpress.org/development/2010/04/coming-up-on-beta-2-sprint/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:77:\"http://wordpress.org/development/2010/04/coming-up-on-beta-2-sprint/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 24 Apr 2010 12:08:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:5:{i:0;a:5:{s:4:\"data\";s:9:\"Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:4:\"beta\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:3;a:5:{s:4:\"data\";s:4:\"bugs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:4;a:5:{s:4:\"data\";s:7:\"patches\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1328\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:301:\"Early next week, we&#8217;re hoping to release the 2nd beta release of WordPress 3.0 on our journey toward the final version. There are still over 200 bugs in the 3.0 milestone, and we can use all the help we can get on fixing these problems. If you&#8217;re a developer, take a look at the list [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2953:\"<p>Early next week, we&#8217;re hoping to release the 2nd beta release of WordPress 3.0 on our journey toward the final version. There are still <a href=\"http://core.trac.wordpress.org/query?status=accepted&amp;status=assigned&amp;status=new&amp;status=reopened&amp;status=reviewing&amp;group=status&amp;order=priority&amp;col=id&amp;col=summary&amp;col=owner&amp;col=type&amp;col=priority&amp;col=component&amp;col=version&amp;milestone=3.0&amp;type=defect+%28bug%29\">over 200 bugs</a> in the 3.0 milestone, and we can use all the help we can get on fixing these problems. If you&#8217;re a developer, take a look at the list of bugs that <a href=\"http://core.trac.wordpress.org/query?status=accepted&amp;status=assigned&amp;status=new&amp;status=reopened&amp;status=reviewing&amp;group=status&amp;order=priority&amp;col=id&amp;col=summary&amp;col=owner&amp;col=type&amp;col=priority&amp;col=component&amp;col=version&amp;milestone=3.0&amp;type=defect+%28bug%29\">still need fixing</a> in 3.0. <a href=\"http://core.trac.wordpress.org/query?status=accepted&amp;status=assigned&amp;status=new&amp;status=reopened&amp;status=reviewing&amp;group=status&amp;order=priority&amp;col=id&amp;col=summary&amp;col=type&amp;col=owner&amp;col=priority&amp;col=component&amp;col=version&amp;milestone=3.0&amp;keywords=~needs-patch&amp;type=defect+%28bug%29\">Write a patch</a>, or <a href=\"http://core.trac.wordpress.org/query?status=accepted&amp;status=assigned&amp;status=new&amp;status=reopened&amp;status=reviewing&amp;group=status&amp;order=priority&amp;col=id&amp;col=summary&amp;col=type&amp;col=owner&amp;col=priority&amp;col=component&amp;col=version&amp;milestone=3.0&amp;keywords=~has-patch&amp;type=defect+%28bug%29\">test and give feedback</a> on someone else&#8217;s. The tickets around custom post types and taxonomies are especially in need of help. Every little bit helps, so if you&#8217;re a developer who&#8217;s never contributed to core before, maybe now is the right time! Check out our information on <a href=\"http://codex.wordpress.org/Contributing_to_WordPress\">contributing to WordPress core</a>, and head over to <a href=\"http://core.trac.wordpress.org/\">Trac</a> to see if there&#8217;s a problem you might know how to fix. If you get stuck, need collaborators, or have a question about the best way to approach a fix, hop into the dev channel on IRC at irc.freenode.net, channel #wordpress-dev. Core developers will be around over the weekend working on bugs themselves, so if you&#8217;re trying to help, don&#8217;t be afraid to ask questions. With your help, maybe by Monday we can knock the bug count down to half of what it is right now. How great would that be? (Answer: pretty great)</p>\n<p>The sprint will go full force until Monday afternoon, when the lead developers and core committers will all stop to take a breath and look at the remaining bug reports to see how we did over the weekend, so don&#8217;t wait! And thanks!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/development/2010/04/coming-up-on-beta-2-sprint/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:41:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Secure File Permissions Matter\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"http://wordpress.org/development/2010/04/file-permissions/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/development/2010/04/file-permissions/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 13 Apr 2010 19:52:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1322\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:404:\"Summary: A web host had a crappy server configuration that allowed people on the same box to read each others&#8217; configuration files, and some members of the &#8220;security&#8221; press have tried to turn this into a &#8220;WordPress vulnerability&#8221; story.\nWordPress, like all other web applications, must store database connection info in clear text. Encrypting credentials doesn&#8217;t [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1428:\"<p>Summary: A web host had a crappy server configuration that allowed people on the same box to read each others&#8217; configuration files, and some members of the &#8220;security&#8221; press have tried to turn this into a &#8220;WordPress vulnerability&#8221; story.</p>\n<p>WordPress, like <em>all other</em> web applications, must store database connection info in clear text. Encrypting credentials doesn&#8217;t matter because the keys have to be stored where the web server can read them in order to decrypt the data. If a malicious user has access to the file system &#8212; like they appeared to have in this case &#8212; it is trivial to obtain the keys and decrypt the information. When you leave the keys to the door in the lock, does it help to lock the door?</p>\n<p><strong>A properly configured web server will not allow users to access the files of another user, regardless of file permissions.</strong> The web server is the responsibility of the hosting provider. The methods for doing this (suexec, et al) have been around for 5+ years.</p>\n<p>I&#8217;m not even going to link any of the articles because they have so many inaccuracies you become stupider by reading them.</p>\n<p>If you&#8217;re a web host and you turn a bad file permissions story into a WordPress story, you&#8217;re doing something wrong.</p>\n<p>P.S. Network Solutions, it&#8217;s &#8220;WordPress&#8221; not &#8220;Word Press.&#8221;</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"http://wordpress.org/development/2010/04/file-permissions/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"GSoC Application Deadline is Today!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"http://wordpress.org/development/2010/04/gsoc-application-deadline-is-today/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"http://wordpress.org/development/2010/04/gsoc-application-deadline-is-today/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Apr 2010 15:56:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:9:\"Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:4:\"GSoC\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1319\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:330:\"The deadline for students applying for Google Summer of Code this year is today, at 19:00 UTC. That’s about 3 hours from now. Still working on your application? Double check your time zone here. No late applications will be accepted.\nThere are a lot of potential projects on our Ideas list, so if you&#8217;ve been hemming [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1381:\"<p>The deadline for students applying for Google Summer of Code this year is today, at 19:00 UTC. That’s about 3 hours from now. Still working on your application? <a href=\"http://bit.ly/bP1fXT\">Double check your time zone</a> here. <strong>No late applications will be accepted.</strong></p>\n<p>There are a lot of potential projects on <a href=\"http://codex.wordpress.org/GSoC2010\">our Ideas list</a>, so if you&#8217;ve been hemming and hawing over whether or not to apply, this is your last chance for this year. We have great people lined up to mentor the students, including most of the WordPress lead developers, some dedicated core contributors, plugin developers, the BuddyPress lead developers, etc. Google is providing a great opportunity for both students and the open source projects that act as mentoring organizations (like WordPress), so don&#8217;t pass it up if you&#8217;re an eligible student. </p>\n<p>You can’t win if you don’t play, right? Five thousand bucks for two months of coding over the summer with WordPress hotshots. I know a lot of people that would love that deal. Oh, and hey, student girl wonders of WordPress-land: why haven&#8217;t you applied yet?</p>\n<p><a href=\"http://socghop.appspot.com/\">Apply now</a>! (Don&#8217;t forget to use our <a href=\"http://codex.wordpress.org/GSoC_2010_Application_Template\">application template</a>.)</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:81:\"http://wordpress.org/development/2010/04/gsoc-application-deadline-is-today/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:53:\"\n		\n		\n		\n		\n		\n				\n		\n		\n		\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"WordPress 3.0, Beta 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/development/2010/04/wordpress-3-0-beta-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"http://wordpress.org/development/2010/04/wordpress-3-0-beta-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 03 Apr 2010 03:12:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:5:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:2;a:5:{s:4:\"data\";s:7:\"Testing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:3;a:5:{s:4:\"data\";s:3:\"3.0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:4;a:5:{s:4:\"data\";s:4:\"beta\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1303\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:322:\"Remember when I posted earlier about the Twitter account, and I said that hopefully you&#8217;d find out later today what has been keeping us all so busy? Beta testers, this is your moment: the WordPress 3.0 Beta 1 has arrived!\nThis is an early beta. This means there are a few things we&#8217;re still finishing. We [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2988:\"<p>Remember when I posted earlier about the Twitter account, and I said that hopefully you&#8217;d find out later today what has been keeping us all so busy? Beta testers, this is your moment: the <a href=\"http://wordpress.org/wordpress-3.0-beta1.zip\">WordPress 3.0 Beta 1</a> has arrived!</p>\n<p>This is an <strong>early beta</strong>. This means there are a few things we&#8217;re still finishing. We wanted to get people testing it this weekend, so we&#8217;re releasing it now rather than waiting another week until everything is finalized and polished. There&#8217;s a ton of stuff going on in 3.0, so this time we&#8217;re giving you a list of things to check out, so that we can make sure people are testing all the things that need it.</p>\n<p><span id=\"more-1303\"></span>You Should Know:</p>\n<ul>\n<li>The custom menus system (Appearance &gt; Menus) is not quite finished. In Beta 2, the layout will be different and a bunch of the functionality will be improved, but we didn&#8217;t want to hold things up for this one screen. You can play with making custom menus, and report bugs if you find them, but this is not how the final screen will look/work, so don&#8217;t get attached to it.</li>\n<li>The merge! Yes, WordPress and WordPress MU have merged. This does not mean that you can suddenly start adding a bunch of new blogs from within your regular WordPress Dashboard. If you&#8217;re interested in testing the Super Admin stuff associated with multiple sites, you&#8217;ll need <a href=\"http://codex.wordpress.org/User:Andrea/Create_A_Network\">some simple directions</a> to get started.</li>\n<li>We&#8217;re still fiddling with a few small things in the UI, as we were focused on getting the more function-oriented code finished first. For example, we&#8217;re getting a new icon for the Super Admin section.</li>\n</ul>\n<p>Things to test:</p>\n<ul>\n<li>Play with the new default theme, Twenty Ten, including the custom background and header options.</li>\n<li>Custom Post Type functionality has been beefed up. It&#8217;s <a href=\"http://kovshenin.com/archives/custom-post-types-in-wordpress-3-0/\">really easy</a> to add new types, so do that and see how it looks!</li>\n<li>WordPress MU users should test the multiple sites functionality to make sure nothing broke during the merge.</li>\n</ul>\n<p>Already have a test install that you want to switch over to the beta? Try the <a href=\"http://westi.wordpress.com/2009/06/22/making-it-easy-to-be-a-wordpress-tester/\">beta tester plugin</a>.</p>\n<p>Testers, don&#8217;t forget to use the <a href=\"http://lists.automattic.com/mailman/listinfo/wp-testers\">wp-testers mailing list</a> to discuss bugs you encounter.</p>\n<p>We hope you like it! And if you don&#8217;t, well, check back when beta 2 is ready. <img src=\'http://wordpress.org/development/wp-includes/images/smilies/icon_smile.gif\' alt=\':)\' class=\'wp-smiley\' /> </p>\n<p>Download the <a href=\"http://wordpress.org/wordpress-3.0-beta1.zip\">WordPress 3.0 Beta 1</a> now!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"http://wordpress.org/development/2010/04/wordpress-3-0-beta-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Tweet, Tweet!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"http://wordpress.org/development/2010/04/tweet-tweet/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"http://wordpress.org/development/2010/04/tweet-tweet/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 02 Apr 2010 17:20:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:9:\"Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:7:\"twitter\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1297\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:332:\"This post is about the @WordPress Twitter account, so if you don&#8217;t use Twitter, or don&#8217;t care about Twitter, then feel free to take the time you might have spent reading this post to go play outside (or an equivalent) instead.\nOkay, so, Twitter! When all those apps started popping up using the Twitter API, things [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3978:\"<p>This post is about the <a href=\"https://twitter.com/wordpress\">@WordPress</a> Twitter account, so if you don&#8217;t use <a href=\"https://twitter.com/\">Twitter</a>, or don&#8217;t care about Twitter, then feel free to take the time you might have spent reading this post to go play outside (or an equivalent) instead.</p>\n<p>Okay, so, Twitter! When all those apps started popping up using the Twitter API, things like automatically following anyone who followed you and sending an automatic Direct Message seemed like good ideas. We&#8217;re all friends, right? Wrong. That auto-follow bit us hard, and the huge amount of spam the account gets means that it&#8217;s been nearly impossible to monitor legitimate messages from WordPress users and developers who need to be pointed to a help resource. We&#8217;re sorry! Just as we needed to get the <a href=\"http://wordpress.org/extend/ideas/\">Ideas Forum</a> under control* so that it could become a more useful resource for the community, we needed to get rid of the spam clogging our Twitter arteries. Except there was no easy way to do it.</p>\n<p>We had wound up following over 50,000 people. If someone went to the @WordPress profile page on Twitter to see the stream of updates from people we followed, almost none of it had anything to do with WordPress or the community. Diet pills, Twitter scams, and multi-posted spam messages were the norm. Yuck! Who else wishes there was <a href=\"http://akismet.com/\">Akismet</a> for Twitter? Unfortunately, there&#8217;s no easy way to clear this stuff out quickly (mass unfollows trigger their TOS alert, so it&#8217;s not surprising). I even contacted Twitter directly to see what the options might be, and it was suggested we use a script to clear the account.<strong> To be clear: </strong>Twitter flagged our account so that when the script was run they wouldn&#8217;t mark us as spammers for violating the TOS with a mass unfollow. We communicated with them beforehand, and the use of scripts to do this is not encouraged. Twitter was doing us a nice favor to help us get our house in order. Thanks, Twitter! Last night I ran the script and removed everyone. Extreme, but in good cause, right?</p>\n<p>We&#8217;re now starting to re-follow real people from the WordPress community. There will be no more auto-follow. If you are a WordPress developer, designer, blogger, fan site, whatever &#8212; and think your tweets should appear in the @WordPress updates stream, then send an @ reply to us and we can add you to the new list (assuming you&#8217;re not hawking diet pills, free iPads or ways to get a million followers). This way, people who are new to WordPress and go to check us out on Twitter will (hopefully) get a sense of the vibrant community that we have. People who send @ messages to us won&#8217;t (hopefully) wonder indefinitely why they were ignored, because without all the spam, maybe we can use Twitter as it was intended to be used, as another channel of communication.</p>\n<p>And for anyone who uses Qwitter and thinks @WordPress stopped loving them because of the last tweet they posted before the script ran&#8230; sorry! It wasn&#8217;t like that, we swear! It would be nice if the script could have done a bulk DM before the removal, but nope (otherwise we&#8217;d have included a message about this). So trust us, we still like you! And if you haven&#8217;t already been re-followed, please don&#8217;t take it personally&#8230; just send an @reply to @WordPress (tell us how you use WordPress!) and we&#8217;ll try to get you re-added soon. Later today (hopefully) you&#8217;ll find out what&#8217;s been keeping us so busy!</p>\n<p><em>*Have you noticed? We cleared out thousands of old threads, added categorization, and will try to keep it to under a hundred open idea threads at a time so that they can be managed in a timely fashion. <a href=\"http://wordpress.org/extend/ideas/\">Check it out</a> and rate some of the new ideas today!</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"http://wordpress.org/development/2010/04/tweet-tweet/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:44:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n			\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"Summer of WordPress 2010: Act II\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"http://wordpress.org/development/2010/03/summer-of-wordpress-2010-act-ii/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"http://wordpress.org/development/2010/03/summer-of-wordpress-2010-act-ii/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 29 Mar 2010 15:45:02 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:9:\"Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"http://wordpress.org/development/?p=1281\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:346:\"Scene: A college classroom\nProfessor: So. Out of the 20 students in the class, half wrote WordPress Summer of Code proposals good enough to receive an A. How many of you are planning to apply for the program?\nJack, a student: I am. They opened applications today.\nSophie, a student: I am. And that sentence was grammatically terrible.\nJack: [...]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Jane Wells\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:5148:\"<p><em>Scene: A college classroom</em></p>\n<p><strong>Professor: </strong>So. Out of the 20 students in the class, half wrote <a href=\"http://wordpress.org/gsoc\">WordPress Summer of Code</a> proposals good enough to receive an A. How many of you are planning to apply for the program?</p>\n<p><strong>Jack, a student:</strong> I am. They opened applications today.</p>\n<p><strong>Sophie, a student: </strong>I am. And that sentence was grammatically terrible.</p>\n<p><strong>Jack: </strong>Shut up.</p>\n<p><strong>Chris, a student: </strong>I&#8217;m not applying.</p>\n<p><strong>Jack</strong> (to Chris)<strong>:</strong> Chicken?</p>\n<p><strong>Sophie:</strong> You&#8217;re such a jerk! Maybe he has a job lined up or something, did you ever think of that?</p>\n<p><strong>Professor:</strong> Whoa -</p>\n<p><strong>Chris: </strong>Actually, I&#8217;m going backpacking in Australia with my Dad. No internet for about half the time, and when I emailed the people at WordPress they said I should probably wait until next year to apply and make sure I&#8217;d be able to be online through the whole summer.</p>\n<p><strong>Professor: </strong>Fair enough. The application period opens today at 19:00 UTC and goes through April 9th, so let&#8217;s hear from the people who are applying.</p>\n<p><strong>Jack:</strong> I&#8217;m submitting mine today.</p>\n<p><strong>Sophie: </strong>That&#8217;s just stupid.</p>\n<p><strong>Andrea, a teacher’s assistant: </strong>Hey, that&#8217;s not necessary.</p>\n<p><strong>Jack: </strong>Yeah! The early bird gets the worm, or hadn&#8217;t you heard?</p>\n<p><strong>Sophie:</strong> What I heard was that the WordPress mentors are holding open IRC chats this week to talk to prospective students and give them feedback on proposals and ideas, and that talking directly to the mentors ups your chances of being selected. But I guess you don&#8217;t think you need the people who are actually choosing the students to know your name because your proposal is so brilliant?</p>\n<p><em>Jack&#8217;s jaw drops.</em></p>\n<p><strong>Jack: </strong>Where did you hear that? It wasn&#8217;t on the GSoC mailing list.</p>\n<p><strong>Sophie: </strong>I joined the wp-hackers list and asked all the core contributors for feedback on my idea, and then I emailed 3 potential mentors to see what they thought of it personally. By the time applications are due, I&#8217;ll have revised it based on community and mentor feedback, and enough people will know who I am &#8212; and that I&#8217;m full of initiative &#8212; that my chances of being accepted will be much better.</p>\n<p><strong>Jack: </strong>You think you&#8217;re all Felicia Day with your MW2 level 70, but you&#8217;re just a computer nerd.</p>\n<p><strong>Sophie:</strong> Um, duh. We&#8217;re in an advanced computer programming class. We&#8217;re all computer nerds.</p>\n<p><strong>Professor: </strong>Now, now. Sophie&#8217;s correct; talking to community members and mentors will improve her chances. But, Jack, there&#8217;s no reason you can&#8217;t join the IRC chats and the mailing list to get your name out there, too, even if you submit your application today. Most proposals get tweaked a bit after the students are chosen anyway.</p>\n<p><strong>Sophie: </strong>Plus, Felicia Day is awesome! And <a href=\"http://feliciaday.com/blog\">she uses WordPress</a>, so ha!</p>\n<p><em>End Act II.</em></p>\n<p>Here&#8217;s the deal. <a href=\"http://socghop.appspot.com/site/home/site\">The application period opens today</a>. Early applications will likely get a bit more attention up front, but it&#8217;s also important that your ideas and approach are vetted by the community and <a href=\"http://codex.wordpress.org/GSoC2010#Mentors\">the mentors</a>. If you haven&#8217;t already, you should join the <a href=\"http://lists.automattic.com/mailman/listinfo/wp-hackers\">wp-hackers mailing list</a> and send your proposal to the list for feedback. We&#8217;ll also be doing a few IRC chats during the application period to give students a chance to talk directly with the mentors. Note that not every mentor will attend all three chats, so if you want to talk to a specific person, you might want to email them. Please arrive on time to the chats, as they will be scheduled for an hour, and will have to accommodate multiple students. IRC chats will be held at irc.freenode.net in room #wordpress-gsoc.</p>\n<ul>\n<li>Wednesday, March March 31 at 20:30 UTC (4:30pm eastern)</li>\n<li>Saturday, April 3 at 21:30 UTC (5:30pm eastern)</li>\n<li>Wednesday, April 7 at 20:30 UTC (4:30pm eastern)</li>\n</ul>\n<p>This chat room will remain open during the application period, and various mentors and community members may be there and able to answer questions, but the scheduled chats are the only official times at which they are scheduled to do so.</p>\n<p>Oh, and if you want to help publicize the WordPress summer of code, <a href=\"http://wpdevel.files.wordpress.com/2010/03/wordpress-gsoc-flyer.pdf\">grab a flyer</a> and post it somewhere on a bulletin board at your local college campus. Professors, don&#8217;t forget to encourage your brightest students to apply!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"http://wordpress.org/development/2010/03/summer-of-wordpress-2010-act-ii/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:38:\"http://wordpress.org/development/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:8:{s:10:\"x-pingback\";s:43:\"http://wordpress.org/development/xmlrpc.php\";s:13:\"last-modified\";s:29:\"Fri, 28 May 2010 02:35:04 GMT\";s:4:\"etag\";s:34:\"\"aaae800eab4f2638392c950d54eb85bc\"\";s:4:\"link\";s:17:\"<>; rel=shortlink\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:4:\"date\";s:29:\"Fri, 28 May 2010 03:52:33 GMT\";s:6:\"server\";s:9:\"LiteSpeed\";s:10:\"connection\";s:5:\"close\";}s:5:\"build\";s:14:\"20090627192103\";}','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL auto_increment,
  `post_id` bigint(20) unsigned NOT NULL default '0',
  `meta_key` varchar(255) default NULL,
  `meta_value` longtext,
  PRIMARY KEY  (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM AUTO_INCREMENT=844 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (107,32,'_wp_attachment_metadata','a:0:{}'),(3,2,'_wp_page_template','default'),(153,40,'_wp_attachment_metadata','a:0:{}'),(154,41,'_wp_attached_file','/data/websites/blog.IntelliGrape.com/wp-content/uploads/2009/04/extendfck.zip'),(106,32,'_wp_attached_file','/data/websites/blog.IntelliGrape.com/wp-content/uploads/2009/04/grails-url-mappings.zip'),(51,17,'_wp_attachment_metadata','a:0:{}'),(50,17,'_wp_attached_file','/data/websites/blog.IntelliGrape.com/wp-content/uploads/2008/07/chaindropdown.zip'),(152,40,'_wp_attached_file','/data/websites/blog.IntelliGrape.com/wp-content/uploads/2009/04/filelist.gsp'),(155,41,'_wp_attachment_metadata','a:0:{}'),(208,49,'_edit_lock','1273859056'),(209,49,'_edit_last','6'),(210,27,'_edit_lock','1247560001'),(211,27,'_edit_last','1'),(212,2,'_edit_lock','1248932433'),(213,2,'_edit_last','7'),(214,61,'_edit_lock','1268893929'),(215,61,'_edit_last','10'),(216,16,'_edit_lock','1257323047'),(217,16,'_edit_last','7'),(218,91,'_wp_attached_file','2009/05/screenshot1.png'),(219,91,'_wp_attachment_metadata','a:5:{s:5:\"width\";s:3:\"378\";s:6:\"height\";s:3:\"307\";s:14:\"hwstring_small\";s:23:\"height=\'95\' width=\'118\'\";s:4:\"file\";s:23:\"2009/05/screenshot1.png\";s:10:\"image_meta\";a:10:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";}}'),(222,7,'_edit_lock','1243326897'),(223,7,'_edit_last','13'),(228,42,'_edit_lock','1243575177'),(229,42,'_edit_last','7'),(230,48,'_edit_lock','1243943854'),(231,48,'_edit_last','6'),(239,136,'_edit_last','10'),(240,45,'_edit_lock','1247464259'),(238,136,'_edit_lock','1268893646'),(241,45,'_edit_last','11'),(293,212,'_edit_last','14'),(292,212,'_edit_lock','1267079477'),(273,181,'_edit_last','10'),(272,181,'_edit_lock','1268893756'),(255,162,'_edit_last','7'),(310,236,'_edit_lock','1273860046'),(254,162,'_edit_lock','1251087878'),(300,227,'_edit_lock','1251453678'),(301,227,'_edit_last','7'),(282,199,'_edit_lock','1250913702'),(283,199,'_edit_last','7'),(326,251,'_edit_lock','1267682728'),(311,236,'_edit_last','4'),(320,247,'_edit_lock','1259647958'),(321,247,'_edit_last','13'),(327,251,'_edit_last','13'),(332,277,'_edit_lock','1257306084'),(333,277,'_edit_last','7'),(345,290,'_edit_last','4'),(344,290,'_edit_lock','1259092186'),(362,305,'_edit_lock','1267114887'),(363,305,'_edit_last','10'),(366,308,'_edit_lock','1259732671'),(367,308,'_edit_last','4'),(370,318,'_edit_lock','1267688003'),(371,318,'_edit_last','13'),(384,335,'_edit_lock','1264071824'),(385,335,'_edit_last','7'),(394,33,'_edit_lock','1260385370'),(395,33,'_edit_last','8'),(396,34,'_edit_lock','1260385371'),(397,34,'_edit_last','8'),(398,43,'_edit_lock','1260385372'),(399,43,'_edit_last','8'),(403,349,'_edit_last','7'),(402,349,'_edit_lock','1264072175'),(415,15,'_edit_last','16'),(414,15,'_edit_lock','1272829378'),(416,359,'_edit_lock','1267071069'),(417,359,'_edit_last','7'),(426,367,'_edit_lock','1268748058'),(427,367,'_edit_last','6'),(434,359,'_oembed_4bd790e94190a2a39519bb8cb56b4675','{{unknown}}'),(435,349,'_oembed_d35f1817bc2efe19c974476ac23b61d8','{{unknown}}'),(436,335,'_oembed_76f0089d7190f1c4850f9f78beebead6','{{unknown}}'),(437,308,'_oembed_e4670d87183aa3758dbde9f1fcd70525','{{unknown}}'),(438,290,'_oembed_f9e056e0a4e3f76a6d3d132ae206d5a1','{{unknown}}'),(439,377,'_edit_lock','1267504910'),(440,377,'_edit_last','14'),(441,44,'_oembed_0d46e8709eed3eeee4f520548cf40f34','{{unknown}}'),(442,27,'_oembed_e4670d87183aa3758dbde9f1fcd70525','{{unknown}}'),(443,227,'_oembed_d35f1817bc2efe19c974476ac23b61d8','{{unknown}}'),(444,199,'_oembed_d35f1817bc2efe19c974476ac23b61d8','{{unknown}}'),(445,162,'_oembed_d35f1817bc2efe19c974476ac23b61d8','{{unknown}}'),(446,359,'_oembed_70d8b6167c1fe5c310b52d3377ac4411','{{unknown}}'),(447,349,'_oembed_4b7fbfacf22425e5b61be0fa4206f0b6','{{unknown}}'),(448,335,'_oembed_525d62764e761d6ed6fb0a575efad196','{{unknown}}'),(449,308,'_oembed_fc561aaeca71b724aaee9364987c028b','{{unknown}}'),(450,290,'_oembed_3732d533267040f90c6e68306c94f735','{{unknown}}'),(451,227,'_oembed_4b7fbfacf22425e5b61be0fa4206f0b6','{{unknown}}'),(452,162,'_oembed_4b7fbfacf22425e5b61be0fa4206f0b6','{{unknown}}'),(453,199,'_oembed_4b7fbfacf22425e5b61be0fa4206f0b6','{{unknown}}'),(454,44,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}'),(455,27,'_oembed_fc561aaeca71b724aaee9364987c028b','{{unknown}}'),(456,26,'_oembed_fc561aaeca71b724aaee9364987c028b','{{unknown}}'),(457,25,'_oembed_fc561aaeca71b724aaee9364987c028b','{{unknown}}'),(458,395,'_edit_lock','1267115061'),(459,395,'_edit_last','10'),(460,402,'_wp_attached_file','2010/02/Screenshot-iReport-Options.png'),(461,402,'_wp_attachment_metadata','a:5:{s:5:\"width\";s:3:\"511\";s:6:\"height\";s:3:\"498\";s:14:\"hwstring_small\";s:22:\"height=\'96\' width=\'98\'\";s:4:\"file\";s:38:\"2010/02/Screenshot-iReport-Options.png\";s:10:\"image_meta\";a:10:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";}}'),(462,402,'_wp_attachment_image_alt','check \"option -> setting -> compiler --> Use Report Directory to Compile\"'),(474,395,'_oembed_fc561aaeca71b724aaee9364987c028b','{{unknown}}'),(475,410,'_edit_lock','1268893731'),(476,410,'_edit_last','10'),(484,421,'_edit_last','7'),(483,421,'_edit_lock','1267247900'),(487,424,'_edit_lock','1267848718'),(488,424,'_edit_last','7'),(491,429,'_edit_lock','1272536901'),(492,429,'_edit_last','13'),(537,455,'_edit_last','16'),(511,442,'_edit_lock','1269582330'),(512,442,'_edit_last','7'),(549,44,'_edit_last','11'),(536,455,'_edit_lock','1273557610'),(535,442,'_oembed_3732d533267040f90c6e68306c94f735','{{unknown}}'),(548,44,'_edit_lock','1271657292'),(547,455,'_oembed_3732d533267040f90c6e68306c94f735','{{unknown}}'),(546,455,'_oembed_2c377491fb8de7742d524d0afb4b2433','{{unknown}}'),(550,462,'_edit_lock','1268748027'),(551,462,'_edit_last','6'),(552,471,'_edit_lock','1268798580'),(553,471,'_edit_last','6'),(554,472,'_edit_lock','1270050176'),(555,472,'_edit_last','19'),(556,477,'_edit_lock','1271330872'),(557,477,'_edit_last','9'),(566,498,'_edit_lock','1269335994'),(567,498,'_edit_last','15'),(580,514,'_edit_lock','1269582133'),(581,514,'_edit_last','7'),(584,520,'_edit_lock','1272536837'),(585,520,'_edit_last','13'),(588,527,'_edit_lock','1270101309'),(589,527,'_edit_last','19'),(597,538,'_edit_last','14'),(596,538,'_edit_lock','1272516120'),(600,549,'_edit_lock','1271330439'),(601,549,'_edit_last','9'),(606,554,'_edit_lock','1272881320'),(607,554,'_edit_last','8'),(612,558,'_edit_lock','1271658812'),(613,558,'_edit_last','11'),(614,560,'_edit_lock','1271658698'),(615,560,'_edit_last','11'),(626,573,'_edit_last','19'),(625,573,'_edit_lock','1272353492'),(652,592,'_edit_lock','1272461841'),(629,560,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}'),(667,600,'_edit_last','19'),(653,592,'_edit_last','14'),(666,600,'_edit_lock','1272353471'),(661,46,'_edit_lock','1272013348'),(662,46,'_edit_last','7'),(665,592,'_oembed_3732d533267040f90c6e68306c94f735','{{unknown}}'),(670,604,'_edit_lock','1272462657'),(671,604,'_edit_last','14'),(679,615,'_edit_last','10'),(678,615,'_edit_lock','1272465562'),(682,618,'_edit_lock','1272879635'),(683,618,'_edit_last','16'),(691,626,'_edit_last','16'),(690,626,'_edit_lock','1272831132'),(694,630,'_edit_lock','1272879826'),(695,630,'_edit_last','16'),(696,633,'_edit_lock','1273772533'),(697,633,'_edit_last','21'),(707,633,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}'),(708,11,'_edit_lock','1272967723'),(709,11,'_edit_last','16'),(710,643,'_edit_lock','1273598644'),(711,643,'_edit_last','21'),(743,643,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}'),(734,655,'_edit_lock','1273466890'),(735,655,'_edit_last','7'),(736,655,'_wp_trash_meta_status','draft'),(737,655,'_wp_trash_meta_time','1273466924'),(744,659,'_edit_lock','1273598428'),(745,659,'_edit_last','21'),(746,659,'_wp_trash_meta_status','draft'),(747,659,'_wp_trash_meta_time','1273598636'),(748,663,'_edit_lock','1273911657'),(749,663,'_edit_last','4'),(752,677,'_edit_lock','1273736487'),(753,677,'_edit_last','21'),(754,677,'_wp_trash_meta_status','draft'),(755,677,'_wp_trash_meta_time','1273736538'),(756,681,'_edit_lock','1274945415'),(757,681,'_edit_last','19'),(758,685,'_edit_lock','1273753044'),(759,685,'_edit_last','21'),(760,685,'_wp_trash_meta_status','draft'),(761,685,'_wp_trash_meta_time','1273753070'),(766,703,'_edit_lock','1273833488'),(767,703,'_edit_last','21'),(768,710,'_edit_lock','1273826692'),(769,710,'_edit_last','15'),(770,714,'_edit_lock','1274069858'),(771,714,'_edit_last','7'),(822,714,'_oembed_3732d533267040f90c6e68306c94f735','{{unknown}}'),(792,733,'_edit_last','18'),(791,733,'_edit_lock','1273850263'),(800,743,'_edit_lock','1274945048'),(799,733,'_oembed_3732d533267040f90c6e68306c94f735','{{unknown}}'),(801,743,'_edit_last','19'),(802,747,'_edit_lock','1273866280'),(803,747,'_edit_last','6'),(824,767,'_edit_last','11'),(823,767,'_edit_lock','1274438330'),(835,743,'_oembed_fc561aaeca71b724aaee9364987c028b','{{unknown}}'),(832,767,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}'),(836,778,'_edit_lock','1274945782'),(837,778,'_edit_last','19'),(842,778,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}'),(843,778,'_oembed_3cb07d368c32998a5ff7a3efcd2d36b4','{{unknown}}');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL auto_increment,
  `post_author` bigint(20) unsigned NOT NULL default '0',
  `post_date` datetime NOT NULL default '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL default '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_category` int(4) NOT NULL default '0',
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL default 'publish',
  `comment_status` varchar(20) NOT NULL default 'open',
  `ping_status` varchar(20) NOT NULL default 'open',
  `post_password` varchar(20) NOT NULL default '',
  `post_name` varchar(200) NOT NULL default '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL default '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL default '0000-00-00 00:00:00',
  `post_content_filtered` text NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL default '0',
  `guid` varchar(255) NOT NULL default '',
  `menu_order` int(11) NOT NULL default '0',
  `post_type` varchar(20) NOT NULL default 'post',
  `post_mime_type` varchar(100) NOT NULL default '',
  `comment_count` bigint(20) NOT NULL default '0',
  PRIMARY KEY  (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`)
) ENGINE=MyISAM AUTO_INCREMENT=785 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (2,1,'2008-02-23 01:37:26','2008-02-25 20:07:26','<a href=\"http://www.IntelliGrape.com\">IntelliGrape Systems</a> is a young, small and dynamic software development company, based in New Delhi, India. IntelliGrape has an experienced team of technical programmers focusing on the latest web development technologies.\r\n\r\nOur core competency is in developing world class software applications using the latest technologies in java space; especially using opensource tools and frameworks. We are passionate about delivery of working and usable software to our clients. We engage with our clients to design, build and deploy solutions that are truly an asset for the client\'s business.\r\n\r\nWe understand the pitfalls of offshore software development well, having learnt from challenges we faced several times during such outsourced projects. We have necessary skills and experience of taking full responsibility for the customer\'s application, including all aspects of software lifecycle - prototyping, development, testing, maintenance, support.\r\n\r\nIntelliGrape is a lean and agile company - we use Scrum and extreme programming practices for software development. We deliver working, high-quality and production ready software to our customers in short iterations of 1-2 weeks.\r\n\r\nIntelliGrape engages with its customers to become more reactive and more cabable of hitting fast moving business targets.','About IntelliGrape',0,'','publish','open','open','','about','','','2008-06-19 11:28:53','2008-06-19 05:58:53','',0,'',0,'page','',0),(5,1,'2008-02-04 23:25:22','2008-02-26 17:46:30','Installable software for Linux is mainly packaged as .rpm (for RedHat) &amp; .deb (for Ubuntu &amp; other debian based distributions).\r\n\r\nThere can be cases when you want to install some application on your Ubuntu system &amp; the same application might only be available as .rpm. Recently, I was in a similar situation when I had to install <a href=\"http://\" title=\"http://www-306.ibm.com/software/integration/wmq/\" target=\"_blank\">IBM WebSphere MQ</a>; but the installation package was availabe only in RPM format.\r\n\r\nIn such cases, you can use the <a href=\"http://kitenet.net/%7Ejoey/code/alien.html\" title=\"alien package converter\">alien package converter</a> to convert the .rpm to .deb.\r\n\r\nYou can install <strong>alien</strong> using the following command -\r\n<code>\r\nsudo apt-get install alien\r\n</code>\r\n\r\nAfter alien has been installed, you can convert a .rpm to .deb using:\r\n\r\n<code>alien &lt;rpm package file name&gt;</code>\r\n\r\nAfter you have the .deb file, you can install the package using:\r\n\r\n<code>dpkg -i &lt;deb package file name&gt;</code>','how to convert a .rpm to .deb',0,'','publish','open','open','','how-to-convert-a-rpm-to-deb','','','2008-02-27 18:23:28','2008-02-27 12:53:28','',0,'http://www.intelligrape.com/blog/?p=5',0,'post','',1),(7,1,'2008-02-13 01:37:26','2008-02-27 01:55:57','Follow the steps mentioned below to integrate Apache with Tomcat on an Ubuntu system. The steps assume that Apache and Tomcat are already installed and working fine independently.\r\n<ul>\r\n	<li>Install Apache module for tomcat</li>\r\n</ul>\r\n<blockquote><code>sudo apt-get install libapache2-mod-jk</code></blockquote>\r\n<ul>\r\n	<li>Create a file by the name \"worker.properties\" in /etc/apache2 directory. Sample worker.properties file below</li>\r\n</ul>\r\n<blockquote><code>workers.tomcat_home=/opt/servers/tomcat5.5\r\nworkers.java_home=/opt/java/jdk1.5\r\nps=/\r\nworker.list=worker1\r\nworker.default.port=8009\r\nworker.default.host=localhost\r\nworker.default.type=ajp13\r\nworker.default.lbfactor=1\r\n</code></blockquote>\r\n<ul>\r\n	<li>Add the following line to your site configuration file (/etc/apache2/sites-available/dellServer)</li>\r\n</ul>\r\n<blockquote><code>jkMount /* worker1\r\n</code></blockquote>\r\n<ul>\r\n	<li>Add the following lines to the end of your /etc/apache2/apache2.conf file</li>\r\n</ul>\r\n<blockquote><code>LoadModule jk_module /usr/lib/apache2/modules/mod_jk.so\r\n# Where to find workers.properties\r\nJkWorkersFile /etc/apache2/workers.properties\r\n# Where to put jk logs\r\nJkLogFile /tmp/mod_jk.log\r\n# Set the jk log level [debug/error/info]\r\nJkLogLevel info\r\n# Select the log format\r\nJkLogStampFormat \"[%a %b %d %H:%M:%S %Y] \"\r\n# JkOptions indicate to send SSL KEY SIZE,\r\nJkOptions +ForwardKeySize +ForwardURICompat -ForwardDirectories\r\n# JkRequestLogFormat set the request format\r\nJkRequestLogFormat \"%w %V %T\"\r\n</code></blockquote>','Apache-Tomcat integration on Ubuntu server',0,'','publish','open','open','','apache-tomcat-integration-on-ubuntu-server','','','2008-02-27 07:28:24','2008-02-27 01:58:24','',0,'http://www.intelligrape.com/blog/?p=7',0,'post','',7),(8,1,'2008-02-28 12:19:56','0000-00-00 00:00:00','In this post, I intend to cover a discussion that I had with a friend who has a pure waterfall background and who wanted to understand the differences between an agile and a water project. \r\n\r\n- waterfall projects are artifact driven, agile : feature driven\r\n- the way chunking is done ; WP divides the projects into tasks that need to be done : requirments, design, development, in agile, you divide on the basis of features/stories. \r\n- the way business value is realized : graph of EBV in pure agile and pure waterfall\r\n- the philosophy for change : embrace change and resist change\r\n- evolutionary design and big upfront design\r\n','Difference between an Agile and a Waterfall project',0,'','draft','open','open','','','','','2008-02-28 12:19:56','2008-02-28 06:49:56','',0,'http://www.intelligrape.com/blog/?p=8',0,'post','',0),(9,1,'2008-03-02 06:24:25','0000-00-00 00:00:00','\r\n<ul>\r\n	<li>AStyle</li>\r\n	<li>Jalopy</li>\r\n</ul>\r\nJalopy looks more promising. It has a maven plug-in and an ant plugin.\r\n\r\nThere are 2 things that you can do :\r\n\r\n- As part of the maven build, also run this plug-in to format the code.\r\n\r\n- Basically, you will always run the maven build before checking-in and hence the code would be formatted by Jalopy maven plugin.','How to do code formatting independent of the editor',0,'','draft','open','open','','','','','2008-03-02 06:24:25','2008-03-02 00:54:25','',0,'http://www.intelligrape.com/blog/?p=9',0,'post','',0),(10,1,'2008-03-05 20:17:08','0000-00-00 00:00:00','Today, I installed CruiseControl on my Ubuntu server. Installing and doing a basic configuration is really simple.\r\n\r\nI followed these steps to install CruiseControl and configure 2 projects\r\n<ul>\r\n	<li>First of all, download the binary zip from <a href=\"http://downloads.sourceforge.net/cruisecontrol/cruisecontrol-bin-2.7.1.zip?modtime=1188893603\" title=\"Sourceforge\">SourceForge</a> repository.</li>\r\n	<li>Unzip the binary into /opt\r\n<code>cd /opt; unzip ~/downloads/cruisecontrol-bin-2.7.1.zip</code></li>\r\n	<li><code></code>create a sym link to the cruise-control installation directory</li>\r\n<code>	ln -s cruisecontrol-bin-2.7.1 cc</code></ul>\r\n<ul>\r\n	<li>Start the cruisecontrol server</li>\r\n</ul>\r\n<code>    ./cruisecontrol.sh</code>\r\n<ul>\r\n	<li>Add more points about\r\n<ul>\r\n	<li>how to add a project</li>\r\n	<li>how to change the port</li>\r\n	<li>how to integration with subversion</li>\r\n	<li>how to add a maven2 based project</li>\r\n	<li>scm</li>\r\n	<li></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul></ul>','How to install CruiseControl on Linux / Ubuntu',0,'','draft','open','open','','','','','2008-03-05 20:17:08','2008-03-05 14:47:08','',0,'http://www.intelligrape.com/blog/?p=10',0,'post','',0),(11,1,'2008-03-13 15:30:50','2008-03-13 10:00:50','Recently, one of my non-technical friends requested for my help to register a domain name for his business in India. I asked him to check if the domain that he wants to have for his business is available. He checked on some domain registration website and told me that it was available.\r\n\r\nThe domain that he was considering was : <a href=\"http:;/www.ChandgiRam.com\" title=\"http:;/www.ChandgiRam.com\">http:;/www.ChandgiRam.com</a>\r\n\r\nHe was quite happy about the availability of the domain.\r\n\r\nNext day, when I went to goDaddy.com to register the domain, I saw that the domain was not available. I checked-up with my friend &amp; he said  that he was sure that the same domain was available. I got curious and checked the Shois records for the domain and I found that the same domain had been registered by somebody a day back - after the availability check was done by my friend.\r\n\r\nHere are the Whois record for the domain:\r\n\r\n<a href=\"http://www.who.is/whois-com/ip-address/chandgiram.com/\" title=\"http://www.who.is/whois-com/ip-address/chandgiram.com/\">http://www.who.is/whois-com/ip-address/chandgiram.com/</a>\r\n\r\nI don\'t really think it as a coincidence. Because of some reasons, I could not get hold of the sites which my friend used to check the domain availability. I am of the opinion that there are certain sites which offer domain availability functionality; and register the same website themselves if deemed good.\r\n\r\nHas anybody else had a similar experience, I am very curious to know.','Is it a coincidence? I don\'t think so',0,'','private','open','open','','is-it-a-coincidence-i-dont-think-so','','','2008-04-06 14:59:36','2008-04-06 09:29:36','',0,'http://www.intelligrape.com/blog/?p=11',0,'post','',0),(12,1,'2008-04-08 09:02:21','2008-04-08 03:32:21','If you are running Feisty Fawn on AMD 64 machine and try to open a VMWare image, you will most-likely get this error message\r\n\r\n\"Error while powering on: Failed to connect to peer process.\"\r\n\r\nThe solution to this problem is to install the following the 32-bit libraries required by Ubuntu to recognize the 32-bit operating system.\r\n\r\nUse the following command to install the required libraries.\r\n\r\n<code>sudo apt-get install ia32-libs</code>\r\n\r\nAfter installing these libraries, I was able to open the virtual machine without any problems on my Ubuntu Feisty Fawn AMD 64 machine.\r\n\r\nHope this helps somebody.','Running VMWare on AMD 64 running Feisty Fawn',0,'','publish','open','open','','running-vmware-on-amd-64-running-feisty-fawn','','','2008-04-08 09:04:37','2008-04-08 03:34:37','',0,'http://www.intelligrape.com/blog/?p=12',0,'post','',1),(13,1,'2008-04-21 10:23:18','0000-00-00 00:00:00','This weekend, I installed MediaWiki at one of my client\'s Ubuntu servers. Installing MediaWiki was a real breeze. I could install and get-going in less than an hour.\r\n\r\nI followed the steps mentioned below to install MediaWiki with MySQL as the database (MediaWiki provides option for PostgreSQL as well, not sure about other databases), and do some very basic customization.\r\n<pre>apt-get install mysql-admin mysql-server\r\nmysqladmin -u root -p create mediawiki\r\nsudo apt-get install mediawiki imagemagick mediawiki-math</pre>\r\n<pre></pre>\r\n<pre>To enable MediaWiki edit the following file and remove the \'#\' from the\r\nthird line so that it reads \'Alias /mediawiki /var/lib/mediawiki1.10\':</pre>\r\n<pre>sudo nano /etc/apache2/conf.d/mediawiki1.10.conf</pre>\r\n<pre>restart apache</pre>\r\n<pre>http://yourhost.com/mediawiki (provide all the required setting)</pre>\r\nrestart apache\r\n\r\n* configure the logo  (work-around)\r\n\r\nrestart apache\r\n\r\n* how to set-up the virtual host','How to install MediaWiki on Ubuntu ',0,'','draft','open','open','','','','','2008-04-21 10:23:18','2008-04-21 04:53:18','',0,'http://www.intelligrape.com/blog/?p=13',0,'post','',0),(14,1,'2008-04-23 20:58:49','2008-04-23 15:28:49','There are certain sites and applications which work only with Internet Explorer. One such application that I am currently working on is <a href=\"http://www.emc.com/products/detail/software/webtop.htm\" title=\"EMC Documentum Webtop\">EMC Documentum Webtop</a>.\r\n\r\nAfter getting fed-up of the warning message thrown by <a href=\"http://www.emc.com/products/detail/software/webtop.htm\" title=\"Webtop\">Webtop</a> about unsupported browser and some weird behavior sometimes, I finally decided to install IE on my Ubuntu machine.\r\n\r\nI followed the following steps to install IE on my Ubuntu machine\r\n<ul>\r\n	<li>modified /etc/apt/sources file to add/un-comment the following 2 lines</li>\r\n</ul>\r\n<blockquote> <code>deb http://in.archive.ubuntu.com/ubuntu gutsy universe\r\ndeb-src http://in.archive.ubuntu.com/ubuntu gutsy universe\r\ndeb http://wine.budgetdedicated.com/apt gutsy main\r\ndeb-src  http://wine.budgetdedicated.com/apt gutsy main</code></blockquote>\r\n<ul> <code> </code>\r\n	<li>  <code>sudo apt-get update</code></li>\r\n	<li>  <code>sudo apt-get install wine cabextract</code></li>\r\n	<li> <code>wget http://www.tatanka.com.br/ies4linux/downloads/ies4linux-latest.tar.gz</code></li>\r\n	<li>  <code>tar xzvf ies4linux-2.0.5.tar.gz</code></li>\r\n	<li>  <code>cd ies4linux-2.0.5</code></li>\r\n	<li> <code>./ies4linux </code>(make sure you are not root here)</li>\r\n</ul>\r\nWhen running the installer (the last step), I got the following error\r\n\r\n<code> ui/pygtk/python-gtk.sh: line 6: 15717 Segmentation fault      (core dumped) python \"$IES4LINUX\"/ui/pygtk/ies4linux-gtk.py</code>\r\n\r\nAfter googling around to find a solution to the problem, I had a look at the ies4linux-gtk.py file mentioned in the error message. The line 6 looks like this\r\n\r\n<code>import gtk, gobject, pango, sys, os</code>\r\n\r\nSomehow, I suspected that there are some unmet dependencies, so looked for packages by the name gobject\r\n\r\n<code>apt-cache search gobject</code>\r\n\r\nand I found this:\r\n\r\ngob2 - GTK+ Object Builder\r\n\r\nI installed the gob2 package\r\n\r\n<code>sudo apt-get install gob2</code>\r\n\r\nand after that I ran the installer again and this time the installation succeeded without any problems.\r\n\r\nHope this helps somebody.','Installing IEs4Linux on Ubuntu Gutsy Gibbon',0,'','publish','open','open','','installing-ies4linux-on-ubuntu-gutsy-gibbon','','','2008-04-23 21:05:14','2008-04-23 15:35:14','',0,'http://www.intelligrape.com/blog/?p=14',0,'post','',1),(15,1,'2008-05-07 18:02:57','2008-05-07 12:32:57','I have a big fan of <a href=\"http://selenium.openqa.org/\" title=\"Selenium\">Selenium</a> and have been using <a href=\"http://selenium.openqa.org/\" title=\"Selenium\">Selenium</a> for quite some time for testing of web-applications.\r\n\r\nRecently, I upgraded my machine to <a href=\"https://wiki.ubuntu.com/HardyHeron\" title=\"Ubuntu Hardy Heron\">Ubuntu Hardy Heron</a> and the next day, I found that all the selenium tests started failling on my machine. On digging through the logs, I found the following information in the <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server </a>logs:\r\n\r\n<code>java.lang.RuntimeException: File was a script file, not a real executable: /usr/bin/firefox-bin</code>\r\n\r\nBefore actually spotting this line, I was mis-led by other log messages; but I will not talk about them in this post.\r\n\r\nThe reason for the failing tests was that <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server</a> thought that the default executable found in the path (/usr/bin/firefox) was a script file and not an executable application for the browser. I am not sure why <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server</a> checks whether the path to the browser should not be a script.\r\n\r\nThe cause of the problem is that because of  <a href=\"https://wiki.ubuntu.com/HardyHeron\" title=\"Ubuntu Hardy Heron\">Ubuntu Hardy Heron</a> upgrade, my firefox also got upgraded from 2.x to 3.x. The firefox browser executable in 2.x is a binary file; whereas for firefox 3.x, it is a script (.sh) file. As a result of this change, the check done by  <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server</a> was failing.\r\n\r\nI resolved this problem by providing explicit path to the Firefox 2 executable file in the java code. (I also tried providing explicit path to the Firefox 3 executable but that is no help).\r\n\r\nSo, the code for the Java Selenium test-case looks like this :\r\n\r\n<code>selenium = new DefaultSelenium(\"localhost\", 4444, \"*firefox /usr/lib/firefox/firefox-2-bin\", url);</code>\r\n\r\nThis is not a solution, if you want to test your app with Firefox 3. I haven\'t figured out the solution for making it work with Firefox 3; but for the time being, I am happy with testing my application with Firefox 2.\r\n\r\nIf somebody has a solution for making it work with Firefox 3, please post the solution as a comment to the blog.\r\n\r\n-Deepak','Web Testing using Selenium - fix for error \"java.lang.NullPointerException: sessionId should not be null; has this session been started yet?\"',0,'','publish','open','open','','web-testing-using-selenium-fix-for-error-javalangnullpointerexception-sessionid-should-not-be-null-has-this-session-been-started-yet','','','2008-05-07 18:03:39','2008-05-07 12:33:39','',0,'http://www.intelligrape.com/blog/?p=15',0,'post','',8),(16,1,'2008-07-17 20:56:02','2008-07-17 15:26:02','<title></title> 	 	 	 	<!-- 		@page { size: 21cm 29.7cm; margin: 2cm } 		P { margin-bottom: 0.21cm } 	-->\r\n\r\nIn web application development, use of frameworks has become essential . One of those frameworks which help us in making things simpler and life easy is jQuery.\r\n\r\n<strong>Why jQuery ?</strong>\r\n<ul>\r\n	<li>  Fully Documented</li>\r\n	<li>  Great Community</li>\r\n	<li>  Tons of plugins</li>\r\n	<li>  Small size(14kb)</li>\r\n	<li>  Everything  works in IE 6+,Firefox,Safari 2+,and Opera 9+</li>\r\n</ul>\r\njQquery is a very efficient framework which helps us in developing many things  in a much easier way than they would be without using any framework.\r\n\r\nAt <a href=\"http://www.IntelliGrape.com\">IntelliGrape</a> we are using  Grails and jQuery on        a project.\r\n\r\nIn this blog, I want to share one of my experiences that I had met in this course of time. A series of mails/questions in Grails mailing list on creating chained selects/drop-downs prompted me to write this blog; since I had already done this.\r\n\r\n<strong>Chain select </strong>basically means populating the next drop-down on the basis of what you select in the present drop-down.\r\n\r\nIn this example, we have two drop-downs - <strong>manufacturer </strong>and <strong>model.</strong> We want the <strong>model</strong> drop-down to be populated on the basis of what the user selects in the <strong>manufacturer</strong> drop-down, without doing a full page refresh, using an Ajax call.\r\n\r\nHere are my classes, not the whole class but a part of the class\r\n<p align=\"left\"> <u><strong>Vehicle Class</strong></u></p>\r\n\r\n<pre>\r\npublic  class Vehicle {Manufacturer manufacturer\r\n\r\nModel model}</pre>\r\nThe Manufacturer and model classes look like this\r\n\r\n<u><strong>Manufacturer Class</strong></u>\r\n<pre>\r\npublic class Manufacturer {\r\n  String manufacturerName\r\n  static belongsTo = Vehicle\r\n  static hasMany = [models: Model]\r\n}</pre>\r\n<strong>Model Class</strong>\r\n<pre>\r\npublic class Model {\r\n  String modelName\r\n  static belongsTo = Manufacturer\r\n}</pre>\r\nFor this the vehicleCreate.gsp should look like this\r\n\r\n<strong>/vehicle/create.gsp</strong>\r\n<pre>\r\n            <a href=\"${createLinkTo(dir:\'\')}\">Home</a>\r\n            Vehicle List\r\n<h1>Create Vehicle</h1>\r\n${flash.message}\r\n<table><tbody>\r\n<tr>\r\n<td valign=\"top\"><label for=\"vehicleName\">Vehicle Name:</label></td>\r\n<td valign=\"top\">&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><label for=\"vehicleManufacturer\">Manufacturer</label>\r\n*<label>:</label></td>\r\n<td valign=\"top\">id=\"vehicleManufacturerDropDown\"\r\n                                     optionKey=\"id\"\r\n                                     from=\"${VehicleManufacturer.list()}\"\r\n                                     name=\"vehicleManufacturerDropDown\" value=\"\"&gt;</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><label for=\"model\">Model</label>\r\n*<label>:</label></td>\r\n<td valign=\"top\">id=\"model\"\r\n                                       optionKey=\"id\"\r\n                                       from=\"${VehicleModel.list()}\"\r\n                                       name=\"model\" value=\"\"&gt;</td>\r\n</tr>\r\n</tbody></table>\r\n$(document).ready(function() {\r\n      $(\"#vehicleManufacturerDropDown\").change(function() {\r\n      $.ajax({\r\n              url: \"/ChainDropDown/vehicle/manufacturerSelected\",\r\n              data: \"id=\" + this.value,\r\n              cache: false,\r\n              success: function(html) {\r\n              $(\"#models\").html(html);\r\n              }\r\n            });\r\n         });\r\n       });</pre>\r\nNow we will look at how this chained selection works using jQuery.\r\n\r\nNow what all we are left-out with is handling this event in  the VehicleController which is as simple as any other controller action. Just add manufacturerSelected action in the controller and we are done!<strong>VehicleController</strong>\r\n<pre>\r\nclass VehicleController {\r\n  def manufacturerSelected = {\r\n    def manufacturer = VehicleManufacturer.findById(params.id)\r\n    render g.select(optionKey: \'id\', from: manufacturer.models, id: \'model\', name: \"model\")\r\n  }\r\n}</pre>\r\nYou can <a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2008/07/chaindropdown.zip\">download</a> the complete source code for a working sample app with the examples used in this blog.\r\n\r\nHope this helps somebody.\r\n\r\nPradeep Garikipati','Using jQuery and Grails to create chained selects / drop-downs',0,'','publish','open','open','','using-jquery-and-grails-to-create-chained-selects-drop-downs','','','2008-09-12 19:22:02','2008-09-12 13:52:02','',0,'http://www.intelligrape.com/blog/?p=16',0,'post','',6),(21,1,'2008-09-12 20:01:50','2008-09-12 14:31:50','When we want to render a view using a template and the template makes use of a model object, the model object needs to be passed to the template using GSP tags. I am writing this because it took me a while to figure this out. Thanks to the wonderful contributors on the mailing list who helped me with this.\r\n\r\n<u>To render the view to a template from a <strong>gsp</strong> we need to use this tag in your <strong>gsp</strong></u>\r\n\r\n&lt;g:render template=\"/templateName\"/&gt;\r\n\r\n<u>To send a bean to the template we have to include  an attribute to the tag like this</u>\r\n\r\n&lt;g:render template=\"/templateName\" bean=\"beanName\"/&gt;\r\n\r\n<u>(or) we can also use a named variable in the template.For this we have to send a model</u>\r\n<pre>\r\n&lt;g:render template=\"/templateName\" model=\"beanName:${someBeanName}\"/&gt;</pre>\r\nIn the template we can use this by calling \'it\'  but that\'s not my preferred way. The other way is, assign this value to a variable in the template like this.\r\n<pre>\r\n&lt;g:set var=\"variableName\" value=\"${beanName}\"/&gt;</pre>\r\nNow we can use the variableName in the template.\r\n\r\n<u>Example</u>:\r\n<pre>\r\n&lt;input type=\"text\" id=\"fieldId\" class=\"${hasErrors(bean: variableName, field:\r\n\'fieldName\', \'errors\')}\" name=\"fieldName\" value=\"${fieldValue(bean: variableName,\r\nfield: \'fieldName\')}\"/&gt;</pre>\r\n- Pradeep Garikipati','How to pass a bean or model to a template ',0,'','publish','open','open','','how-to-pass-a-bean-or-model-to-a-template','','','2008-09-12 20:01:50','2008-09-12 14:31:50','',0,'http://www.intelligrape.com/blog/?p=21',0,'post','',0),(17,1,'2008-07-17 20:52:12','2008-07-17 15:22:12','Sample Application to demonstrate Chained Drop Down/Select functionality using jQuery in a Grails application','Sample Application to demonstrate Chained Drop Down/Select functionality using jQuery in a Grails application',0,'','inherit','open','open','','sample-application-to-demonstrate-chained-drop-downselect-functionality-using-jquery-in-a-grails-application','','','2008-07-17 20:52:12','2008-07-17 15:22:12','',16,'http://www.intelligrape.com/blog/wp-content/uploads/2008/07/chaindropdown.zip',0,'attachment','application/zip',0),(18,1,'2008-08-17 19:55:20','2008-08-17 14:25:20','In this blog I want to share how can we customize home page in a Grails application.\r\n\r\nIn <strong>grails</strong>, the default homepage is the web-app/index.gsp if we explicitly don`t specify any thing; but of-course that is not sufficient for all apps. We need to have a custom landing page instead of the default page provided by grails.\r\n\r\nThis can be easily achieved by modifying the URL mappings in <strong>UrlMappings.groovy file.  </strong>\r\n<pre lang=\"groovy\">\r\n\"/\"\r\n{\r\ncontroller = \"yourController\"\r\naction = \"yourAction\"\r\n}</pre>\r\nBy configuring the URLMappings this way, the home-page of the app will be yourWebApp/yourController/yourAction.\r\n\r\nHope this helps.\r\n\r\n-Pradeep Garikipati','How to customize homepage in Grails app',0,'','publish','open','open','','how-to-customize-homepage-in-grails-app','','','2008-09-12 19:43:25','2008-09-12 14:13:25','',0,'http://www.intelligrape.com/blog/?p=18',0,'post','',1),(19,1,'2008-09-03 15:57:01','2008-09-12 13:43:48','Externalizing properties of an application has really come a long way, especially if you are using Grails.\r\n\r\nJust want to share as a quick tip how easy it is to externalize the properties in a Grails application.\r\n\r\nThis is what all we have to do in-order to get something from a properties file.\r\n\r\nIn <strong>config.groovy</strong> include the properties that you want to be outside your groovy code.\r\n\r\nFor Example :\r\n<pre>smtpUserName = \"&lt;someid@test.com&gt;\"</pre>\r\n<pre>hostname = \"yourHostName\"</pre>\r\n<u>In order to read these properties in your Grails controller:</u>\r\n<pre>def smtpUserName = grailsApplication.config.smtpUserName</pre>\r\n<u>In order to read the properties from Grails Service class:</u>\r\n<pre>def smtpUserName =  ConfigurationHolder.config.smtpUserName</pre>\r\n<pre></pre>\r\nEasy, isn\'t it?\r\n\r\n-Pradeep Garikipati','Externalize application properties in a Grails app',0,'','publish','open','open','','externalize-application-properties-in-a-grails-app','','','2008-09-12 19:13:48','2008-09-12 13:43:48','',0,'http://www.intelligrape.com/blog/?p=19',0,'post','',0),(20,1,'2008-06-15 12:57:01','2008-09-12 13:27:01','In this blog I want to share how to use <strong>table per sub-class</strong> instead of table per hierarchy, which is the default mechanism provided by Grails.<code></code> I am not sure why Grails chose to use \"table-per-hierarchy\'. I always find it difficult to understand the table structure produced by \"<strong>table-per-hierarchy</strong>\". Moreover, it makes things difficult for other non-grails application which need to read data from the data database. Another disadvantage is that columns cannot have a <code>\"Not Null\"</code> constraint applied to them at the db level.\r\n\r\nIf you are like me and prefer to use a <strong>table-per-subclass <code></code></strong>inheritance strategy, it can be easily achieved using fantastic Grails <a href=\"http://grails.org/GORM+-+Mapping+DSL\" title=\"GORM DSL\">GORM DSL</a>.\r\n\r\nSimply include the following code in all your Grails domain classes.\r\n<pre lang=\"groovy\">\r\n   static mapping = {\r\n   tablePerHierarchy false\r\n}</pre>\r\nThis can be simply specified at the root class level and does-not need to be specified for all sub-classes in the hierarchy.\r\n\r\nHope this helps.\r\n\r\n-Pradeep Garikipati','How to use table-per-subclass inheritance strategy instead of table-per-hierarchy',0,'','publish','open','open','','how-to-use-table-per-subclass-inheritance-strategy-instead-of-table-per-hierarchy','','','2008-09-12 19:04:04','2008-09-12 13:34:04','',0,'http://www.intelligrape.com/blog/?p=20',0,'post','',2),(22,1,'2008-06-03 15:57:01','2008-09-12 14:39:18','<strong>BootStraping</strong> is something which is needed in most of the application. One of the frequently asked questions (and a valid requirement as well) is : How do you make Bootstraping happen only in a particular environment.\r\n\r\nThis can be done by making use of one of the Grails utility class which allows you to inspect the environment in which the code is executing.\r\n\r\nExample:\r\n\r\nif (GrailsUtil.environment == GrailsApplication.ENV_DEVELOPMENT) {\r\n\r\n// Your bootstraping code here.\r\n\r\n}\r\n\r\nDon\'t forget to import the following two classes:\r\n\r\norg.codehaus.groovy.grails.commons.GrailsApplication\r\ngrails.util.GrailsUtil\r\n\r\nHope this little tips saves you some time.\r\n\r\n- Pradeep Garikipati','How to make Bootstraping environment specific in a Grails app?',0,'','publish','open','open','','how-to-make-bootstraping-environment-specific-in-a-grails-app','','','2008-09-12 20:09:18','2008-09-12 14:39:18','',0,'http://www.intelligrape.com/blog/?p=22',0,'post','',0),(23,1,'2008-09-16 10:47:29','2008-09-16 05:17:29','Grails has a lot of gems. One of my favorites (besides GORM) is GSP tags -- Grails makes it so easy to create new tags, now there is no reason to write java/groovy code inside GSPs.\r\n\r\nOne of the features about GSP tags that I discovered and used today is that it is possible to invoke a GSP tag as a method call and assign the output of the tag to a variable.\r\n\r\nLets jump to the example:\r\n\r\n<font color=\"#003366\">&lt;g:def var=\"currentDomain\" value=\"${siteConfig.property(name:\'regDomain\')}\" /&gt;</font>\r\n\r\nIn the above example:\r\n\r\n<font color=\"#003366\">siteConfig</font> : is the namespace of my taglib.\r\n\r\n<font color=\"#003366\">property</font> : is the name of the tag\r\n\r\n<font color=\"#003366\">name</font> : is the name of the attribute that I am passing to my tab\r\n\r\n<font color=\"#003366\">regDomain</font> : is the value of the \'name\' attribute.\r\n\r\nThe output from the tag is stored in <font color=\"#003366\">currentDomain</font> variable.\r\n\r\nNot sure if something similar is possible with plain JSP tags.\r\n\r\n-Deepak','How to invoke a GSP tag as a method in Grails GSP',0,'','publish','open','open','','how-to-invoke-a-gsp-tag-as-a-method-in-grails-gsp','','','2008-09-16 10:47:29','2008-09-16 05:17:29','',0,'http://www.intelligrape.com/blog/?p=23',0,'post','',0),(24,1,'2008-12-18 19:26:17','0000-00-00 00:00:00','Being a Groovy/Grails developer, every day I meet with something interesting. One of the most interesting and useful thing that I come across these days is Command Objects.\n\nIn most of the occassions we want the parameters that we get from the submitted form should be of a particular type, but thats not possible in all the cases. In such situations I found Command Objects very useful.\n\nLets quickly go through few exmaples. Suppose, If we send an id of type Integer to an action in a controller from a GSP we will get it as a String through params. Without command Objects we have to cast it to integer and then we can use it. But In case of Command Objects we just have to create a Command Objects with name of the id declared as integer.\n\nLets have a much better example: Let us suppose we have a multi select drop-down in our GSP. We always want a list to be returned to the params even if one option is selected. But if  one option is selected from the drop-down we will get it as a String in the params, on the other side if multiple options are selected from the drop-down, we will get it as a List. Previously I used to come over it by finding the Class of the returned param and change it to list if it is not.\n\nBut by using Command object we dont have to include any extra logic for converting it to list. All we have to do is just create a Command Object by declaring the variable as List. Now in all the cases we have a list with us.\n\nNow lets have a look at how to define a Command Object and use it :\n\nFirst thing we need to do is define a Command Object out side the Controller Class.\n\n&lt;pre lang=\"groovy\"&gt;\n\nclass MyCommandObject {\n\nInteger   id   //name of this field should be same as the name that we had given in the GSP\n\nList       selectedOptionList\n\n}\n\n&lt;/pre&gt;\n\nNow provide an instance of this object to the closure(action) which will be called on submitting the GSP form in the following way.\n\n&lt;pre lang=\"groovy\"&gt;\n\ndef  myAction = { MyCommandObject myCommandObject -&gt;\n\n}\n\n&lt;/pre&gt;\n\nThis way we can use the Command Objects.\n\n-Pradeep Garikipati','Reading the submitted form params using Command Objects',0,'','draft','open','open','','','','','2008-12-18 19:26:17','2008-12-18 13:56:17','',0,'http://www.intelligrape.com/blog/?p=24',0,'post','',0),(25,4,'2009-01-06 11:59:40','2009-01-06 06:29:40','Retrieveing contents from Alfresco WCM repository constitutes of two things:-\r\n\r\n1) Retrieving the contents of a particular file.\r\n2) Retrieving a list of files from a particular location.\r\n\r\nWe were to achieve this by using Java-backed web-scripts and the example script at http://wiki.alfresco.com/wiki/Java-backed_Web_Scripts_Samples#SimpleWebScript.java was very useful.\r\nThe abstract class \"AbstractRepositoryWebScript.java\" used in this example provides a base for how to work with Alfresco Java API. The ServiceRegistry instance that it gets through springs provides handle to various other services that are very useful. Lets see how we can use this bean to retrieve contents from alfresco.\r\n\r\n1) Nodes in alfresco are identified by their alfresco node reference. This reference for nodes in alfresco wcm are very similar to their actual content path. For example: Our web projects name is \"test\". In our project, the path to a file that we want to retrieve is \"media/releases/content/press-release1.xml\". The alfresco node reference for this file will be\r\n\"avm://test/-1;www;avm_webapps;ROOT;media;releases;content;press-release1.xml\". The point is, that \"avm://test/-1;www;avm_webapps;ROOT\" is the reference to the staging sandbox of the \"test\" web project. It can be seen very clearly that the rest of the reference is actually the path to the file separated by \';\' instead of \'/\'. So when we want a reference to this file, we can create a reference by:\r\n<code>NodeRef nodeRef = new NodeRef(\"avm://test/-1;www;avm_webapps;ROOT;media;releases;content;press-release1.xml\");</code>\r\n\r\nNow to stream back the contents of this file we can use the output function defined in the AbstractRepositorywebScript in the above mentioned example.\r\n\r\n2) The second issue that we faced was to retrieve the list of files in a particular folder/space in our WCM repository. Lets say we want to get a list of files in the folder \"media/releases.contents\". ServiceRegistry provides a lot of services which include the Nodeservice, AVMNodeService, FileFolderService, etc. The one which i found useful for retrieving a list of files from a particular folder in our WCM repository was the FileFolderService. It has a method \"lookup\", which searches for files matching a particular name pattern mentioned. The parameters that this function takes are:\r\n• Noderef to the parent node from which it will start searching.\r\n• The string name pattern to be searched. e.g. \"*.xml\" or \"*.*\".\r\n• Boolean value to search in sub-folders or not.\r\nUsing these parameters, this function returns a List of FileInfo objects matching the criteria.\r\nSo if we want to get a list of all xml files in our media/releases folder but do not want the searching to be done its sub-folders, then our script will look like:\r\n<code>\r\nNodeRef parentNode = new NodeRef(\"avm://test/-1;www;avm_webapps;ROOT;media;releases\");\r\nList&lt;FileInfo&gt; files = this.services.getFileFolderService.lookup(parentNode,\"*.xml\",false);\r\n</code>\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','How to retrieve data from Alfresco WCM repository using Java backed web-scripts?',0,'','publish','open','open','','how-to-retrieve-data-from-alfresco-wcm-repository-using-java-backed-web-scripts','','','2009-01-06 12:01:37','2009-01-06 06:31:37','',0,'http://www.intelligrape.com/blog/?p=25',0,'post','',1),(26,4,'2009-01-06 12:01:10','2009-01-06 06:31:10','Hi,\r\n\r\nContent can be written to the wcm repository by simply using the AVMService class. The instance of this service is available through the instance of ServiceRegistry class. I\'ll again point out that if you are starting with Java backed web-scripts to read/write content from/to alfresco wcm, then the example script at http://wiki.alfresco.com/wiki/Java-backed_Web_Scripts_Samples is a good place to start. The Abstract class that it defines can be used as a base for other web-scripts. The specific method that can be used to create a node in our web project is the createFile method in the AVMService. This method returns the outputStream to the newly created object. The parameters for the createFile method are;\r\n• Path: It is the path to the directory in which the file is to be created.\r\n• FileName: It is the name with which the file will be created.\r\nOnce we have the output stream for the newly created file, we can just write the contents to the file using the write method (it is used to write a byte array to the stream).\r\n\r\nThus creating the file can be done in three (simple) steps:-\r\n1. Create a file using the createFile method of AVMService.\r\n2. Write the contents in the form of byte array to the output stream returned by the method called in 1.\r\n3. Close the output stream.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','How to add content to WCM with Java Backed Webscripts?',0,'','publish','open','open','','how-to-add-content-to-wcm-with-java-backed-webscripts','','','2009-01-06 12:01:10','2009-01-06 06:31:10','',0,'http://www.intelligrape.com/blog/?p=26',0,'post','',1),(27,5,'2009-03-02 18:09:39','2009-03-02 12:39:39','How to use $.getJSON() method of jQuery with grails?\r\n\r\nRetriving a JSON string from Grails is very easy. You have to just write the following in your controller\'s action\r\n\r\nLet me explain you with an example of populating a HTML table using JSON response:\r\nIn this example, we have table with columns - name,address and gender. We want the table to be populated without doing a full page refresh, using an Ajax call.\r\n\r\nDomain Class:\r\n<pre lang=\"groovy\">class MyDomain {\r\n    String name\r\n    String address\r\n    String gender\r\n}</pre>\r\nController Class :\r\n<pre lang=\"groovy\">\r\nclass MyController {\r\n   def someaction = {\r\n      List myDomains = MyDomain.findAllByGender(params.gender)\r\n      <em>/*Let say 5 objects are retrieved*/</em>\r\n      render myDomains as JSON\r\n   }\r\n}</pre>\r\nThe above code in action will render a<strong> JSON</strong> string in the following format:\r\n\r\n<code>[\r\n{\r\n\"name\"		: \"John\",\r\n\"address\"	: \"New York\",\r\n\"gender\"	: \"Male\"\r\n},\r\n{\r\n\"name\"		: \"Rob\",\r\n\"address\"	: \"Indonasia\",\r\n\"gender\"	: \"Male\"\r\n},\r\n{\r\n\"name\"		: \"Shayam\",\r\n\"address\"	: \"New Delhi\",\r\n\"gender\"	: \"Male\"\r\n},\r\n{\r\n\"name\"		: \"Chang\",\r\n\"address\"	: \"Thailand\",\r\n\"gender\"	: \"Male\"\r\n},\r\n{\r\n\"name\"		: \"Ali\",\r\n\"address\"	: \"London\",\r\n\"gender\"	: \"Male\"\r\n}\r\n]</code>\r\n\r\nfollowing script would be writtent on the client Side (in the GSP):\r\n<pre lang=\"javascript\"><script>\r\n$.document.ready(function(){\r\n$(\'#someid\').click(function(){\r\n<strong>$.getJSON</strong>(\"${createLink(controller:\'my\',action:\'someaction\')}\",{gender:\'Male\', ajax: \'true\'}, function(myDomains){\r\nvar myHTMLString = \'\'\r\nfor(var i = 0 ; i < myDomains.length ; i++)\r\n{\r\nmyHTMLString = myHTMLString + \'<tr><td>\' + myDomains[i].name + \'</td>\'\r\nmyHTMLString = myHTMLString + \'<tr><td>\' + myDomains[i].address + \'</td>\'\r\nmyHTMLString = myHTMLString + \'<tr><td>\' + myDomains[i].gender + \'</td></tr>\'\r\n}\r\n$(\'table#mytable\').html(myHTMLString)\r\n})\r\n})\r\n})\r\n</script></pre>\r\nThe HTML code would be like this :\r\n\r\n&lt;div id=\"someid\"&gt;\r\nClick for JSON Response\r\n&lt;/div&gt;\r\n&lt;table id=\"mytable\"&gt;\r\n&lt;!--empty table --&gt;\r\n&lt;/table&gt;\r\n\r\nWhen you click on the displayed text the html page would become like following:\r\n\r\n<code>&lt;div id=\"someid\"&gt;\r\nClick for JSON Response\r\n&lt;/div&gt;\r\n&lt;table id=\"mytable\"&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;John&lt;/td&gt;\r\n&lt;td&gt;New York&lt;/td&gt;\r\n&lt;td&gt;Male&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;Rob&lt;/td&gt;\r\n&lt;td&gt;Indonasia&lt;/td&gt;\r\n&lt;td&gt;Male&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;Shayam&lt;/td&gt;\r\n&lt;td&gt;New Delhi&lt;/td&gt;\r\n&lt;td&gt;Male&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;Chang&lt;/td&gt;\r\n&lt;td&gt;Thailand&lt;/td&gt;\r\n&lt;td&gt;Male&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;Ali&lt;/td&gt;\r\n&lt;td&gt;London&lt;/td&gt;\r\n&lt;td&gt;Male&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;</code>\r\n\r\nany kind of suggestions and comments are welcome......\r\n\r\nRegards,\r\nChandan Luthra\r\n\r\nhttp://www.IntelliGrape.com','How to use $.getJSON() method of jQuery with grails?',0,'','publish','open','open','','how-to-use-getjson-method-of-jquery-with-grails','','','2009-04-08 10:48:22','2009-04-08 05:18:22','',0,'http://www.intelligrape.com/blog/?p=27',0,'post','',1),(32,8,'2009-04-03 15:33:03','2009-04-03 10:03:03','Source Code for Urlmappings Demo Application','Urlmapping',0,'','inherit','open','open','','urlmapping-2','','','2009-04-03 15:33:03','2009-04-03 10:03:03','',29,'http://www.intelligrape.com/blog/wp-content/uploads/2009/04/grails-url-mappings.zip',0,'attachment','application/zip',0),(29,8,'2009-04-03 13:37:59','2009-04-03 08:07:59','While going through the grails-users mailing list, I found a question about restricting all URLs to end with \'.html\' &amp; returning Error 404 for the default mappings. After spending some time, I was able to build a sample CRUD application  restricting URLs to end with .html.\r\n\r\nI did the following steps for the same:\r\n\r\n1. Create a new grails application with name \'Urlmapping\': <code>grails create-app Urlmapping</code>\r\n2. Create domain class Urltest: <code>grails create-domain-class Urltest</code>\r\n3. Add a String variable \'test\' in domain class Urltest:\r\n<pre lang=\"groovy\">\r\nclass Urltest {\r\n    String test\r\n    static constraints = {\r\n    }\r\n}</pre>\r\n4. Generate controllers &amp; views for Urltest: <code>grails generate-all Urltest</code>\r\n5. Changed the UrlMappings in UrlMappings.groovy:\r\n<pre lang=\"groovy\">\r\nclass UrlMappings {\r\n    static mappings = {\r\n        \"/$controller/$action/$id.$suffix\"\r\n        {\r\n            constraints {\r\n                suffix(matches: \'html\')\r\n            }\r\n        }\r\n        \"/$controller/$action.$suffix\"\r\n        {\r\n            constraints {\r\n                suffix(matches: \'html\')\r\n            }\r\n        }\r\n        \"/\"(view: \"/index\")\r\n        \"500\"(view: \'/error\')\r\n    }\r\n}</pre>\r\n6. Removed the Entry \"<code>html: [\'text/html\',\'application/xhtml+xml\'],</code>\" from map <code>grails.mime.type</code> in Config.groovy\r\n\r\n7. Created initial data in BootStrap.groovy:\r\n<pre lang=\"groovy\">\r\nclass BootStrap {\r\n    def init = {\r\n        servletContext - &amp; gt;\r\n        Urltest urltest\r\n        (1..5).each {\r\n            urltest = new Urltest(test: \'Test-\' + it)\r\n            urltest.save()\r\n        }\r\n    }\r\n    def destroy = {\r\n    }\r\n}</pre>\r\nRun the application: <code>grails run-app</code>\r\n\r\nNow, I had to use following urls for CRUD functionality:\r\n\r\n# <code>http://localhost:8080/mailing/urltest/index.html</code>\r\n# <code>http://localhost:8080/mailing/urltest/list.html</code>\r\n# <code>http://localhost:8080/mailing/urltest/create.html</code>\r\n# <code>http://localhost:8080/mailing/urltest/show/1.html</code>\r\n# <code>http://localhost:8080/mailing/urltest/edit/1.html</code>\r\n\r\n(Scaffolding generated links <code>http://localhost:8080/mailing/urltest/index</code>, <code>http://localhost:8080/mailing/urltest/edit/1</code> &amp; <code>http://localhost:8080/mailing/urltest/show/1</code> etc. won\'t work since default associated UrlMapping <code>\"/$controller/$action/$id?\"</code> has been removed from UrlMappings.groovy)\r\n\r\nTo convert the links into desired format, you needs to pass suffix=\'html\' as params to g:link &amp; g:form tags on all views &amp; redirects in Controller.\r\n\r\nI have attached the <a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/04/grails-url-mappings.zip\" title=\"Urlmapping\">source code</a> for reference.\r\n\r\nThis was my first attempt for editing default Url mappings. I am sure I will be able to find better &amp; less tedious ways of doing the same over a period of time.\r\n\r\nAlso, I would like to mention that I found broken links generated by g:paginate tag.\r\nA <a href=\"http://jira.codehaus.org/browse/GRAILS-1346\">JIRA issue</a> exists for the same.\r\n\r\n--\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Restricting all URLs to end with .html in a Grails Application',0,'','publish','open','open','','restricting-all-urls-to-end-with-html-in-a-grails-application','','','2009-04-06 18:03:11','2009-04-06 12:33:11','',0,'http://www.intelligrape.com/blog/?p=29',0,'post','',1),(33,8,'2009-04-06 18:10:08','2009-04-06 12:40:08','<code>public Map groupBy(Closure closure)</code>\r\n\r\nGoing through Groovy Collection, I found this powerful method which takes a Closure as parameter &amp; based on the closure, it returns a map in which all unique values returned by closure act as keys.\r\n\r\nLets take an example:\r\n\r\nIf you want to group integers between 1 to 100 based on the integer value at units place as follows:\r\n<pre lang=\"groovy\">[1:[1, 11, 21, 31, 41, 51, 61, 71, 81, 91],\r\n2:[2, 12, 22, 32, 42, 52, 62, 72, 82, 92],\r\n3:[3, 13, 23, 33, 43, 53, 63, 73, 83, 93],\r\n4:[4, 14, 24, 34, 44, 54, 64, 74, 84, 94],\r\n5:[5, 15, 25, 35, 45, 55, 65, 75, 85, 95],\r\n6:[6, 16, 26, 36, 46, 56, 66, 76, 86, 96],\r\n7:[7, 17, 27, 37, 47, 57, 67, 77, 87, 97],\r\n8:[8, 18, 28, 38, 48, 58, 68, 78, 88, 98],\r\n9:[9, 19, 29, 39, 49, 59, 69, 79, 89, 99],\r\n0:[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]]</pre>\r\nJust think of the code you will need to write in Java for this.\r\n\r\nHowever, its a single method call in Groovy:    <code>(1..100).groupBy{it%10}</code>\r\n\r\nHope to find more such methods over time.\r\n\r\n–\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Groovy Collection method: groupBy() ',0,'','publish','open','open','','groovy-collection-method-groupby','','','2009-04-06 18:16:12','2009-04-06 12:46:12','',0,'http://www.intelligrape.com/blog/?p=33',0,'post','',6),(34,8,'2009-04-06 18:12:55','2009-04-06 12:42:55','Often I found it painful working on dates when I had to find a past/future date based on weeks, months or years.\r\n\r\nGroovy class <a href=\"http://groovy.codehaus.org/api/org/codehaus/groovy/runtime/TimeCategory.html\">org.codehaus.groovy.runtime.TimeCategory</a> has very helpful &amp; intutive syntax for working on dates.\r\nI am sure I need not to explain what each of the following statements will do:\r\n<pre lang=\"groovy\">Date date = new Date()\r\n\r\nuse(org.codehaus.groovy.runtime.TimeCategory) {\r\n    date = date - 10.seconds\r\n    date = date - 10.minutes\r\n    date = date - 10.hours\r\n    date = date - 10.days\r\n    date = date - 10.weeks\r\n    date = date - 10.months\r\n    date = date - 10.years\r\n}</pre>\r\n–\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Groovy Finding Past/Future Dates',0,'','publish','open','open','','groovy-finding-futureprevious-dates','','','2009-04-06 18:34:14','2009-04-06 13:04:14','',0,'http://www.intelligrape.com/blog/?p=34',0,'post','',1),(35,1,'2009-04-06 17:31:30','0000-00-00 00:00:00','\n<pre lang=\"groovy\">\npackage rbi.it.think.jdomain;\n\nimport java.io.Serializable;\nimport java.util.Arrays;\n\npublic class Taxonomy implements Serializable {\n	public String taxonomy;\n	public String description;\n	public byte[] rowVersion;\n\n	public String getTaxonomy() {\n		return taxonomy;\n	}\n\n	public void setTaxonomy(String taxonomy) {\n		this.taxonomy = taxonomy;\n	}\n\n	public String getDescription() {\n		return description;\n	}\n\n	public void setDescription(String description) {\n		this.description = description;\n	}\n\n	public byte[] getRowVersion() {\n		return rowVersion;\n	}\n\n	public void setRowVersion(byte[] rowVersion) {\n		this.rowVersion = rowVersion;\n	}\n\n	@Override\n	public int hashCode() {\n		final int prime = 31;\n		int result = 1;\n		result = prime * result\n				+ ((description == null) ? 0 : description.hashCode());\n		result = prime * result + Arrays.hashCode(rowVersion);\n		result = prime * result\n				+ ((taxonomy == null) ? 0 : taxonomy.hashCode());\n		return result;\n	}\n\n	@Override\n	public boolean equals(Object obj) {\n		if (this == obj)\n			return true;\n		if (obj == null)\n			return false;\n		if (getClass() != obj.getClass())\n			return false;\n		final Taxonomy other = (Taxonomy) obj;\n		if (description == null) {\n			if (other.description != null)\n				return false;\n		} else if (!description.equals(other.description))\n			return false;\n		if (!Arrays.equals(rowVersion, other.rowVersion))\n			return false;\n		if (taxonomy == null) {\n			if (other.taxonomy != null)\n				return false;\n		} else if (!taxonomy.equals(other.taxonomy))\n			return false;\n		return true;\n	}\n\n	public static String getProdType(String taxonomy) {\n		if (taxonomy == null) {\n			return null;\n		} else {\n			String str = \"PROD-TYPE:\";\n			String tax = taxonomy.trim();\n			int i = tax.indexOf(str);\n			if (i &lt; 0) {\n				return null;\n			}\n\n			return (tax.substring(i + str.length(), tax.length()));\n		}\n	}\n}</pre>','Test blog',0,'','draft','open','open','','','','','2009-04-06 17:31:30','2009-04-06 12:01:30','',0,'http://www.intelligrape.com/blog/?p=35',0,'post','',0),(36,10,'2009-04-07 18:42:14','0000-00-00 00:00:00','One of the new features of Grails 1.1 is that plugins are no longer held in the <em>PROJECT_HOME/plugins</em> directory but in a directory under <em>USER_HOME/.grails/1.1/projects/PROJECT_NAME/plugins</em> directory. As such, even if modifications are made in the code under the <em>web-apps/plugins</em> directory of our project, the changes would be overwritten when the <em>grails run-app</em> command is executed.\n\nIn a project at Intelligrape, it was required that only the FCKEditor plugin needed to be changed and the other plugins be derived from the location at <em>.grails</em> directory. As such a  workaround of adding a new file <em>BuildConfig.groovy</em> in the <em>grails-app/conf</em> directory with the property<code> grails.project.plugins.dir=\"./plugins\"</code> was not an option.\n\nThis was what we did.\n<ol>\n	<li>After installing the plugin using <em>grails install-plugin fckeditor ,</em> we ran the application once using <em>grails run-app</em>. This copied the files unto the<em>   	  plugins</em> directory in <em>web-app</em>. Now, since this had javascript files, we moved the files from <em>./web-app/plugins/fckeditor</em><version><em>/js</em> directory to the <em> 	  web-app/js</em> directory. </version></li>\n	<li>In the<em> application.properties</em> file, the entry corresponding to Fckeditor plugin was removed.</li>\n	<li>The following files were obtained from the plugins folder under <em>USER_HOME/.grails/1.1/projects/PROJECT_HOME/plugins</em> and moved to the directories under the <em>PROJECT_HOME</em>.</li>\n	<li>The taglib file <em>FckeditorTaglib.groovy</em> was moved to <em>grails-app/taglib directory</em>.</li>\n	<li>The <em>Fckeditor.groovy</em> and <em>BrowserDetector.groovy</em> files to the <em>src/groovy directory</em>.</li>\n	<li>The <code>package</code> and <code>import</code> statements were removed from all the three files.</li>\n	<li>The <em>basepath</em> variable in <em>Fckeditor.groovy</em> was changed to: <code>grailsAttributes.getApplicationUri(request)</code></li>\n	<li>The <em>value</em> variable in <em>Fckeditor.groovy</em> was changed to : <code>${basepath}/js/fckeditor/editor/filemanager/browser/${fileBrowser}/browser.html?${typeStr}Connector=${contextPath}/fckconnector</code></li>\n	<li>The attribute<em> src</em> of<em> iframe</em> tag in <code>create()</code> method was changed to <code>${this.basePath}/js/fckeditor/editor/fckeditor.html?InstanceName=${instanceName}&amp;Toolbar=${toolbar}&amp;role=${role}</code></li>\n</ol>\nNow, the we could modify the Fckeditor according to our requirements. I think that such an alteration can be done on other plugins as well, if we wish that the utility be a part of our application than being dependent on the plugin installed.\n\nHere is the <a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/04/extendfck.zip\" title=\"extendfck.zip\">Source Code</a> after the alterations were made.','Altering an Installed plugin to make it a part of the Application',0,'','draft','open','open','','','','','2009-04-07 18:42:14','2009-04-07 13:12:14','',0,'http://www.intelligrape.com/blog/?p=36',0,'post','',0),(38,10,'2009-04-07 18:34:03','0000-00-00 00:00:00','After the steps were followed to make the Fckeditor as a part of our application, it was now time to start modifying the FckEditor to have new features. This was the tougher part and a lot of javascript changes were required to be made.\r\n\r\nThe required modifications were in the Insert Link Button. We needed to be able to provide Internal links to pages on the local server as relative links and also provide links to Assets which were on the filesystem. Besides, based on the page type, it was required that a new option, \"Sub Template\" be presented to the user or not. Accomplishing the first two was a little tricky, but very doable, but the last requirement was a tough nut to crack. We did succeed at doing it however.\r\n<ol>\r\n	<li>First of all, we needed to include two new sets of options for Internal Link and Asset in the drop down which is shown in the dialog that opens when we click the Insert Link button.  This editing was done in fckeditor/editor/dialog/fck_link.html</li>\r\n	<li>Then, a few custom methods were added in fckeditor/editor/dialog/fck_link/fck_link.js The existing methods were modified to accomodate the new set of entries in the fck_link.html (The new entries and alterations have been prefixed in all the fckeditor files by a comment containing \'Modified\' in the source code attached later. )</li>\r\n	<li>We used jQuery File Tree , a javascript application for Ajax calls to get list of files on the server. To make it grails friendly, a <a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/04/filelist.gsp\" title=\"JQuery File Tree Connector in GSP\">JQuery File Tree Connector in GSP</a> was written.</li>\r\n	<li>We needed to include a custom HTML in case the privileges were that of admin. For this, a parameter was required to be passed to the fckeditor in the form of a query string so that it could distinguish between a normal user and an admin user.This editing was done in fckeditor_gecko.js file inorder to retrieve the role from the query string and pass it on further to other htmls in the Fckeditor utility.</li>\r\n	<li>A few GSPs were added and their locations were specified in the fck_link.js as /PROJECT_NAME/file_name.gsp(if they are within subfolders under the views directory, they need to be specified as well).</li>\r\n</ol>\r\nThere is a lot of code which has been edited. So, I m attaching the <a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/04/extendfck.zip\" title=\"extendfck.zip\">Source Code</a> for reference.','Extending the FCKEditor',0,'','draft','open','open','','','','','2009-04-07 18:34:03','2009-04-07 13:04:03','',0,'http://www.intelligrape.com/blog/?p=38',0,'post','',0),(40,10,'2009-04-07 17:50:20','2009-04-07 12:20:20','','JQuery File Tree Connector in GSP',0,'','inherit','open','open','','jquery-file-tree-connector-in-gsp','','','2009-04-07 17:50:20','2009-04-07 12:20:20','',38,'http://www.intelligrape.com/blog/wp-content/uploads/2009/04/filelist.gsp',0,'attachment','',0),(41,10,'2009-04-07 18:33:36','2009-04-07 13:03:36','','',0,'','inherit','open','open','','41','','','2009-04-07 18:33:36','2009-04-07 13:03:36','',38,'http://www.intelligrape.com/blog/wp-content/uploads/2009/04/extendfck.zip',0,'attachment','application/zip',0),(42,7,'2009-04-16 10:31:25','2009-04-16 05:01:25','<meta http-equiv=\"CONTENT-TYPE\" content=\"text/html; charset=utf-8\" /> 	<title></title> 	<meta name=\"GENERATOR\" content=\"OpenOffice.org 2.4  (Linux)\" />\r\n\r\n<style type=\"text/css\"> 	<!-- 		@page { size: 21cm 29.7cm; margin: 2cm } 		P { margin-bottom: 0.21cm } 	--> 	</style>Lets discuss how can we upload a file and store it in a database, along with that how do we render it on the gsp page. I am taking an example to upload and render the image in this blog, though the code would be same for any other file.\r\n\r\nSo Lets consider I have a domain class with the name Person\r\n<pre lang=\"groovy\">\r\nclass Person {\r\n    .\r\n    .\r\n    .\r\n    bytes[] picture\r\n    static constraints = {\r\n        picture(size:0..5000000)  // to store files upto 5MB approx\r\n    }\r\n}</pre>\r\nOnce we have a field with a byte[] defined in the class then automatically its view is generated with a input tag of file type in html, which returns the MultipartFile object in the controller. MultipartFile provides various useful methods which can be used getBytes(), getSize(), getContentType(), getName() etc.\r\n\r\nSo as MultipartFile object returs the byte[] which is to be stored in a picture property of a person class, in the save action of the PersonController Lets see how we do it :\r\n<pre lang=\"groovy\">\r\nperson.picture = params.picture\r\nor\r\nperson.properties = params\r\n\r\n//Now the person object holds the image and lets save it\r\n\r\nperson.save()</pre>\r\nWe are done with file uploading. Now to render the image/file, lets have a separate controller in a controller directory, where we would define the action to generate the image:\r\n<pre lang=\"groovy\">\r\nclass ImageController {  def defaultAction =\'show\'\r\n\r\ndef show= {\r\n    //loads the class with a name and assigns obj a new instance created of the same object\r\n    def obj = Class.forName(\"${params.classname}\",true,Thread.currentThread().contextClassLoader).newInstance();\r\n    def object = obj.get( params.id )\r\n    response.setContentType(params.mime)\r\n    byte[] image = object.\"${params.fieldName}\"\r\n    response.outputStream << image\r\n  }\r\n}</pre>\r\nNow where ever we want to display the image, we can just include the following tag:\r\n<pre lang=\"groovy\">\r\n<img src=\"${createLink(controller:\'image\', id:personInstance.id, params:[fieldName:\"picture\", classname:\'Person\',mime:\'image/jpeg\'])}/></pre>\r\nNote : The above code can be dangerous as a hacker can modify the className and feildName in the query string and get the hidden information.\r\nHope this helped.\r\n\r\n~Amit Jain~\r\n\r\namit@intelligrape.com\r\n\r\n<a href=\"http://www.intelligrape.com/\" onclick=\"javascript:pageTracker._trackPageview(\'/outbound/article/www.IntelliGrape.com\');\">http://www.IntelliGrape.com/</a>','Grails : Upload and Render File',0,'','publish','open','open','','grails-upload-and-render-file','','','2009-04-24 14:24:49','2009-04-24 08:54:49','',0,'http://www.intelligrape.com/blog/?p=42',0,'post','',4),(43,8,'2009-04-15 18:57:45','2009-04-15 13:27:45','I want to quickly share how you can sort a Map by its key/value/field of valueObject; in either ascending or descending order using Groovy\r\n\r\nI created a <code>Map&lt;String, Person&gt;</code> as follows:\r\n<pre lang=\"groovy\">\r\nclass Person {\r\n    String name\r\n    Date dateOfBirth\r\n\r\n    static constraints = {\r\n    }\r\n}\r\n\r\nMap <String, Person> people = [:]\r\n[*(11..20), *(1..10)].each {\r\n    Person person = new Person()\r\n    person.name = \"Person-\" + it\r\n    use(org.codehaus.groovy.runtime.TimeCategory) {\r\n        person.dateOfBirth = new Date() - (new Random().nextInt(15) + 10).years\r\n    }\r\n    people[person.name] = person\r\n}\r\n</pre>\r\n\r\nNow, Sorting maps in ascending order is a simple one line code:\r\n\r\n<pre lang=\"groovy\">\r\n// Sort by Key(Person\'s Name):\r\nmap = map.sort {it.key}\r\n\r\n// Sort by Value(Person Object):\r\nmap = map.sort {it.value}\r\n\r\n// Sort by a particular field of Value(Date Of Birth):\r\nmap = map.sort {it.value.dateOfBirth}</pre>\r\n\r\nBut how about sorting in reverse order. It would have been great to have map.reverse() or map.reverseSort{} available in Groovy. Since none exists, I had to create the following method:\r\n\r\n<pre lang=\"groovy\">\r\nMap reverseSortMap(Map unsortedMap) {\r\n\r\n    // Different implementations of Comparator\r\n    // 1. Reverse Sort by Key(Person\'s Name):\r\n    Comparator comparator = [compare: {a , b ->\r\n    b.compareTo(a)\r\n    }] as Comparator\r\n\r\n    // 2. Reverse Sort by Value(Person Object):\r\n    Comparator comparator = [compare: {a , b ->\r\n    unsortedMap.get(b).compareTo(unsortedMap.get(a))\r\n    }] as Comparator\r\n\r\n    // 3. Reverse Sort by a particular field of Value(Date Of Birth):\r\n    Comparator comparator = [compare: {a , b ->\r\n    unsortedMap.get(b).dateOfBirth.compareTo(unsortedMap.get(a).dateOfBirth)\r\n    }] as Comparator\r\n\r\n    Map sortedMap = new TreeMap(comparator)\r\n    sortedMap.putAll(unsortedMap)\r\n\r\n    return sortedMap\r\n}</pre>\r\n\r\nUse either of the Comparator implementations above &amp; use the method:\r\n\r\n<pre lang=\"groovy\">\r\npeople = reverseSortMap(people)</pre>\r\n\r\nHope it helps.\r\n\r\n–\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\n<a href=\"http://www.intelligrape.com/\" onclick=\"javascript:pageTracker._trackPageview(\'/outbound/article/www.IntelliGrape.com\');\">http://www.IntelliGrape.com/</a>','Groovy Maps: Reverse Sort',0,'','publish','open','open','','groovy-maps-reverse-sort','','','2009-04-15 18:59:06','2009-04-15 13:29:06','',0,'http://www.intelligrape.com/blog/?p=43',0,'post','',5),(44,11,'2009-04-21 13:43:06','2009-04-21 08:13:06','I have recently started using the marvelous plugin Grails function Testing by Marc Palmer (http://www.grails.org/Grails+Functional+Testing).I would like to share few things with you about this plugin.\r\nThe purpose of testing get defeated if we keep on doing for the same values. The method below let you to do it for the different values each time.\r\n\r\n<code>def countryList = byName(’country’)\r\nint randomIndex=new Random().nextInt(</code><code>countryList.getOptionSize()</code><code>)\r\nselects[’country’].select countryList.getOption(randomIndex).getValueAttribute()</code>\r\n\r\nbyName() retrieve the element from the current page by its name attribute. Throws exception if multiple elements found with same name and null if no element found\r\nIn above example I am retrieving the select element of current page which has the name attribute ‘country’.\r\ngetOption() takes the integer as a parameter and return the option element of the current page at index 2\r\ngetValueAttribute() useful to get what the value need to be passed as params to the server. This method assures that value is passed rather than the name displyed in the list.\r\n\r\nI hope this would help some of you.\r\n\r\n## Uday Pratap Singh ##\r\n\r\nuday@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Retrieving a random Option from HTML DropDown using Grails Functional Testing ',0,'','publish','open','open','','retrieving-a-random-option-from-html-dropdown-using-grails-functional-testing','','','2009-04-21 13:43:06','2009-04-21 08:13:06','',0,'http://www.intelligrape.com/blog/?p=44',0,'post','',1),(45,9,'2009-04-16 18:27:29','2009-04-16 12:57:29','In this post i will try to explain how to dump a mysql database so that it can be migrated with same state.In my project i face this situation every week and thanks to dumpfiles that they save lot of time and make the process whole lot easier.\r\n\r\n<strong>What is a dumpfile ? </strong>\r\n\r\nA dumpfile is a sql script which contains the step by step instruction to generate a database. It contains the steps to create the table structure and also populates the tables with the original values. By steps i mean the plain simple sql queries.\r\n\r\nThe Mysql command used to  dump a database is below:\r\n<pre lang=\"groovy\">gaurav@gaurav:~$ mysqldump -u root -p <databasename>  >  <filename.sql> </pre>\r\ne.g. Suppose we have a database named <strong>james</strong> and we want to take it\'s dump.\r\n<pre lang=\"groovy\">gaurav@gaurav:~$ mysqldump -u root -p james > ~/Desktop/jamesDump.sql\r\nEnter Password: ******</pre>\r\nNow we are back to prompt. We can check the dumpfile by going to the location where it was saved. In the<a href=\"http://www.intelligrape.com/blog/?p=46\"> next</a> post I will describe how to use a dumpfile to create a new database.\r\n\r\nHope it helps.\r\n\r\nGaurav Chauhan\r\ngaurav@intelligrape.com\r\n\r\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Dumping a Mysql Database',0,'','publish','open','open','','dumping-a-mysql-database','','\nhttp://blog.intelligrape.com/?p=46','2009-04-16 18:27:29','2009-04-16 12:57:29','',0,'http://www.intelligrape.com/blog/?p=45',0,'post','',1),(46,9,'2009-04-16 18:29:31','2009-04-16 12:59:31','In this use case we are using the jamesDump.sql stored at /home/gaurav/Desktop/jamesDump.sql file to create a new database named intelligrape.\r\n\r\nFirst of all we need to login to the mysql prompt.\r\n<pre lang=\"groovy\">\r\ngaurav@gaurav:~$ mysql -u root -p\r\nEnter Password: ******\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 30\r\nServer version: 5.0.51a-3ubuntu5.4 (Ubuntu)\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the buffer.\r\n\r\nmysql > </pre>\r\nHere we need to create a new database named intelligrape which will replicate the old database\r\n<pre lang=\"groovy\">\r\nmysql >  create database intelligrape;\r\nQuery OK, 1 row affected (0.02 sec)\r\n\r\nmysql >  use intelligrape;    //set intelligrape database as the current database in use\r\nDatabase changed\r\n\r\nmysql > source ~/Desktop/jamesDump.sql    //source command will read the script and copy the schema as well as the values from dumpfile into the database.\r\nQuery OK, 0 rows affected (0.02 sec)\r\n\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql > show tables    //it will show the list of all tables of intelligrape database created by dumpfile.</pre>\r\nHope it helps.\r\n\r\nGaurav Chauhan\r\ngaurav@intelligrape.com\r\n\r\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Creating a new Database from a mysql dump file',0,'','publish','open','open','','creating-a-new-database-from-a-mysql-dump-file','','','2009-04-16 18:36:59','2009-04-16 13:06:59','',0,'http://www.intelligrape.com/blog/?p=46',0,'post','',1),(47,5,'2009-04-22 12:16:27','2009-04-22 06:46:27','\r\n<p align=\"left\">At Intelligrape we face many challenges while developing web-applications. One of the small challenge was to test the web pages that contains file input field <strong>&lt;input type=\"File\"&gt;</strong>(to upload files). After few hours drilling with Canoo webtest plugin I decided to use the new fabulous plugin, Grails functional Testing by Marc Palmer (http://www.grails.org/Grails+Functional+Testing).</p>\r\nThe syntax for setting value for the file input field is\r\n<pre lang=\"groovy\">NameOfFileInputField.setValueAttribute(\"PathOfFileAsString\")</pre>\r\nLet me explain you with an example:\r\nFollowing component\'s HTML is\r\n<pre lang=\"html\">\r\n<input name=\"FileInputField\" type=\"file\" /></pre>\r\n<input name=\"FileInputField\" type=\"file\" />\r\n\r\nThe name of the file input field is <strong>FileInputField.</strong>The code for setting value/path will be\r\n<pre lang=\"groovy\">\r\nFileInputField.setValueAttribute(\"testFile.txt\")</pre>\r\nany kind of suggestions and comments are welcome……\r\n\r\nCheers,\r\nChandan Luthra\r\n\r\n<a href=\"http://www.intelligrape.com\">www.IntelliGrape.com</a>','Grails Functional Testing: Uploading a file in &lt;input type=\"File\"&gt; tag using G-Func plugin',0,'','publish','open','open','','grails-functional-testing-uploading-a-file-in-input-typefile-tag-using-g-func-plugin','','','2009-04-22 14:10:40','2009-04-22 08:40:40','',0,'http://www.intelligrape.com/blog/?p=47',0,'post','',1),(48,7,'2009-04-23 15:30:23','2009-04-23 10:00:23','In my project, we needed a support for multiple paginations on the same page. For the same, we maintained the state of offset of different pagination tags and let <g:pagination> tag use its specific offset rather than the general i.e from param.offset. </g:pagination>\r\n\r\nAssuming, we need two paginations on the same page. Lets assume the scenario where we have a movies.gsp page, where in I need to list hollywood movies and bollywood movies and both supports pagination. Insert the followings tags in the gsp page.\r\n<pre lang=\"groovy\">\r\n   <!--Hollywood movies section -->\r\n     <g:paginate offset=\"${offset1}\" params=\"[\'currentOffset\':\'offset1\',\'otherOffset\':otherOffset]\" next=\"&gt;&gt;\" prev=\"&lt;&lt;\" total=\"${total}\">\r\n\r\n   <!-- Bollywood movies section -->\r\n     <g:paginate offset=\"${offset2}\" params=\"[\'currentOffset\':\'offset2\',\'otherOffset\':otherOffset]\" next=\"&gt;&gt;\" prev=\"&lt;&lt;\" total=\"${total}\">\r\n</g:paginate></g:paginate></pre>\r\nIn the above code, apart from the regular parameters we have passed 2 new paramets in a params map. For example, In hollywood movies section tag \'currentOffset\' indicates the tag has requested the change in page and otherOffset holds a value of the offset in the bollywood tag. We need to pass these extra parameters to maintain the state of the other pagination tag. And we get the values of offset i.e offset1/offset2 from the the action\r\nNow in the controller, lets write the following code:\r\n<pre lang=\"groovy\">\r\ndef movies = {\r\n        //offset would have the value of the current pagination tag\r\n        Integer offset= (params.offset) ? params.offset.toInteger() : 0\r\n        Integer max= (params.max) ? params.max.toInteger() : 10\r\n        int offset2, offset1\r\n        int total = Movie.findWhere(...) //provide criteria to get the total of matching movies \r\n\r\n        //maitaining the state of offset of other pagination tags\r\n        if(params.currentOffset == \'offset1\'){\r\n            offset2 = (params.otherOffset) ? params.otherOffset.toInteger() : 0\r\n            offset1 = offset\r\n        } else {\r\n            offset1 =  (params.otherOffset) ? params.otherOffset.toInteger() : 0\r\n            offset2 = offset\r\n        }\r\n\r\n        params.remove(\"offset\") // offset removed from params so that pagination refers to the offset specified explicitly\r\n\r\n       //to get the page specifc list\r\n        def moviesList = Movie.withCriteria {\r\n           ...	//give the criteria/condions here\r\n        maxResults max\r\n        firstResult offset\r\n    }\r\n     render(view: \'viewPath\', model: [offset1: offset1, offset2: offset2 , moviesList: moviesList], total:total)\r\n  }</pre>\r\nHope this helped.\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\n<a href=\"http://www.IntelliGrape.com\">http://www.IntelliGrape.com</a>','Grails : Mutliple Paginations Using g:paginate tag',0,'','publish','open','open','','grails-mutliple-paginations','','','2009-04-24 13:16:55','2009-04-24 07:46:55','',0,'http://www.intelligrape.com/blog/?p=48',0,'post','',0),(49,6,'2009-05-26 10:04:48','2009-05-26 04:34:48','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n        static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','publish','open','open','','command-objects','','','2009-06-03 10:09:57','2009-06-03 04:39:57','',0,'http://www.intelligrape.com/blog/?p=49',0,'post','',3),(50,6,'2009-05-25 09:58:44','2009-05-25 04:28:44','<strong>What is a command object ?\n</strong>\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\n\n<strong>Where to define command object ?</strong>\n\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\n\n<strong> How to define command object ?\n</strong>\nIn one of my recent  projects I did it like this :\n\n&lt;pre lang=\"groovy\"&gt;\npublic class RegisterUserCommand {\n\nString username\nString password\nString firstName\nString lastName\nString email\nString age\n\ndef static config = ConfigurationHolder.config\nstatic constraints={\nusername blank:false,size:30\npassword blank:false\ncardNo creditCard:true\nfirstName matches/[A-Za-z ]/\nlastName matches /[A-Aa-z ]/\nemail blank:false,email:true\nage range:18..60\n}\n\n}\n\n&lt;/pre&gt;\n\n<strong>How to define custom validators ?</strong>\n\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\n&lt;pre lang=\"groovy\"&gt;\nverifyPassword blank:false,validator:{val,obj-&gt;\n\nif(!(val==obj.password))\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\n}\n&lt;/pre&gt;\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\n\n<strong>How to use our command object now ?</strong>\n\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\nrequest parameters to the properties of the instance, and pass it to you as the argument.\n\nThus,you can create or modify your controller action as :\n&lt;pre lang=\"groovy\"&gt;\ndef registerUser = { RegisterUserCommand cmd -&gt;\nif(!cmd.hasErrors()) {\n// your code does something\n}\nelse{\n// your code does something\n}\n}\n\n}\n&lt;/pre&gt;\n<strong>How do I display error messages on my gsp page ?\n</strong>\nTo do so you first need to pass the command object to your gsp page as :\n\n&lt;pre lang=\"groovy\"&gt;\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\n\n&lt;/pre&gt;\nthen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\n&lt;pre lang=\"groovy\"&gt;\n&lt;g:hasErrors bean=\"${myCmd?.errors}\"&gt;\n&lt;div class=\"errors\"&gt;\n&lt;g:renderErrors bean=\"${cmd}\"/&gt;\n&lt;/div&gt;\n&lt;/g:hasErrors&gt;\n&lt;/pre&gt;\n<strong>But it shows default error messages.How can I define my own error messages ?\n</strong>\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\n&lt;pre lang=\"groovy\"&gt;\ndefault.blank.message={0} cannot be blank             #this for blank fields\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\n\nHere i \'ve created my own  messages.\n\n<strong>I cant follow the parameterized messages..can u please ellaborate.\n</strong>\nThe error message  defined as:\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\n\n[{0}] = property\n[{1}] = class\n[{2}] = value\n[{3}] = constraint\n\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\nIn the above example, for the verifyPassword validator the message can be defined as :\nfields.does.not.match.message={3} and {4} does not match\n\nSo in the validator the parameters can be passed as :\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision','','','2009-05-25 09:58:44','2009-05-25 04:28:44','',49,'http://www.intelligrape.com/blog/?p=50',0,'revision','',0),(52,6,'2009-05-25 10:05:14','2009-05-25 04:35:14','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\nString username\r\nString password\r\nString firstName\r\nString lastName\r\nString email\r\nString age\r\n\r\ndef static config = ConfigurationHolder.config\r\nstatic constraints={\r\nusername blank:false,size:30\r\npassword blank:false\r\ncardNo creditCard:true\r\nfirstName matches/[A-Za-z ]/\r\nlastName matches /[A-Aa-z ]/\r\nemail blank:false,email:true\r\nage range:18..60\r\n}\r\n\r\n}\r\n\r\n</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj-&gt;\r\n\r\nif(!(val==obj.password))\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd -&gt;\r\nif(!cmd.hasErrors()) {\r\n// your code does something\r\n}\r\nelse{\r\n// your code does something\r\n}\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\r\n\r\n</pre>\r\nthen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\"&gt;\r\n<g:renderErrors bean=\"${cmd}\"/>\r\n</g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\nfields.does.not.match.message={3} and {4} does not match\r\n\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-3','','','2009-05-25 10:05:14','2009-05-25 04:35:14','',49,'http://www.intelligrape.com/blog/?p=52',0,'revision','',0),(51,6,'2009-05-25 09:59:44','2009-05-25 04:29:44','<strong>What is a command object ?\n</strong>\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\n\n<strong>Where to define command object ?</strong>\n\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\n\n<strong> How to define command object ?\n</strong>\nIn one of my recent  projects I did it like this :\n\n&lt;pre lang=\"groovy\"&gt;\npublic class RegisterUserCommand {\n\nString username\nString password\nString firstName\nString lastName\nString email\nString age\n\ndef static config = ConfigurationHolder.config\nstatic constraints={\nusername blank:false,size:30\npassword blank:false\ncardNo creditCard:true\nfirstName matches/[A-Za-z ]/\nlastName matches /[A-Aa-z ]/\nemail blank:false,email:true\nage range:18..60\n}\n\n}\n\n&lt;/pre&gt;\n\n<strong>How to define custom validators ?</strong>\n\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\n&lt;pre lang=\"groovy\"&gt;\nverifyPassword blank:false,validator:{val,obj-&gt;\n\nif(!(val==obj.password))\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\n}\n&lt;/pre&gt;\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\n\n<strong>How to use our command object now ?</strong>\n\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\nrequest parameters to the properties of the instance, and pass it to you as the argument.\n\nThus,you can create or modify your controller action as :\n&lt;pre lang=\"groovy\"&gt;\ndef registerUser = { RegisterUserCommand cmd -&gt;\nif(!cmd.hasErrors()) {\n// your code does something\n}\nelse{\n// your code does something\n}\n}\n\n}\n&lt;/pre&gt;\n<strong>How do I display error messages on my gsp page ?\n</strong>\nTo do so you first need to pass the command object to your gsp page as :\n\n&lt;pre lang=\"groovy\"&gt;\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\n\n&lt;/pre&gt;\nthen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\n&lt;pre lang=\"groovy\"&gt;\n&lt;g:hasErrors bean=\"${myCmd?.errors}\"&gt;\n&lt;div class=\"errors\"&gt;\n&lt;g:renderErrors bean=\"${cmd}\"/&gt;\n&lt;/div&gt;\n&lt;/g:hasErrors&gt;\n&lt;/pre&gt;\n<strong>But it shows default error messages.How can I define my own error messages ?\n</strong>\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\n&lt;pre lang=\"groovy\"&gt;\ndefault.blank.message={0} cannot be blank             #this for blank fields\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\n&lt;/pre&gt;\nHere i \'ve created my own  messages.\n\n<strong>I cant follow the parameterized messages..can u please ellaborate.\n</strong>\nThe error message  defined as:\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\n\n[{0}] = property\n[{1}] = class\n[{2}] = value\n[{3}] = constraint\n\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\nIn the above example, for the verifyPassword validator the message can be defined as :\nfields.does.not.match.message={3} and {4} does not match\n\nSo in the validator the parameters can be passed as :\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-2','','','2009-05-25 09:59:44','2009-05-25 04:29:44','',49,'http://www.intelligrape.com/blog/?p=51',0,'revision','',0),(53,6,'2009-05-25 10:08:44','2009-05-25 04:38:44','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\nString username\r\nString password\r\nString firstName\r\nString lastName\r\nString email\r\nString age\r\n\r\ndef static config = ConfigurationHolder.config\r\nstatic constraints={\r\nusername blank:false,size:30\r\npassword blank:false\r\ncardNo creditCard:true\r\nfirstName matches/[A-Za-z ]/\r\nlastName matches /[A-Aa-z ]/\r\nemail blank:false,email:true\r\nage range:18..60\r\n}\r\n\r\n}\r\n\r\n</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj-&gt;\r\n\r\nif(!(val==obj.password))\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\nif(!cmd.hasErrors()) {\r\n// your code does something\r\n}\r\nelse{\r\n// your code does something\r\n}\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\r\n\r\n</pre>\r\nThen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\"&gt;\r\n<g:renderErrors bean=\"${cmd}\"/>\r\n</g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\nfields.does.not.match.message={3} and {4} does not match\r\n\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-4','','','2009-05-25 10:08:44','2009-05-25 04:38:44','',49,'http://www.intelligrape.com/blog/?p=53',0,'revision','',0),(54,6,'2009-05-25 10:10:11','2009-05-25 04:40:11','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\nString username\r\nString password\r\nString firstName\r\nString lastName\r\nString email\r\nString age\r\n\r\ndef static config = ConfigurationHolder.config\r\nstatic constraints={\r\nusername blank:false,size:30\r\npassword blank:false\r\ncardNo creditCard:true\r\nfirstName matches/[A-Za-z ]/\r\nlastName matches /[A-Aa-z ]/\r\nemail blank:false,email:true\r\nage range:18..60\r\n}\r\n\r\n}\r\n\r\n</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj-&gt;\r\n\r\nif(!(val==obj.password))\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\nif(!cmd.hasErrors()) {\r\n// your code does something\r\n}\r\nelse{\r\n// your code does something\r\n}\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\r\n\r\n</pre>\r\nThen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n<g:renderErrors bean=\"${cmd}\"/>\r\n</g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\nfields.does.not.match.message={3} and {4} does not match\r\n\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-5','','','2009-05-25 10:10:11','2009-05-25 04:40:11','',49,'http://www.intelligrape.com/blog/?p=54',0,'revision','',0),(55,6,'2009-05-25 10:10:48','2009-05-25 04:40:48','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\nString username\r\nString password\r\nString firstName\r\nString lastName\r\nString email\r\nString age\r\n\r\ndef static config = ConfigurationHolder.config\r\nstatic constraints={\r\nusername blank:false,size:30\r\npassword blank:false\r\ncardNo creditCard:true\r\nfirstName matches/[A-Za-z ]/\r\nlastName matches /[A-Aa-z ]/\r\nemail blank:false,email:true\r\nage range:18..60\r\n}\r\n\r\n}\r\n\r\n</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj-&gt;\r\n\r\nif(!(val==obj.password))\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\nif(!cmd.hasErrors()) {\r\n// your code does something\r\n}\r\nelse{\r\n// your code does something\r\n}\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\r\n\r\n</pre>\r\nThen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n<g:renderErrors bean=\"${cmd}\"/>\r\n</g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\nfields.does.not.match.message={3} and {4} does not match\r\n\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-6','','','2009-05-25 10:10:48','2009-05-25 04:40:48','',49,'http://www.intelligrape.com/blog/?p=55',0,'revision','',0),(56,6,'2009-05-25 10:10:56','2009-05-25 04:40:56','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the grails-app/controllers directory or even in the same file as a controller;or you may also define it in grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\nString username\r\nString password\r\nString firstName\r\nString lastName\r\nString email\r\nString age\r\n\r\ndef static config = ConfigurationHolder.config\r\nstatic constraints={\r\nusername blank:false,size:30\r\npassword blank:false\r\ncardNo creditCard:true\r\nfirstName matches/[A-Za-z ]/\r\nlastName matches /[A-Aa-z ]/\r\nemail blank:false,email:true\r\nage range:18..60\r\n}\r\n\r\n}\r\n\r\n</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj-&gt;\r\n\r\nif(!(val==obj.password))\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\nif(!cmd.hasErrors()) {\r\n// your code does something\r\n}\r\nelse{\r\n// your code does something\r\n}\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\nrender (view:\'myErrorPage\', model:[myCmd:cmd])\r\n\r\n</pre>\r\nThen on your myErrorPage.gsp you can use &lt;g:renderErrors &gt; tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of &lt;g:hasErrors&gt;tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n<g:renderErrors bean=\"${cmd}\"/>\r\n</g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the /grails-app/i18n/message.properties_ file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties file.One can easily mofify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\nfields.does.not.match.message={3} and {4} does not match\r\n\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-7','','','2009-05-25 10:10:56','2009-05-25 04:40:56','',49,'http://www.intelligrape.com/blog/?p=56',0,'revision','',0),(62,13,'2009-05-25 11:40:34','2009-05-25 06:10:34','','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision','','','2009-05-25 11:40:34','2009-05-25 06:10:34','',61,'http://www.intelligrape.com/blog/?p=62',0,'revision','',0),(57,6,'2009-05-25 10:28:22','2009-05-25 04:58:22','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\n     render (view:\'myErrorPage\', model:[myCmd:cmd])\r\n</pre>\r\nThen on your myErrorPage.gsp you can use <g:renderErrors> tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag\r\n<pre lang=\"groovy\">\r\n   <g:hasErrors bean=\"${cmd?.errors}\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">\r\nfields.does.not.match.message={3} and {4} does not match\r\n</pre>\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-8','','','2009-05-25 10:28:22','2009-05-25 04:58:22','',49,'http://www.intelligrape.com/blog/?p=57',0,'revision','',0),(58,6,'2009-05-25 10:30:03','2009-05-25 05:00:03','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\n     render (view:\'myErrorPage\', model:[myCmd:cmd])\r\n</pre>\r\nThen on your myErrorPage.gsp you can use <g:renderErrors> tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag\r\n<pre lang=\"groovy\">\r\n   <g:hasErrors bean=\"${cmd?.errors}\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">\r\nfields.does.not.match.message={3} and {4} does not match\r\n</pre>\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-9','','','2009-05-25 10:30:03','2009-05-25 05:00:03','',49,'http://www.intelligrape.com/blog/?p=58',0,'revision','',0),(59,6,'2009-05-25 10:31:06','2009-05-25 05:01:06','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\n     render (view:\'myErrorPage\', model:[myCmd:cmd])\r\n</pre>\r\nThen on your myErrorPage.gsp you can use <g:renderErrors> tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag\r\n<pre lang=\"groovy\">\r\n   <g:hasErrors bean=\"${cmd?.errors}\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">\r\nfields.does.not.match.message={3} and {4} does not match\r\n</pre>\r\nSo in the validator the parameters can be passed as :\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\']','Command Objects',0,'','inherit','open','open','','49-revision-10','','','2009-05-25 10:31:06','2009-05-25 05:01:06','',49,'http://www.intelligrape.com/blog/?p=59',0,'revision','',0),(61,13,'2009-05-26 16:00:17','2009-05-26 10:30:17','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minutes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"2\" align=\"center\"><hr /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'\\n\\n Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'\\n\\n File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>\r\nHope this helps you guys in creating file explorer with context menu.\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','publish','open','open','','creating-file-explorer-with-context-menu-using-jquery-file-tree-plugin','','','2009-10-12 17:15:41','2009-10-12 11:45:41','',0,'http://www.intelligrape.com/blog/?p=61',0,'post','',6),(60,6,'2009-05-25 10:34:40','2009-05-25 05:04:40','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation.The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">\r\npublic class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as verifyPassword and we want to match it to the password field.We \'ll use custom validator as :\r\n<pre lang=\"groovy\">\r\nverifyPassword blank:false,validator:{val,obj->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}\r\n</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error messages,along with the parameter.The latter are returned when using default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming\r\nrequest parameters to the properties of the instance, and pass it to you as the argument.\r\n\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">\r\ndef registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}\r\n</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n\r\n<pre lang=\"groovy\">\r\n     render (view:\'myErrorPage\', model:[myCmd:cmd])\r\n</pre>\r\nThen on your myErrorPage.gsp you can use <g:renderErrors> tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag\r\n<pre lang=\"groovy\">\r\n   <g:hasErrors bean=\"${cmd?.errors}\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\ndefault.blank.message={0} cannot be blank             #this for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # this one is verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this\r\n</pre>\r\nHere i \'ve created my own  messages.\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">\r\nfields.does.not.match.message={3} and {4} does not match\r\n</pre>\r\nSo in the validator the parameters can be passed as :\r\n<pre lang=\"groovy\">\r\nreturn [\'field.match.message\',\'Cofirm Password \',\'Password\'] </pre>\r\n\r\n   Hope you find this useful.\r\n   Imran Mir\r\n   imran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-11','','','2009-05-25 10:34:40','2009-05-25 05:04:40','',49,'http://www.intelligrape.com/blog/?p=60',0,'revision','',0),(63,13,'2009-05-25 11:40:39','2009-05-25 06:10:39','','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-2','','','2009-05-25 11:40:39','2009-05-25 06:10:39','',61,'http://www.intelligrape.com/blog/?p=63',0,'revision','',0),(64,13,'2009-05-25 11:42:47','2009-05-25 06:12:47','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\"> jQuery File Tree plugin</a>(http://abeautifulsite.net/notebook/58)  Written by Cory S.N. LaViska. For a demo on File Explorer click here (http://abeautifulsite.net/notebook_files/58/demo/).\r\nHere are the quick steps to implement it. For advanced information please go to the pluging website(http://abeautifulsite.net/notebook/58) where you can find the detailed description of this plugin as well as links to demo, download etc.','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-3','','','2009-05-25 11:42:47','2009-05-25 06:12:47','',61,'http://www.intelligrape.com/blog/?p=64',0,'revision','',0),(65,13,'2009-05-25 11:44:28','2009-05-25 06:14:28','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a>(http://abeautifulsite.net/notebook/58)  Written by Cory S.N. LaViska. For a demo on File Explorer click here (http://abeautifulsite.net/notebook_files/58/demo/).\r\nHere are the quick steps to implement it. For advanced information please go to the pluging website(http://abeautifulsite.net/notebook/58) where you can find the detailed description of this plugin as well as links to demo, download etc.','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-4','','','2009-05-25 11:44:28','2009-05-25 06:14:28','',61,'http://www.intelligrape.com/blog/?p=65',0,'revision','',0),(66,13,'2009-05-25 11:47:23','2009-05-25 06:17:23','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\"  target=\"_blank\"> click here.</a>\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-5','','','2009-05-25 11:47:23','2009-05-25 06:17:23','',61,'http://www.intelligrape.com/blog/?p=66',0,'revision','',0),(67,13,'2009-05-25 11:48:52','2009-05-25 06:18:52','<p>You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\"  target=\"_blank\"> click here.</a>\r\n<p>Here are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-6','','','2009-05-25 11:48:52','2009-05-25 06:18:52','',61,'http://www.intelligrape.com/blog/?p=67',0,'revision','',0),(68,13,'2009-05-25 11:51:22','2009-05-25 06:21:22','<p>You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\"  target=\"_blank\"> click here.</a>\r\n<p>Here are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<p>\r\n<ol>\r\n	<li><h2>Install jquery plugin</h2></li>\r\n</ol>\r\n\r\n','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-7','','','2009-05-25 11:51:22','2009-05-25 06:21:22','',61,'http://www.intelligrape.com/blog/?p=68',0,'revision','',0),(69,5,'2009-05-25 11:55:19','2009-05-25 06:25:19','How to use $.getJSON() method of jQuery with grails?\n\nRetriving a JSON string from Grails is very easy. You have to just write the following in your controller\'s action\n\nLet me explain you with an example of populating a HTML table using JSON response:\nIn this example, we have table with columns - name,address and gender. We want the table to be populated without doing a full page refresh, using an Ajax call.\n\nDomain Class:\n<pre lang=\"groovy\">class MyDomain {\n    String name\n    String address\n    String gender\n}</pre>\nController Class :\n<pre lang=\"groovy\">class MyController {\n   def someaction = {\n      List myDomains = MyDomain.findAllByGender(params.gender)\n      <em>/*Let say 5 objects are retrieved*/</em>\n      render myDomains as JSON\n   }\n}</pre>\nThe above code in action will render a<strong> JSON</strong> string in the following format:\n\n<code>[\n{\n\"name\"		: \"John\",\n\"address\"	: \"New York\",\n\"gender\"	: \"Male\"\n},\n{\n\"name\"		: \"Rob\",\n\"address\"	: \"Indonasia\",\n\"gender\"	: \"Male\"\n},\n{\n\"name\"		: \"Shayam\",\n\"address\"	: \"New Delhi\",\n\"gender\"	: \"Male\"\n},\n{\n\"name\"		: \"Chang\",\n\"address\"	: \"Thailand\",\n\"gender\"	: \"Male\"\n},\n{\n\"name\"		: \"Ali\",\n\"address\"	: \"London\",\n\"gender\"	: \"Male\"\n}\n]</code>\n\nfollowing script would be writtent on the client Side (in the GSP):\n<pre lang=\"javascript\"><script type=\"text/javascript\"><!--mce:0--></script></pre>\nThe HTML code would be like this :\n\n&lt;div id=\"someid\"&gt;\nClick for JSON Response\n&lt;/div&gt;\n&lt;table id=\"mytable\"&gt;\n&lt;!--empty table --&gt;\n&lt;/table&gt;\n\nWhen you click on the displayed text the html page would become like following:\n\n<code>&lt;div id=\"someid\"&gt;\nClick for JSON Response\n&lt;/div&gt;\n&lt;table id=\"mytable\"&gt;\n&lt;tr&gt;\n&lt;td&gt;John&lt;/td&gt;\n&lt;td&gt;New York&lt;/td&gt;\n&lt;td&gt;Male&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Rob&lt;/td&gt;\n&lt;td&gt;Indonasia&lt;/td&gt;\n&lt;td&gt;Male&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Shayam&lt;/td&gt;\n&lt;td&gt;New Delhi&lt;/td&gt;\n&lt;td&gt;Male&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Chang&lt;/td&gt;\n&lt;td&gt;Thailand&lt;/td&gt;\n&lt;td&gt;Male&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Ali&lt;/td&gt;\n&lt;td&gt;London&lt;/td&gt;\n&lt;td&gt;Male&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;</code>\n\nany kind of suggestions and comments are welcome......\n\nRegards,\nChandan Luthra\n\nhttp://www.IntelliGrape.com','How to use $.getJSON() method of jQuery with grails?',0,'','inherit','open','open','','27-autosave','','','2009-05-25 11:55:19','2009-05-25 06:25:19','',27,'http://www.intelligrape.com/blog/?p=69',0,'revision','',0),(70,5,'2009-05-25 11:55:50','2009-05-25 06:25:50','<!-- 		@page { size: 21cm 29.7cm; margin: 2cm } 		P { margin-bottom: 0.21cm } 	-->\n\nIn web application development, use of frameworks has become essential . One of those frameworks which help us in making things simpler and life easy is jQuery.\n\n<strong>Why jQuery ?</strong>\n<ul>\n	<li> Fully Documented</li>\n	<li> Great Community</li>\n	<li> Tons of plugins</li>\n	<li> Small size(14kb)</li>\n	<li> Everything  works in IE 6+,Firefox,Safari 2+,and Opera 9+</li>\n</ul>\njQquery is a very efficient framework which helps us in developing many things  in a much easier way than they would be without using any framework.\n\nAt <a href=\"http://www.IntelliGrape.com\">IntelliGrape</a> we are using  Grails and jQuery on        a project.\n\nIn this blog, I want to share one of my experiences that I had met in this course of time. A series of mails/questions in Grails mailing list on creating chained selects/drop-downs prompted me to write this blog; since I had already done this.\n\n<strong>Chain select </strong>basically means populating the next drop-down on the basis of what you select in the present drop-down.\n\nIn this example, we have two drop-downs - <strong>manufacturer </strong>and <strong>model.</strong> We want the <strong>model</strong> drop-down to be populated on the basis of what the user selects in the <strong>manufacturer</strong> drop-down, without doing a full page refresh, using an Ajax call.\n\nHere are my classes, not the whole class but a part of the class\n<p align=\"left\"><span style=\"text-decoration: underline;\"><strong>Vehicle Class</strong></span></p>\n\n<pre>public  class Vehicle {Manufacturer manufacturer\n\nModel model}</pre>\nThe Manufacturer and model classes look like this\n\n<span style=\"text-decoration: underline;\"><strong>Manufacturer Class</strong></span>\n<pre>public class Manufacturer {\n  String manufacturerName\n  static belongsTo = Vehicle\n  static hasMany = [models: Model]\n}</pre>\n<strong>Model Class</strong>\n<pre>public class Model {\n  String modelName\n  static belongsTo = Manufacturer\n}</pre>\nFor this the vehicleCreate.gsp should look like this\n\n<strong>/vehicle/create.gsp</strong>\n<pre>            <a href=\"${createLinkTo(dir:\'\')}\">Home</a>\n            Vehicle List\n<h1>Create Vehicle</h1>\n${flash.message}\n<table border=\"0\">\n<tbody>\n<tr>\n<td valign=\"top\"><label for=\"vehicleName\">Vehicle Name:</label></td>\n<td valign=\"top\"></td>\n</tr>\n<tr>\n<td valign=\"top\"><label for=\"vehicleManufacturer\">Manufacturer</label>\n*<label>:</label></td>\n<td valign=\"top\">id=\"vehicleManufacturerDropDown\"\n                                     optionKey=\"id\"\n                                     from=\"${VehicleManufacturer.list()}\"\n                                     name=\"vehicleManufacturerDropDown\" value=\"\"&gt;</td>\n</tr>\n<tr>\n<td valign=\"top\"><label for=\"model\">Model</label>\n*<label>:</label></td>\n<td valign=\"top\">id=\"model\"\n                                       optionKey=\"id\"\n                                       from=\"${VehicleModel.list()}\"\n                                       name=\"model\" value=\"\"&gt;</td>\n</tr>\n</tbody></table>\n$(document).ready(function() {\n      $(\"#vehicleManufacturerDropDown\").change(function() {\n      $.ajax({\n              url: \"/ChainDropDown/vehicle/manufacturerSelected\",\n              data: \"id=\" + this.value,\n              cache: false,\n              success: function(html) {\n              $(\"#models\").html(html);\n              }\n            });\n         });\n       });</pre>\nNow we will look at how this chained selection works using jQuery.\n\nNow what all we are left-out with is handling this event in  the VehicleController which is as simple as any other controller action. Just add manufacturerSelected action in the controller and we are done!<strong>VehicleController</strong>\n<pre>class VehicleController {\n  def manufacturerSelected = {\n    def manufacturer = VehicleManufacturer.findById(params.id)\n    render g.select(optionKey: \'id\', from: manufacturer.models, id: \'model\', name: \"model\")\n  }\n}</pre>\nYou can <a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2008/07/chaindropdown.zip\">download</a> the complete source code for a working sample app with the examples used in this blog.\n\nHope this helps somebody.\n\nPradeep Garikipati','Using jQuery and Grails to create chained selects / drop-downs',0,'','inherit','open','open','','16-autosave','','','2009-05-25 11:55:50','2009-05-25 06:25:50','',16,'http://www.intelligrape.com/blog/?p=70',0,'revision','',0),(71,13,'2009-05-25 11:52:10','2009-05-25 06:22:10','<p>You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\"  target=\"_blank\"> click here.</a>\r\n<p>Here are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<p>\r\n<ol>\r\n	<h3><li>Install jquery plugin</li></h3>\r\n</ol>\r\n\r\n','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-8','','','2009-05-25 11:52:10','2009-05-25 06:22:10','',61,'http://www.intelligrape.com/blog/?p=71',0,'revision','',0),(72,13,'2009-05-25 11:59:28','2009-05-25 06:29:28','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n<code>grails install-plugin jquery</code>\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<li>Download jQuery File Tree plugin files</li>\r\n	<li>place the unzipped folder into web-app folder</li>\r\n	<li>Decide the controller, action and gsp page</li>\r\n	<li>create gsp page and customize it</li>\r\n	<li>create connector script</li>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-9','','','2009-05-25 11:59:28','2009-05-25 06:29:28','',61,'http://www.intelligrape.com/blog/?p=72',0,'revision','',0),(73,13,'2009-05-25 12:01:00','2009-05-25 06:31:00','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<h3><li>Download jQuery File Tree plugin files</li>	</h3>\r\n	<li>place the unzipped folder into web-app folder</li>\r\n	<li>Decide the controller, action and gsp page</li>\r\n	<li>create gsp page and customize it</li>\r\n	<li>create connector script</li>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-10','','','2009-05-25 12:01:00','2009-05-25 06:31:00','',61,'http://www.intelligrape.com/blog/?p=73',0,'revision','',0),(74,13,'2009-05-25 12:04:14','2009-05-25 06:34:14','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<h3><li>Download jQuery File Tree plugin files</li>	</h3>\r\n<p>You can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<h3><li>place the unzipped folder into web-app folder</li></h3>\r\n<p>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<h3><li>Decide the controller, action and gsp page</li></h3>\r\n<p>Suppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n	//...............\r\n    def showBrowser = {\r\n	//.................\r\n	render( view : \'FileBrowser\')\r\n }\r\n//................\r\n}\r\n</code>\r\n	<h3><li>create gsp page and customize it</li></h3>\r\n	<li>create connector script</li>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-11','','','2009-05-25 12:04:14','2009-05-25 06:34:14','',61,'http://www.intelligrape.com/blog/?p=74',0,'revision','',0),(75,13,'2009-05-25 12:07:24','2009-05-25 06:37:24','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<h3><li>Download jQuery File Tree plugin files</li>	</h3>\r\n<p>You can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<h3><li>place the unzipped folder into web-app folder</li></h3>\r\n<p>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<h3><li>Decide the controller, action and gsp page</li></h3>\r\n<p>Suppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n	//...............\r\n    def showBrowser = {\r\n	//.................\r\n	render( view : \'FileBrowser\')\r\n }\r\n//................\r\n}\r\n</code>\r\n	<h3><li>create gsp page and customize it</li></h3>\r\n<p>Here is the contents of /grails-app/views/FileBrowser/FileBrowser.gsp file :\r\n<code>\r\n<html>\r\n<head>\r\n    <title>File Explorer</title>\r\n    <script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"></script>\r\n    <link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\">\r\n    <script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"></script>\r\n    <script type=\"text/javascript\">\r\n\r\n	function YourFunctionToProcessThisFilePath(file){\r\n	alert(\'You selected : \'+file);\r\n	}\r\n\r\n        $(document).ready(function() {\r\n            $(\'#file_list\').fileTree({\r\n                root:\'/\',	/*DESCRIPTION 1*/\r\n                script: \'generateFileList.gsp\',	/*DESCRIPTION 2*/\r\n                expandSpeed: 1000,\r\n                collapseSpeed: 1000,\r\n                multiFolder: false\r\n            }, function(file) {\r\n                 YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n            });\r\n        });\r\n    </script>\r\n</head>\r\n<h1>File Explorer</h1>\r\n<body>\r\n<div id=\"file_list\">	<!-- DESCRIPTION #4 -->\r\n    <%=\"Empty\"%>\r\n</div>\r\n</body>\r\n</html>\r\n</code>\r\nDESCRIPTION #1: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\nDESCRIPTION #2: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\n<code>\r\n<ul class=\"jqueryFileTree\" style=\"display: none;\">\r\n    <li class=\"directory collapsed\"><a href=\"#\" rel=\"/this/folder/\">Folder Name</a></li>\r\n    (additional folders here)\r\n    <li class=\"file ext_txt\"><a href=\"#\" rel=\"/this/folder/filename.txt\">filename.txt</a></li>\r\n    (additional files here)\r\n</ul>\r\n</code>\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\nDESCRIPTION #3: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\nDESCRIPTION #4: The id of the div tag is used in jQuery. So it must match at both places.\r\n	<h3><li>create connector script</li></H3>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-12','','','2009-05-25 12:07:24','2009-05-25 06:37:24','',61,'http://www.intelligrape.com/blog/?p=75',0,'revision','',0),(76,13,'2009-05-25 12:08:52','2009-05-25 06:38:52','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<h3><li>Download jQuery File Tree plugin files</li>	</h3>\r\n<p>You can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<h3><li>place the unzipped folder into web-app folder</li></h3>\r\n<p>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<h3><li>Decide the controller, action and gsp page</li></h3>\r\n<p>Suppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n	//...............\r\n    def showBrowser = {\r\n	//.................\r\n	render( view : \'FileBrowser\')\r\n }\r\n//................\r\n}\r\n</code>\r\n	<h3><li>create gsp page and customize it</li></h3>\r\n<p>Here is the contents of /grails-app/views/FileBrowser/FileBrowser.gsp file :\r\n<textarea rows=\"10\">\r\n<html>\r\n<head>\r\n    <title>File Explorer</title>\r\n    <script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"></script>\r\n    <link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\">\r\n    <script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"></script>\r\n    <script type=\"text/javascript\">\r\n\r\n	function YourFunctionToProcessThisFilePath(file){\r\n	alert(\'You selected : \'+file);\r\n	}\r\n\r\n        $(document).ready(function() {\r\n            $(\'#file_list\').fileTree({\r\n                root:\'/\',	/*DESCRIPTION 1*/\r\n                script: \'generateFileList.gsp\',	/*DESCRIPTION 2*/\r\n                expandSpeed: 1000,\r\n                collapseSpeed: 1000,\r\n                multiFolder: false\r\n            }, function(file) {\r\n                 YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n            });\r\n        });\r\n    </script>\r\n</head>\r\n<h1>File Explorer</h1>\r\n<body>\r\n<div id=\"file_list\">	<!-- DESCRIPTION #4 -->\r\n    <%=\"Empty\"%>\r\n</div>\r\n</body>\r\n</html>\r\n</textarea>\r\nDESCRIPTION #1: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\nDESCRIPTION #2: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\n<code>\r\n<ul class=\"jqueryFileTree\" style=\"display: none;\">\r\n    <li class=\"directory collapsed\"><a href=\"#\" rel=\"/this/folder/\">Folder Name</a></li>\r\n    (additional folders here)\r\n    <li class=\"file ext_txt\"><a href=\"#\" rel=\"/this/folder/filename.txt\">filename.txt</a></li>\r\n    (additional files here)\r\n</ul>\r\n</code>\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\nDESCRIPTION #3: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\nDESCRIPTION #4: The id of the div tag is used in jQuery. So it must match at both places.\r\n	<h3><li>create connector script</li></H3>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-13','','','2009-05-25 12:08:52','2009-05-25 06:38:52','',61,'http://www.intelligrape.com/blog/?p=76',0,'revision','',0),(78,13,'2009-05-25 12:17:11','2009-05-25 06:47:11','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<ul class=\"jqueryFileTree\" style=\"display: none;\">\r\n	<li class=\"directory collapsed\"><a rel=\"/this/folder/\" href=\"#\">Folder Name</a></li>\r\n(additional folders here)\r\n	<li class=\"file ext_txt\"><a rel=\"/this/folder/filename.txt\" href=\"#\">filename.txt</a></li>\r\n(additional files here)</ul>\r\n</li>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n<h3>\r\n	<li>Download jQuery File Tree plugin files</li>\r\n</h3>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n<h3>\r\n	<li>place the unzipped folder into web-app folder</li>\r\n</h3>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n<h3>\r\n	<li>Decide the controller, action and gsp page</li>\r\n</h3>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n<h3>\r\n	<li>create gsp page and customize it</li>\r\n</h3>\r\nHere is the contents of /grails-app/views/FileBrowser/FileBrowser.gsp file :\r\n<pre><html>\r\n<head>\r\n    <title>File Explorer</title>\r\n    <script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"></script>\r\n    <link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\">\r\n    <script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"></script>\r\n    <script type=\"text/javascript\">\r\n\r\n	function YourFunctionToProcessThisFilePath(file){\r\n	alert(\'You selected : \'+file);\r\n	}\r\n\r\n        $(document).ready(function() {\r\n            $(\'#file_list\').fileTree({\r\n                root:\'/\',	/*DESCRIPTION 1*/\r\n                script: \'generateFileList.gsp\',	/*DESCRIPTION 2*/\r\n                expandSpeed: 1000,\r\n                collapseSpeed: 1000,\r\n                multiFolder: false\r\n            }, function(file) {\r\n                 YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n            });\r\n        });\r\n    </script>\r\n</head>\r\n<h1>File Explorer</h1>\r\n<body>\r\n<div id=\"file_list\">	<!-- DESCRIPTION #4 -->\r\n    <%=\"Empty\"%>\r\n</div>\r\n</body>\r\n</html> </pre>\r\nDESCRIPTION #1: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\nDESCRIPTION #2: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\nDESCRIPTION #3: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\nDESCRIPTION #4: The id of the div tag is used in jQuery. So it must match at both places.\r\n<h3>\r\n	<li>create connector script</li>\r\n</h3>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-15','','','2009-05-25 12:17:11','2009-05-25 06:47:11','',61,'http://www.intelligrape.com/blog/?p=78',0,'revision','',0),(77,13,'2009-05-25 12:11:25','2009-05-25 06:41:25','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<ul class=\"jqueryFileTree\" style=\"display: none;\">\r\n	<li class=\"directory collapsed\"><a rel=\"/this/folder/\" href=\"#\">Folder Name</a></li>\r\n(additional folders here)\r\n	<li class=\"file ext_txt\"><a rel=\"/this/folder/filename.txt\" href=\"#\">filename.txt</a></li>\r\n(additional files here)</ul>\r\n</li>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n<h3>\r\n	<li>Download jQuery File Tree plugin files</li>\r\n</h3>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n<h3>\r\n	<li>place the unzipped folder into web-app folder</li>\r\n</h3>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n<h3>\r\n	<li>Decide the controller, action and gsp page</li>\r\n</h3>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n<h3>\r\n	<li>create gsp page and customize it</li>\r\n</h3>\r\nHere is the contents of /grails-app/views/FileBrowser/FileBrowser.gsp file :\r\n<textarea rows=\"10\" cols=\"80\">&lt;br /&gt; &lt;html&gt;&lt;br /&gt; &lt;head&gt;&lt;br /&gt;     &lt;title&gt;File Explorer&lt;/title&gt;&lt;br /&gt;     &lt;mce:script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" mce_src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/mce:script&gt; &lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\" mce_href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;     &lt;mce:script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" mce_src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/mce:script&gt;&lt;br /&gt;     &lt;mce:script type=\"text/javascript\"&gt;&lt;!-- 	function YourFunctionToProcessThisFilePath(file){ 	alert(\'You selected : \'+file); 	}          $(document).ready(function() {             $(\'#file_list\').fileTree({                 root:\'/\',	/*DESCRIPTION 1*/                 script: \'generateFileList.gsp\',	/*DESCRIPTION 2*/                 expandSpeed: 1000,                 collapseSpeed: 1000,                 multiFolder: false             }, function(file) {                  YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/             });         });      // --&gt;&lt;/mce:script&gt;&lt;br /&gt; &lt;/head&gt;&lt;/p&gt; &lt;h1&gt;File Explorer&lt;/h1&gt; &lt;p&gt;&lt;body&gt;&lt;/p&gt; &lt;div id=\"file_list\"&gt;	&lt;!-- DESCRIPTION #4 --&gt;&lt;br /&gt;     &lt;%=\"Empty\"%&gt; &lt;/div&gt; &lt;p&gt;&lt;/body&gt;&lt;br /&gt; &lt;/html&gt;&lt;br /&gt; </textarea>\r\nDESCRIPTION #1: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\nDESCRIPTION #2: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\nDESCRIPTION #3: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\nDESCRIPTION #4: The id of the div tag is used in jQuery. So it must match at both places.\r\n<h3>\r\n	<li>create connector script</li>\r\n</h3>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-14','','','2009-05-25 12:11:25','2009-05-25 06:41:25','',61,'http://www.intelligrape.com/blog/?p=77',0,'revision','',0),(79,13,'2009-05-25 12:23:29','2009-05-25 06:53:29','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<ul class=\"jqueryFileTree\" style=\"display: none;\">\r\n	<li class=\"directory collapsed\"><a rel=\"/this/folder/\" href=\"#\">Folder Name</a></li>\r\n(additional folders here)\r\n	<li class=\"file ext_txt\"><a rel=\"/this/folder/filename.txt\" href=\"#\">filename.txt</a></li>\r\n(additional files here)</ul>\r\n</li>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n<h3>\r\n	<li>Download jQuery File Tree plugin files</li>\r\n</h3>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n<h3>\r\n	<li>place the unzipped folder into web-app folder</li>\r\n</h3>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n<h3>\r\n	<li>Decide the controller, action and gsp page</li>\r\n</h3>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n<h3>\r\n	<li>create gsp page and customize it</li>\r\n</h3>\r\n</ol>\r\n<pre style=\"text-align: left;\">&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;File Explorer&lt;/title&gt;\r\n    &lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n    &lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n    &lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n\r\n    function YourFunctionToProcessThisFilePath(file){\r\n    alert(\'You selected : \'+file);\r\n    }\r\n\r\n        $(document).ready(function() {\r\n            $(\'#file_list\').fileTree({\r\n                root:\'/\',    /*DESCRIPTION 1*/\r\n                script: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\n                expandSpeed: 1000,\r\n                collapseSpeed: 1000,\r\n                multiFolder: false\r\n            }, function(file) {\r\n                 YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n            });\r\n        });\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n    &lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n<ol>DESCRIPTION #1: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\nDESCRIPTION #2: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\nDESCRIPTION #3: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\nDESCRIPTION #4: The id of the div tag is used in jQuery. So it must match at both places.\r\n<h3>\r\n	<li>create connector script</li>\r\n</h3>\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-16','','','2009-05-25 12:23:29','2009-05-25 06:53:29','',61,'http://www.intelligrape.com/blog/?p=79',0,'revision','',0),(82,13,'2009-05-25 13:21:48','2009-05-25 07:51:48','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n	<li>\r\n<h3>create gsp page and customize it</h3>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code>\r\nHere is the code for connector script .../grails-app/views/FileBrowser/generateFileList.gsp\r\n</code>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\n</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\n</li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\n</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\n</li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\n</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\n</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-19','','','2009-05-25 13:21:48','2009-05-25 07:51:48','',61,'http://www.intelligrape.com/blog/?p=82',0,'revision','',0),(81,13,'2009-05-25 13:05:23','2009-05-25 07:35:23','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li><span style=\"text-decoration: underline;\"><strong>Install jquery plugin</strong></span></li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<li><span style=\"text-decoration: underline;\"><strong>Download jQuery File Tree plugin files</strong></span></li>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li><span style=\"text-decoration: underline;\"><strong>place the unzipped folder into web-app folder</strong></span></li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n<h3>\r\n	<li>Decide the controller, action and gsp page</li>\r\n</h3>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n	<li><span style=\"text-decoration: underline;\"><strong>create gsp page and customize it</strong></span></li>\r\n</ol>\r\n<pre style=\"text-align: left;\">&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;File Explorer&lt;/title&gt;\r\n    &lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n    &lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n    &lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n\r\n    function YourFunctionToProcessThisFilePath(file){\r\n    alert(\'You selected : \'+file);\r\n    }\r\n\r\n        $(document).ready(function() {\r\n            $(\'#file_list\').fileTree({\r\n                root:\'/\',    /*DESCRIPTION 1*/\r\n                script: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\n                expandSpeed: 1000,\r\n                collapseSpeed: 1000,\r\n                multiFolder: false\r\n            }, function(file) {\r\n                 YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n            });\r\n        });\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n    &lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n<ol><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\n<strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\n<strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\n<strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.\r\n<h3>\r\n	<li>create connector script</li>\r\n</h3>\r\n<code>\r\nHere is the code for connector script .../grails-app/views/FileBrowser/generateFileList.gsp\r\n</code>\r\n&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\nList files=[]\r\n\r\nf.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;\r\n}\r\n\r\nfiles.sort{File file-&gt; file.name.toUpperCase()}\r\nStringBuffer output=new StringBuffer(\'\r\n\r\n\");\r\nprintln output.toString()\r\n}\r\n%&gt;\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-18','','','2009-05-25 13:05:23','2009-05-25 07:35:23','',61,'http://www.intelligrape.com/blog/?p=81',0,'revision','',0),(80,13,'2009-05-25 12:51:26','2009-05-25 07:21:26','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n<h3>\r\n	<li>Install jquery plugin</li>\r\n</h3>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n<h3>\r\n	<li>Download jQuery File Tree plugin files</li>\r\n</h3>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n<h3>\r\n	<li>place the unzipped folder into web-app folder</li>\r\n</h3>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n<h3>\r\n	<li>Decide the controller, action and gsp page</li>\r\n</h3>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n<h3>\r\n	<li>create gsp page and customize it</li>\r\n</h3>\r\n</ol>\r\n<pre style=\"text-align: left;\">&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;File Explorer&lt;/title&gt;\r\n    &lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n    &lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n    &lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n\r\n    function YourFunctionToProcessThisFilePath(file){\r\n    alert(\'You selected : \'+file);\r\n    }\r\n\r\n        $(document).ready(function() {\r\n            $(\'#file_list\').fileTree({\r\n                root:\'/\',    /*DESCRIPTION 1*/\r\n                script: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\n                expandSpeed: 1000,\r\n                collapseSpeed: 1000,\r\n                multiFolder: false\r\n            }, function(file) {\r\n                 YourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n            });\r\n        });\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n    &lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre>\r\n<ol>\r\n	<li>\r\n<ul class=\"jqueryFileTree\" style=\"display: none;\">\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"\r\n	<li class=\"directory collapsed\"><a rel=\"${dir+file.name+File.separator}\" href=\"#\">${file.name}</a></li>\r\n\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\');\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\noutput.append(\"\"\"\r\n	<li class=\"file ext_${ext}\"><a rel=\"${dir+file.name}\" href=\"#\">${file.name}</a></li>\r\n\"\"\");\r\n}\r\n}\r\noutput.append(\"</ul>\r\n</li>\r\n<strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.\r\n\r\n<strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).\r\n<strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.\r\n<strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.\r\n<h3>\r\n	<li>create connector script</li>\r\n</h3>\r\n<code>\r\nHere is the code for connector script .../grails-app/views/FileBrowser/generateFileList.gsp</code>\r\n\r\n&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\nList files=[]\r\n\r\nf.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;\r\n}\r\n\r\nfiles.sort{File file-&gt; file.name.toUpperCase()}\r\nStringBuffer output=new StringBuffer(\'\r\n\r\n\");\r\nprintln output.toString()\r\n}\r\n%&gt;\r\n	<li>Test Your File Explorer</li>\r\n	<li>Moving the connector script  to an action of the controller</li>\r\n	<li>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</li>\r\n	<li>Forwarding to an action when a file is clicked</li>\r\n	<li>Installing the plugin for Context Menu(Right Click)</li>\r\n	<li>Create context menu options by Modifying FileBrowser.gsp file</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-17','','','2009-05-25 12:51:26','2009-05-25 07:21:26','',61,'http://www.intelligrape.com/blog/?p=80',0,'revision','',0),(83,13,'2009-05-25 13:30:57','2009-05-25 08:00:57','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<code>grails install-plugin jquery</code>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<code>grails --help | grep plugin</code>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\nclass FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</code>\r\n	<li>\r\n<h3>create gsp page and customize it</h3>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;\r\n\r\nfunction YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}\r\n\r\n$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code>\r\nHere is the code for connector script .../grails-app/views/FileBrowser/generateFileList.gsp\r\n</code>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\n</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\n</li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\n</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\n</li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\n</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\n</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-20','','','2009-05-25 13:30:57','2009-05-25 08:00:57','',61,'http://www.intelligrape.com/blog/?p=83',0,'revision','',0),(84,13,'2009-05-25 13:36:20','2009-05-25 08:06:20','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>create gsp page and customize it</h3>\r\nHere is the contents of /grails-app/views/FileBrowser/FileBrowser.gsp file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script .../grails-app/views/FileBrowser/generateFileList.gsp</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\n</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\n</li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\n</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\n</li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\n</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\n</li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-21','','','2009-05-25 13:36:20','2009-05-25 08:06:20','',61,'http://www.intelligrape.com/blog/?p=84',0,'revision','',0),(85,13,'2009-05-25 15:02:17','2009-05-25 09:32:17','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the plugins website(http://abeautifulsite.net/notebook/58) or Click here to download(http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip ).\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action render the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>create gsp page and customize it</h3>\r\nHere is the contents of /grails-app/views/FileBrowser/FileBrowser.gsp file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script .../grails-app/views/FileBrowser/generateFileList.gsp</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the pluging website(http://abeautifulsite.net/notebook/58) under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: \"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span>\r\n\r\n//................\r\n}</li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin jQuery Context Menu Plugin(http://abeautifulsite.net/notebook/80) Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the plugin website(http://abeautifulsite.net/notebook/80) where you can see a demo as well as download necessary files to use this plugin. Click here to download the plugin(http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip).\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\noutput.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-22','','','2009-05-25 15:02:17','2009-05-25 09:32:17','',61,'http://www.intelligrape.com/blog/?p=85',0,'revision','',0),(86,13,'2009-05-25 15:16:44','2009-05-25 09:46:44','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>Create gsp page and customize it</h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-23','','','2009-05-25 15:16:44','2009-05-25 09:46:44','',61,'http://www.intelligrape.com/blog/?p=86',0,'revision','',0),(87,13,'2009-05-25 15:16:51','2009-05-25 09:46:51','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>Create gsp page and customize it</h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-24','','','2009-05-25 15:16:51','2009-05-25 09:46:51','',61,'http://www.intelligrape.com/blog/?p=87',0,'revision','',0),(88,13,'2009-05-25 15:24:12','2009-05-25 09:54:12','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>Create gsp page and customize it</h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-25','','','2009-05-25 15:24:12','2009-05-25 09:54:12','',61,'http://www.intelligrape.com/blog/?p=88',0,'revision','',0),(89,13,'2009-05-25 15:24:19','2009-05-25 09:54:19','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>Create gsp page and customize it</h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-26','','','2009-05-25 15:24:19','2009-05-25 09:54:19','',61,'http://www.intelligrape.com/blog/?p=89',0,'revision','',0),(90,13,'2009-05-25 15:24:52','2009-05-25 09:54:52','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>Create gsp page and customize it</h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-27','','','2009-05-25 15:24:52','2009-05-25 09:54:52','',61,'http://www.intelligrape.com/blog/?p=90',0,'revision','',0),(91,13,'2009-05-25 15:38:19','2009-05-25 10:08:19','','screenshot1',0,'File Explorer with context menu','inherit','open','open','','screenshot1','','','2009-05-25 15:38:19','2009-05-25 10:08:19','',61,'http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png',0,'attachment','image/png',0),(92,13,'2009-05-25 15:25:00','2009-05-25 09:55:00','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n<ol>\r\n	<li>\r\n<h3>Install jquery plugin</h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3>Download jQuery File Tree plugin files</h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3>place the unzipped folder into web-app folder</h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3>Decide the controller, action and gsp page</h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3>Create gsp page and customize it</h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3>create connector script</h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3>Test Your File Explorer</h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3>Moving the connector script  to an action of the controller</h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3>Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3>Forwarding to an action when a file is clicked</h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3>Installing the plugin for Context Menu(Right Click)</h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3>Create context menu options by Modifying FileBrowser.gsp file</h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options cut, paste, rename and delete also a separator beteween paste and rename option which is displayed whenever a folder is right-clicked. When you click an option from the displayed context menu the javascript function HandleFolderContextMenu is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time HandleFileContextMenu javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-28','','','2009-05-25 15:25:00','2009-05-25 09:55:00','',61,'http://www.intelligrape.com/blog/?p=92',0,'revision','',0),(97,13,'2009-05-25 15:50:31','2009-05-25 10:20:31','<table style=\"height: 317px;\" border=\"0\" width=\"1207\">\n<tbody>\n<tr>\n<td>You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\n\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot</td>\n<td><img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" /></td>\n</tr>\n</tbody></table>\n<ol>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\n</li>\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\nTo install jQuery plugin use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\n\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\n</li>\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\n\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\n	<li>\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\n</li>\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\n	<li>\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\n</li>\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\n<code>\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\n//................\n}\n</span> </code>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\nalert(\'You selected : \'+file);\n}</span>\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</span>\n<ul>\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\n</ul>\n</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\n</li>\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\nString dir = params?.dir\nif (dir == null) {\n    return;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\n    dir+=File.separator\n}\n\nFile f=new File(dir)\nif (f.exists()) {\n    List&lt;File&gt; files=[]\n\n    f.eachFile { File file-&gt;\n        if(!file.hidden)\n            files&lt;&lt;file\n    }\n\n    files.sort{File file-&gt; file.name.toUpperCase()}\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n    // All dirs\n    files.each{File file-&gt;\n        if(file.directory){\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n        }\n    }\n    // All files\n    files.each{File file-&gt;\n        if(file.file){\n            int dotIndex = file.name.lastIndexOf(\'.\');\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\n        }\n    }\n    output.append(\"&lt;/ul&gt;\");\n    println output.toString()\n}\n%&gt;\n</code></span></pre>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\ndef generateFileList={\nString dir = params?.dir\nif (dir == null) {\nreturn;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\ndir+=File.separator\n}</span>\n\n<span style=\"color: #ff6600;\">File f=new File(dir)\nif (f.exists()) {\nList&lt;File&gt; files=[]</span>\n\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\nif(!file.hidden)\nfiles&lt;&lt;file\n}</span>\n\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\nfile.name.toUpperCase()\n}</span>\n\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n// All dirs\nfiles.each{File file-&gt;\nif(file.directory){\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\n// All files\nfiles.each{File file-&gt;\nif(file.file){\nint dotIndex = file.name.lastIndexOf(\'.\')\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\nout.flush()\nout.close()</span>\n}\n}\n//................\n} </span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\n</span>\n\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n</span>}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\n<span style=\"color: #333399;\">def processThisFile={\nprintln params.selectedFile\nrender(params.selectedFile)\n}</span></span>\n\n<span style=\"color: #ff9900;\">//................\n}</span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\n\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\n\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\n\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\n\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\nfunction HandleFolderContextMenu(action, folderPath){\nalert(action+\'nn Folder Path : \'+folderPath);\n}\nfunction HandleFileContextMenu(action, filePath){\nalert(action+\'nn File Path : \'+filePath);\n}</span>\n\n<span style=\"color: #0000ff;\">function showMenu(){\n$(\'.directory&gt;a\').contextMenu({\nmenu: \'myFolderMenu\'\n},\nfunction(action, el, pos) {\nvar folderPath=$(el).attr(\'rel\');\nHandleFolderContextMenu(action, folderPath);\n}\n);\n$(\'.file&gt;a\').contextMenu({\nmenu: \'myFileMenu\'\n},\nfunction(action, el, pos) {\nvar filePath=$(el).attr(\'rel\');\nHandleFileContextMenu(action, filePath);\n}\n);\n}</span>\n\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\ndocument.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\nshowMenu();\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\n\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\n//.......................\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\nOutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\n//.......................\n}</strong></span></li>\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-33','','','2009-05-25 15:50:31','2009-05-25 10:20:31','',61,'http://www.intelligrape.com/blog/?p=97',0,'revision','',0),(93,13,'2009-05-25 15:41:52','2009-05-25 10:11:52','You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot\r\n\r\n[caption id=\"attachment_91\" align=\"alignnone\" width=\"378\" caption=\"File Explorer with context menu\"]<img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" />[/caption]\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-29','','','2009-05-25 15:41:52','2009-05-25 10:11:52','',61,'http://www.intelligrape.com/blog/?p=93',0,'revision','',0),(96,13,'2009-05-25 15:48:08','2009-05-25 10:18:08','<table>\r\n<tr>\r\n<td>\r\nYou can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot\r\n</td>\r\n<td>\r\n<img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" />\r\n</td></tr>\r\n</table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-32','','','2009-05-25 15:48:08','2009-05-25 10:18:08','',61,'http://www.intelligrape.com/blog/?p=96',0,'revision','',0),(94,13,'2009-05-25 15:45:06','2009-05-25 10:15:06','<table>\r\n<tr>\r\n<td>\r\nYou can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot\r\n</td>\r\n[caption id=\"attachment_91\" align=\"alignnone\" width=\"378\" caption=\"File Explorer with context menu\"]<img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" />[/caption]\r\n\r\n<td>\r\n</td></tr>\r\n<tr><td>\r\n</td>\r\n<td></td></tr>\r\n</table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-30','','','2009-05-25 15:45:06','2009-05-25 10:15:06','',61,'http://www.intelligrape.com/blog/?p=94',0,'revision','',0),(95,13,'2009-05-25 15:46:09','2009-05-25 10:16:09','<table>\r\n<tr>\r\n<td>\r\nYou can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot\r\n</td>\r\n<td>\r\n[caption id=\"attachment_91\" align=\"alignnone\" width=\"378\" caption=\"File Explorer with context menu\"]<img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" />[/caption]\r\n</td></tr>\r\n<tr><td>\r\n</td>\r\n<td></td></tr>\r\n</table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-31','','','2009-05-25 15:46:09','2009-05-25 10:16:09','',61,'http://www.intelligrape.com/blog/?p=95',0,'revision','',0),(98,13,'2009-05-25 15:51:30','2009-05-25 10:21:30','<table style=\"height: 317px;\" border=\"0\" width=\"1207\">\n<tbody>\n<tr>\n<td style=\"text-align: justify;\">You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\n<p style=\"text-align: justify;\">Here are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot</p>\n</td>\n<td style=\"text-align: justify;\"><img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" /></td>\n</tr>\n</tbody></table>\n<ol>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\n</li>\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\nTo install jQuery plugin use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\n\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\n</li>\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\n\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\n	<li>\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\n</li>\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\n	<li>\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\n</li>\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\n<code>\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\n//................\n}\n</span> </code>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\nalert(\'You selected : \'+file);\n}</span>\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</span>\n<ul>\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\n</ul>\n</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\n</li>\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\nString dir = params?.dir\nif (dir == null) {\n    return;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\n    dir+=File.separator\n}\n\nFile f=new File(dir)\nif (f.exists()) {\n    List&lt;File&gt; files=[]\n\n    f.eachFile { File file-&gt;\n        if(!file.hidden)\n            files&lt;&lt;file\n    }\n\n    files.sort{File file-&gt; file.name.toUpperCase()}\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n    // All dirs\n    files.each{File file-&gt;\n        if(file.directory){\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n        }\n    }\n    // All files\n    files.each{File file-&gt;\n        if(file.file){\n            int dotIndex = file.name.lastIndexOf(\'.\');\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\n        }\n    }\n    output.append(\"&lt;/ul&gt;\");\n    println output.toString()\n}\n%&gt;\n</code></span></pre>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\ndef generateFileList={\nString dir = params?.dir\nif (dir == null) {\nreturn;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\ndir+=File.separator\n}</span>\n\n<span style=\"color: #ff6600;\">File f=new File(dir)\nif (f.exists()) {\nList&lt;File&gt; files=[]</span>\n\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\nif(!file.hidden)\nfiles&lt;&lt;file\n}</span>\n\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\nfile.name.toUpperCase()\n}</span>\n\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n// All dirs\nfiles.each{File file-&gt;\nif(file.directory){\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\n// All files\nfiles.each{File file-&gt;\nif(file.file){\nint dotIndex = file.name.lastIndexOf(\'.\')\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\nout.flush()\nout.close()</span>\n}\n}\n//................\n} </span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\n</span>\n\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n</span>}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\n<span style=\"color: #333399;\">def processThisFile={\nprintln params.selectedFile\nrender(params.selectedFile)\n}</span></span>\n\n<span style=\"color: #ff9900;\">//................\n}</span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\n\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\n\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\n\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\n\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\nfunction HandleFolderContextMenu(action, folderPath){\nalert(action+\'nn Folder Path : \'+folderPath);\n}\nfunction HandleFileContextMenu(action, filePath){\nalert(action+\'nn File Path : \'+filePath);\n}</span>\n\n<span style=\"color: #0000ff;\">function showMenu(){\n$(\'.directory&gt;a\').contextMenu({\nmenu: \'myFolderMenu\'\n},\nfunction(action, el, pos) {\nvar folderPath=$(el).attr(\'rel\');\nHandleFolderContextMenu(action, folderPath);\n}\n);\n$(\'.file&gt;a\').contextMenu({\nmenu: \'myFileMenu\'\n},\nfunction(action, el, pos) {\nvar filePath=$(el).attr(\'rel\');\nHandleFileContextMenu(action, filePath);\n}\n);\n}</span>\n\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\ndocument.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\nshowMenu();\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\n\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\n//.......................\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\nOutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\n//.......................\n}</strong></span></li>\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-34','','','2009-05-25 15:51:30','2009-05-25 10:21:30','',61,'http://www.intelligrape.com/blog/?p=98',0,'revision','',0),(99,13,'2009-05-25 15:52:17','2009-05-25 10:22:17','<table  border=\"0\" >\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: justify;\">You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n<p style=\"text-align: justify;\">Here are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot</p>\r\n</td>\r\n<td ><img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-35','','','2009-05-25 15:52:17','2009-05-25 10:22:17','',61,'http://www.intelligrape.com/blog/?p=99',0,'revision','',0),(100,13,'2009-05-25 15:58:21','2009-05-25 10:28:21','<table  border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: justify;vertical-align:top;\">You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n<p style=\"text-align: justify;\">Here are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot</p>\r\n</td>\r\n<td ><img class=\"size-full wp-image-91\" title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-36','','','2009-05-25 15:58:21','2009-05-25 10:28:21','',61,'http://www.intelligrape.com/blog/?p=100',0,'revision','',0),(101,13,'2009-05-25 16:00:25','2009-05-25 10:30:25','<table  border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: justify;vertical-align:top;\">You can create a customized, fully-interactive file tree using<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin</a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n<p style=\"text-align: justify;\">Here are the quick steps to implement it in your application. For advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages. You can find snapshot</p>\r\n</td>\r\n<td ><img  title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"300\" height=\"275\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-37','','','2009-05-25 16:00:25','2009-05-25 10:30:25','',61,'http://www.intelligrape.com/blog/?p=101',0,'revision','',0),(102,13,'2009-05-25 16:09:03','2009-05-25 10:39:03','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: top;\">You can create a customized, fully-interactive file tree using\r\n<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin\r\n</a> Written by Cory S.N. LaViska. For a\r\ndemo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application.\r\n\r\nFor advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a>\r\n\r\nwhere you can find the detailed description of this plugin as\r\n\r\nwell as links to demo, download etc pages.\r\n\r\nYou can find snapshot</td>\r\n<td style=\"text-align: left;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"300\" height=\"275\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-38','','','2009-05-25 16:09:03','2009-05-25 10:39:03','',61,'http://www.intelligrape.com/blog/?p=102',0,'revision','',0),(103,13,'2009-05-25 16:10:41','2009-05-25 10:40:41','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: top;\">You can create a customized, fully-interactive file tree using\r\n\r\n<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin\r\n</a> Written by Cory S.N. LaViska. For a\r\ndemo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application.\r\n\r\nFor advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a>\r\n\r\nwhere you can find the detailed description of this plugin as\r\n\r\nwell as links to demo, download etc pages.\r\n\r\nYou can find snapshot</td>\r\n<td style=\"text-align: left;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"300\" height=\"275\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-39','','','2009-05-25 16:10:41','2009-05-25 10:40:41','',61,'http://www.intelligrape.com/blog/?p=103',0,'revision','',0),(105,13,'2009-05-25 16:19:10','2009-05-25 10:49:10','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: top;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:middle;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"378\" height=\"307\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<hr>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-41','','','2009-05-25 16:19:10','2009-05-25 10:49:10','',61,'http://www.intelligrape.com/blog/?p=105',0,'revision','',0),(104,13,'2009-05-25 16:14:19','2009-05-25 10:44:19','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: top;\">You can create a customized, fully-interactive file tree using\r\n\r\n<a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin\r\n</a> Written by Cory S.N. LaViska. For a\r\ndemo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application.\r\n\r\nFor advanced information please go to the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugin website</a>\r\n\r\nwhere you can find the detailed description of this plugin as\r\n\r\nwell as links to demo, download etc pages.\r\n\r\nYou can find snapshot</td>\r\n<td style=\"horizontal-align: right; vertical-align:middle;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"300\" height=\"275\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-40','','','2009-05-25 16:14:19','2009-05-25 10:44:19','',61,'http://www.intelligrape.com/blog/?p=104',0,'revision','',0),(106,13,'2009-05-25 16:21:15','2009-05-25 10:51:15','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:middle;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"280\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<hr>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-42','','','2009-05-25 16:21:15','2009-05-25 10:51:15','',61,'http://www.intelligrape.com/blog/?p=106',0,'revision','',0),(107,13,'2009-05-25 16:26:03','2009-05-25 10:56:03','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:middle;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"280\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<hr />\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-43','','','2009-05-25 16:26:03','2009-05-25 10:56:03','',61,'http://www.intelligrape.com/blog/?p=107',0,'revision','',0),(109,13,'2009-05-25 16:27:02','2009-05-25 10:57:02','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<hr />\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-45','','','2009-05-25 16:27:02','2009-05-25 10:57:02','',61,'http://www.intelligrape.com/blog/?p=109',0,'revision','',0),(108,13,'2009-05-25 16:26:08','2009-05-25 10:56:08','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a></p>\r\n<p>Here are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.</p>\r\n<p>At first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.</p>\r\n<p>Here is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:middle;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"280\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<hr />\r\n<ol>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\n<p>jQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.<br />\r\nTo install jQuery plugin use the following command :</p>\r\n<p><span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span></p>\r\n<p>To get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :</p>\r\n<p><span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span></p>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\n<p>You can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.</p>\r\n<p>Unzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.</p>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\n<p>Using operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.</p>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\n<p>Suppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like<br />\r\n<code><br />\r\n<span style=\"color: #ff6600;\">class FileBrowserController {<br />\r\n//...............<br />\r\ndef showBrowser = {<br />\r\n//.................<br />\r\nrender( view : \'FileBrowser\')<br />\r\n}<br />\r\n//................<br />\r\n}<br />\r\n</span> </code></p>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\n<p>Here is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :</p>\r\n<p><span style=\"color: #ff6600;\">&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt;File Explorer&lt;/title&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;<br />\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;<br />\r\n&lt;script type=\"text/javascript\"&gt;</span></p>\r\n<p><span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){<br />\r\nalert(\'You selected : \'+file);<br />\r\n}</span></p>\r\n<p><span style=\"color: #ff6600;\"> $(document).ready(function() {<br />\r\n$(\'#file_list\').fileTree({<br />\r\nroot:\'/\',    /*DESCRIPTION 1*/<br />\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/<br />\r\nexpandSpeed: 1000,<br />\r\ncollapseSpeed: 1000,<br />\r\nmultiFolder: false<br />\r\n}, function(file) {<br />\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/<br />\r\n});<br />\r\n});<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;<br />\r\n&lt;%=\"Empty\"%&gt;<br />\r\n&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</span></p>\r\n<ul>\r\n<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:<br />\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<p><code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code></p>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\n<p>It\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\n<p>Here is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.</p>\r\n<p><span style=\"color: #ff6600;\">class FileBrowserController {<br />\r\n//...............<br />\r\ndef showBrowser = {<br />\r\n//.................<br />\r\nrender( view : \'FileBrowser\')<br />\r\n}<br />\r\ndef generateFileList={<br />\r\nString dir = params?.dir<br />\r\nif (dir == null) {<br />\r\nreturn;<br />\r\n}<br />\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */<br />\r\nif(!dir.endsWith(File.separator)){<br />\r\ndir+=File.separator<br />\r\n}</span></p>\r\n<p><span style=\"color: #ff6600;\">File f=new File(dir)<br />\r\nif (f.exists()) {<br />\r\nList&lt;File&gt; files=[]</span></p>\r\n<p><span style=\"color: #ff6600;\">f.eachFile { File file-&gt;<br />\r\nif(!file.hidden)<br />\r\nfiles&lt;&lt;file<br />\r\n}</span></p>\r\n<p><span style=\"color: #ff6600;\">files.sort{File file-&gt;<br />\r\nfile.name.toUpperCase()<br />\r\n}</span></p>\r\n<p><span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')<br />\r\n// All dirs<br />\r\nfiles.each{File file-&gt;<br />\r\nif(file.directory){<br />\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")<br />\r\n}<br />\r\n}<br />\r\n// All files<br />\r\nfiles.each{File file-&gt;<br />\r\nif(file.file){<br />\r\nint dotIndex = file.name.lastIndexOf(\'.\')<br />\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"<br />\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")<br />\r\n}<br />\r\n}<br />\r\noutput.append(\"&lt;/ul&gt;\")<br />\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()<br />\r\nout.write (output.toString().getBytes())<br />\r\nout.flush()<br />\r\nout.close()</span><br />\r\n}<br />\r\n}<br />\r\n//................<br />\r\n} </span></li>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\n<p>Here are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :</p>\r\n<p><span style=\"color: #ff6600;\"> $(document).ready(function() {<br />\r\n$(\'#file_list\').fileTree({<br />\r\nroot:\'/\',<br />\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span><br />\r\nexpandSpeed: 1000,<br />\r\ncollapseSpeed: 1000,<br />\r\n</span></p>\r\n<p>After this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\n<p>To do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.<br />\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :</p>\r\n<p><span style=\"color: #ff6600;\">&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt;File Explorer&lt;/title&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;<br />\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;<br />\r\n&lt;script type=\"text/javascript\"&gt;</span></p>\r\n<p><span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){<br />\r\n//        alert(\'You selected : \'+file);<br />\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file<br />\r\ndocument.getElementById(\'fileBrowserForm\').submit()<br />\r\n</span>}</span></p>\r\n<p><span style=\"color: #ff6600;\">$(document).ready(function() {<br />\r\n$(\'#file_list\').fileTree({<br />\r\nroot:\'/\',    /*DESCRIPTION 1*/<br />\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',<br />\r\nexpandSpeed: 1000,<br />\r\ncollapseSpeed: 1000,<br />\r\nmultiFolder: false<br />\r\n}, function(file) {<br />\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */<br />\r\n});<br />\r\n});<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;<br />\r\n&lt;%=\"Empty\"%&gt;<br />\r\n&lt;/div&gt;<br />\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;<br />\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;<br />\r\n&lt;/g:form&gt;<br />\r\n</span>&lt;/body&gt;<br />\r\n&lt;/html&gt;</span></p>\r\n<p>Now add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :</p>\r\n<p><span style=\"color: #ff6600;\">class FileBrowserController {<br />\r\n//...............<br />\r\n<span style=\"color: #333399;\">def processThisFile={<br />\r\nprintln params.selectedFile<br />\r\nrender(params.selectedFile)<br />\r\n}</span></span></p>\r\n<p><span style=\"color: #ff9900;\">//................<br />\r\n}</span></li>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\n<p>Now we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a></p>\r\n<p>After you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\n<p>create a list in FileBrowser.gsp that will be the markup for your context menu:<br />\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.</p>\r\n<p>Let\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.</p>\r\n<p>Similarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.</p>\r\n<p>You can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.</p>\r\n<p><span style=\"color: #ff6600;\">&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt;File Explorer&lt;/title&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span></p>\r\n<p><span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span></p>\r\n<p><span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;<br />\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span></p>\r\n<p><span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;<br />\r\nfunction HandleFolderContextMenu(action, folderPath){<br />\r\nalert(action+\'nn Folder Path : \'+folderPath);<br />\r\n}<br />\r\nfunction HandleFileContextMenu(action, filePath){<br />\r\nalert(action+\'nn File Path : \'+filePath);<br />\r\n}</span></p>\r\n<p><span style=\"color: #0000ff;\">function showMenu(){<br />\r\n$(\'.directory&gt;a\').contextMenu({<br />\r\nmenu: \'myFolderMenu\'<br />\r\n},<br />\r\nfunction(action, el, pos) {<br />\r\nvar folderPath=$(el).attr(\'rel\');<br />\r\nHandleFolderContextMenu(action, folderPath);<br />\r\n}<br />\r\n);<br />\r\n$(\'.file&gt;a\').contextMenu({<br />\r\nmenu: \'myFileMenu\'<br />\r\n},<br />\r\nfunction(action, el, pos) {<br />\r\nvar filePath=$(el).attr(\'rel\');<br />\r\nHandleFileContextMenu(action, filePath);<br />\r\n}<br />\r\n);<br />\r\n}</span></p>\r\n<p><span style=\"color: #0000ff;\">&lt;/script&gt;</span></p>\r\n<p><span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span></p>\r\n<p><span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){<br />\r\n//        alert(\'You selected : \'+file);<br />\r\ndocument.getElementById(\'selectedFile\').value = file<br />\r\ndocument.getElementById(\'fileBrowserForm\').submit()<br />\r\n}</span></p>\r\n<p><span style=\"color: #ff6600;\">$(document).ready(function() {<br />\r\n$(\'#file_list\').fileTree({<br />\r\nroot:\'/\',    /*DESCRIPTION 1*/<br />\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',<br />\r\nexpandSpeed: 1000,<br />\r\ncollapseSpeed: 1000,<br />\r\nmultiFolder: false<br />\r\n}, function(file) {<br />\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */<br />\r\n});<br />\r\n});<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;<br />\r\n&lt;%=\"Empty\"%&gt;<br />\r\n&lt;/div&gt;<br />\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;<br />\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;<br />\r\n&lt;/g:form&gt;<br />\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;<br />\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;/ul&gt;<br />\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;<br />\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;/ul&gt;<br />\r\n</span>&lt;/body&gt;<br />\r\n&lt;/html&gt;</span></p>\r\n<p>Finally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.</p>\r\n<p><span style=\"color: #ff6600;\"><strong>def generateFileList={<br />\r\n//.......................<br />\r\noutput.append(\"&lt;/ul&gt;\")<br />\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span><br />\r\nOutputStream out = response.getOutputStream()<br />\r\nout.write (output.toString().getBytes())<br />\r\n//.......................<br />\r\n}</strong></span></li>\r\n</ol>\r\n','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-44','','','2009-05-25 16:26:08','2009-05-25 10:56:08','',61,'http://www.intelligrape.com/blog/?p=108',0,'revision','',0),(110,13,'2009-05-25 16:29:05','2009-05-25 10:59:05','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n</tbody></table>\r\n<hr ALIGN=\"TOP\" />\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-46','','','2009-05-25 16:29:05','2009-05-25 10:59:05','',61,'http://www.intelligrape.com/blog/?p=110',0,'revision','',0),(126,13,'2009-05-26 15:53:34','2009-05-26 10:23:34','<table border=\"0\" cellspacing=\"5\">\n<tbody>\n<tr>\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\n\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\n\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\n\nHere is a snapshot of what we are going to achieve in few minutes.</td>\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\n</tr>\n<tr>\n<td colspan=\"2\" align=\"center\"><hr /></td>\n</tr>\n</tbody></table>\n<ol>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\n</li>\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\nTo install jQuery plugin use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\n\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\n</li>\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\n\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\n	<li>\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\n</li>\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\n	<li>\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\n</li>\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\n<code>\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\n//................\n}\n</span> </code>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\nalert(\'You selected : \'+file);\n}</span>\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</span>\n<ul>\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\n</ul>\n</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\n</li>\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\nString dir = params?.dir\nif (dir == null) {\n    return;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\n    dir+=File.separator\n}\n\nFile f=new File(dir)\nif (f.exists()) {\n    List&lt;File&gt; files=[]\n\n    f.eachFile { File file-&gt;\n        if(!file.hidden)\n            files&lt;&lt;file\n    }\n\n    files.sort{File file-&gt; file.name.toUpperCase()}\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n    // All dirs\n    files.each{File file-&gt;\n        if(file.directory){\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n        }\n    }\n    // All files\n    files.each{File file-&gt;\n        if(file.file){\n            int dotIndex = file.name.lastIndexOf(\'.\');\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\n        }\n    }\n    output.append(\"&lt;/ul&gt;\");\n    println output.toString()\n}\n%&gt;\n</code></span></pre>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\ndef generateFileList={\nString dir = params?.dir\nif (dir == null) {\nreturn;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\ndir+=File.separator\n}</span>\n\n<span style=\"color: #ff6600;\">File f=new File(dir)\nif (f.exists()) {\nList&lt;File&gt; files=[]</span>\n\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\nif(!file.hidden)\nfiles&lt;&lt;file\n}</span>\n\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\nfile.name.toUpperCase()\n}</span>\n\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n// All dirs\nfiles.each{File file-&gt;\nif(file.directory){\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\n// All files\nfiles.each{File file-&gt;\nif(file.file){\nint dotIndex = file.name.lastIndexOf(\'.\')\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\nout.flush()\nout.close()</span>\n}\n}\n//................\n} </span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\n</span>\n\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n</span>}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\n<span style=\"color: #333399;\">def processThisFile={\nprintln params.selectedFile\nrender(params.selectedFile)\n}</span></span>\n\n<span style=\"color: #ff9900;\">//................\n}</span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\n\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\n\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\n\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\n\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\nfunction HandleFolderContextMenu(action, folderPath){\nalert(action+\'nn Folder Path : \'+folderPath);\n}\nfunction HandleFileContextMenu(action, filePath){\nalert(action+\'nn File Path : \'+filePath);\n}</span>\n\n<span style=\"color: #0000ff;\">function showMenu(){\n$(\'.directory&gt;a\').contextMenu({\nmenu: \'myFolderMenu\'\n},\nfunction(action, el, pos) {\nvar folderPath=$(el).attr(\'rel\');\nHandleFolderContextMenu(action, folderPath);\n}\n);\n$(\'.file&gt;a\').contextMenu({\nmenu: \'myFileMenu\'\n},\nfunction(action, el, pos) {\nvar filePath=$(el).attr(\'rel\');\nHandleFileContextMenu(action, filePath);\n}\n);\n}</span>\n\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\ndocument.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\nshowMenu();\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\n\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\n//.......................\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\nOutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\n//.......................\n}</strong></span></li>\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-52','','','2009-05-26 15:53:34','2009-05-26 10:23:34','',61,'http://www.intelligrape.com/blog/?p=126',0,'revision','',0),(111,13,'2009-05-25 16:32:06','2009-05-25 11:02:06','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr><td colspan=\"2\" align=\"center\"><hr/></td></tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-47','','','2009-05-25 16:32:06','2009-05-25 11:02:06','',61,'http://www.intelligrape.com/blog/?p=111',0,'revision','',0),(112,13,'2009-05-25 16:32:11','2009-05-25 11:02:11','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr><td colspan=\"2\" align=\"center\"><hr/></td></tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-48','','','2009-05-25 16:32:11','2009-05-25 11:02:11','',61,'http://www.intelligrape.com/blog/?p=112',0,'revision','',0),(113,13,'2009-05-25 16:37:18','2009-05-25 11:07:18','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr><td colspan=\"2\" align=\"center\"><hr/></td></tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-49','','','2009-05-25 16:37:18','2009-05-25 11:07:18','',61,'http://www.intelligrape.com/blog/?p=113',0,'revision','',0),(114,10,'2009-05-25 16:37:26','2009-05-25 11:07:26','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr><td colspan=\"2\" align=\"center\"><hr/></td></tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-50','','','2009-05-25 16:37:26','2009-05-25 11:07:26','',61,'http://www.intelligrape.com/blog/?p=114',0,'revision','',0),(115,13,'2009-05-25 16:49:50','2009-05-25 11:19:50','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minustes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"2\" align=\"center\"><hr /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-51','','','2009-05-25 16:49:50','2009-05-25 11:19:50','',61,'http://www.intelligrape.com/blog/?p=115',0,'revision','',0),(116,6,'2009-05-25 18:56:21','2009-05-25 13:26:21','<strong>What is a command object ?\n</strong>\nCommand object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\n\n<strong>Where to define command object ?</strong>\n\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.</em>\n\n<strong> How to define command object ?\n</strong>\nIn one of my recent  projects I did it like this :\n<pre lang=\"groovy\">public class RegisterUserCommand {\n\n    String username\n    String password\n    String firstName\n    String lastName\n    String email\n    String age\n\n    def static config = ConfigurationHolder.config\n    static constraints={\n        username blank:false,size:30\n        password blank:false\n        cardNo creditCard:true\n        firstName matches/[A-Za-z ]/\n        lastName matches /[A-Aa-z ]/\n        email blank:false,email:true\n        age range:18..60\n    }\n\n}</pre>\n<strong>How to define custom validators ?</strong>\n\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\n        if(!(val==obj.password))\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\n}</pre>\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameter.The latter is returned when we use default validations.\n\n<strong>How to use our command object now ?</strong>\n\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\nThus,you can create or modify your controller action as :\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\n    if(!cmd.hasErrors()) {\n        // your code does something\n    }\n    else{\n            // your code does something\n    }\n}\n\n}</pre>\n<strong>How do I display error messages on my gsp page ?\n</strong>\nTo do so you first need to pass the command object to your gsp page as :\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\nThen on your<em> myErrorPage.gsp </em>you can use <g:renderErrors > tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag :\n<pre lang=\"groovy\">\n<g:hasErrors bean=\"${myCmd?.errors}\">\n          <div class=\"errors\">\n            <g:renderErrors bean=\"${cmd}\"/>\n          </div>\n   </g:hasErrors>\n</pre>\n<strong>But it shows default error messages.How can I define my own error messages ?\n</strong>\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\n<pre lang=\"groovy\">\nfield.blank.message={0} cannot be blank             #my message for blank fields\nfields.does.not.match.message={3} and {4} does not match           # my verifyPassword error message\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\nHere i \'ve created my own  messages.\n\n<strong>I cant follow the parameterized messages..can u please ellaborate.\n</strong>\nThe error message  defined as:\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\n\n[{0}] = property\n[{1}] = class\n[{2}] = value\n[{3}] = constraint\n\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\nIn the above example, for the verifyPassword validator the message can be defined as :\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\nSo in the validator the parameters can be passed as :\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\n\nHope you find this useful.\nImran Mir\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-12','','','2009-05-25 18:56:21','2009-05-25 13:26:21','',49,'http://www.intelligrape.com/blog/?p=116',0,'revision','',0),(117,6,'2009-05-25 18:56:54','2009-05-25 13:26:54','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameter.The latter is returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\nThen on your<em> myErrorPage.gsp </em>you can use <g:renderErrors > tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\nSo in the validator the parameters can be passed as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-13','','','2009-05-25 18:56:54','2009-05-25 13:26:54','',49,'http://www.intelligrape.com/blog/?p=117',0,'revision','',0),(118,6,'2009-05-25 18:57:32','2009-05-25 13:27:32','<strong>What is a command object ?\r\n</strong>\r\nCommand object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller;or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameter.The latter is returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\nThen on your<em> myErrorPage.gsp </em>you can use <g:renderErrors > tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of <g:hasErrors>tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\nSo in the validator the parameters can be passed as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-14','','','2009-05-25 18:57:32','2009-05-25 13:27:32','',49,'http://www.intelligrape.com/blog/?p=118',0,'revision','',0),(119,6,'2009-05-25 19:12:03','2009-05-25 13:42:03','\r\n<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameter.The <em>default error message</em> is returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\nThen on your<em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} does not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I cant follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  defined as:\r\ndefault.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\nIn the above example, for the verifyPassword validator the message can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\nSo in the validator the parameters can be passed as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-15','','','2009-05-25 19:12:03','2009-05-25 13:42:03','',49,'http://www.intelligrape.com/blog/?p=119',0,'revision','',0),(120,6,'2009-05-25 19:28:51','2009-05-25 13:58:51','\r\n<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameter.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n And in your<em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any).But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg.,for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-16','','','2009-05-25 19:28:51','2009-05-25 13:58:51','',49,'http://www.intelligrape.com/blog/?p=120',0,'revision','',0),(123,6,'2009-05-25 19:41:08','2009-05-25 14:11:08','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-19','','','2009-05-25 19:41:08','2009-05-25 14:11:08','',49,'http://www.intelligrape.com/blog/?p=123',0,'revision','',0),(121,6,'2009-05-25 19:34:33','2009-05-25 14:04:33','\r\n<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-17','','','2009-05-25 19:34:33','2009-05-25 14:04:33','',49,'http://www.intelligrape.com/blog/?p=121',0,'revision','',0),(122,6,'2009-05-25 19:35:13','2009-05-25 14:05:13','\r\n<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-18','','','2009-05-25 19:35:13','2009-05-25 14:05:13','',49,'http://www.intelligrape.com/blog/?p=122',0,'revision','',0),(124,6,'2009-05-26 10:04:08','2009-05-26 04:34:08','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-20','','','2009-05-26 10:04:08','2009-05-26 04:34:08','',49,'http://www.intelligrape.com/blog/?p=124',0,'revision','',0),(134,6,'2009-06-02 17:40:55','2009-06-02 12:10:55','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n        static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-23','','','2009-06-02 17:40:55','2009-06-02 12:10:55','',49,'http://www.intelligrape.com/blog/?p=134',0,'revision','',0),(125,13,'2009-05-26 14:05:28','2009-05-26 08:35:28','Follow the steps mentioned below to integrate Apache with Tomcat on an Ubuntu system. The steps assume that Apache and Tomcat are already installed and working fine independently.\r\n<ul>\r\n	<li>Install Apache module for tomcat</li>\r\n</ul>\r\n<blockquote><code>sudo apt-get install libapache2-mod-jk</code></blockquote>\r\n<ul>\r\n	<li>Create a file by the name \"worker.properties\" in /etc/apache2 directory. Sample worker.properties file below</li>\r\n</ul>\r\n<blockquote><code>workers.tomcat_home=/opt/servers/tomcat5.5\r\nworkers.java_home=/opt/java/jdk1.5\r\nps=/\r\nworker.list=worker1\r\nworker.default.port=8009\r\nworker.default.host=localhost\r\nworker.default.type=ajp13\r\nworker.default.lbfactor=1\r\n</code></blockquote>\r\n<ul>\r\n	<li>Add the following line to your site configuration file (/etc/apache2/sites-available/dellServer)</li>\r\n</ul>\r\n<blockquote><code>jkMount /* worker1\r\n</code></blockquote>\r\n<ul>\r\n	<li>Add the following lines to the end of your /etc/apache2/apache2.conf file</li>\r\n</ul>\r\n<blockquote><code>LoadModule jk_module /usr/lib/apache2/modules/mod_jk.so\r\n# Where to find workers.properties\r\nJkWorkersFile /etc/apache2/workers.properties\r\n# Where to put jk logs\r\nJkLogFile /tmp/mod_jk.log\r\n# Set the jk log level [debug/error/info]\r\nJkLogLevel info\r\n# Select the log format\r\nJkLogStampFormat \"[%a %b %d %H:%M:%S %Y] \"\r\n# JkOptions indicate to send SSL KEY SIZE,\r\nJkOptions +ForwardKeySize +ForwardURICompat -ForwardDirectories\r\n# JkRequestLogFormat set the request format\r\nJkRequestLogFormat \"%w %V %T\"\r\n</code></blockquote>','Apache-Tomcat integration on Ubuntu server',0,'','inherit','open','open','','7-autosave','','','2009-05-26 14:05:28','2009-05-26 08:35:28','',7,'http://www.intelligrape.com/blog/?p=125',0,'revision','',0),(128,13,'2009-05-26 15:59:21','2009-05-26 10:29:21','<table border=\"0\" cellspacing=\"5\">\n<tbody>\n<tr>\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\n\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\n\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\n\nHere is a snapshot of what we are going to achieve in few minutes.</td>\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\n</tr>\n<tr>\n<td colspan=\"2\" align=\"center\"><hr /></td>\n</tr>\n</tbody></table>\n<ol>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\n</li>\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\nTo install jQuery plugin use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\n\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\n\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\n</li>\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\n\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\n	<li>\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\n</li>\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\n	<li>\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\n</li>\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\n<code>\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\n//................\n}\n</span> </code>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\nalert(\'You selected : \'+file);\n}</span>\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</span>\n<ul>\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\n</ul>\n</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\n</li>\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\nString dir = params?.dir\nif (dir == null) {\n    return;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\n    dir+=File.separator\n}\n\nFile f=new File(dir)\nif (f.exists()) {\n    List&lt;File&gt; files=[]\n\n    f.eachFile { File file-&gt;\n        if(!file.hidden)\n            files&lt;&lt;file\n    }\n\n    files.sort{File file-&gt; file.name.toUpperCase()}\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n    // All dirs\n    files.each{File file-&gt;\n        if(file.directory){\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n        }\n    }\n    // All files\n    files.each{File file-&gt;\n        if(file.file){\n            int dotIndex = file.name.lastIndexOf(\'.\');\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\n        }\n    }\n    output.append(\"&lt;/ul&gt;\");\n    println output.toString()\n}\n%&gt;\n</code></span></pre>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\ndef showBrowser = {\n//.................\nrender( view : \'FileBrowser\')\n}\ndef generateFileList={\nString dir = params?.dir\nif (dir == null) {\nreturn;\n}\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\nif(!dir.endsWith(File.separator)){\ndir+=File.separator\n}</span>\n\n<span style=\"color: #ff6600;\">File f=new File(dir)\nif (f.exists()) {\nList&lt;File&gt; files=[]</span>\n\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\nif(!file.hidden)\nfiles&lt;&lt;file\n}</span>\n\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\nfile.name.toUpperCase()\n}</span>\n\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\n// All dirs\nfiles.each{File file-&gt;\nif(file.directory){\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\n// All files\nfiles.each{File file-&gt;\nif(file.file){\nint dotIndex = file.name.lastIndexOf(\'.\')\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\n}\n}\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\nout.flush()\nout.close()</span>\n}\n}\n//................\n} </span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\n\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\n</span>\n\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n</span>}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\n\n<span style=\"color: #ff6600;\">class FileBrowserController {\n//...............\n<span style=\"color: #333399;\">def processThisFile={\nprintln params.selectedFile\nrender(params.selectedFile)\n}</span></span>\n\n<span style=\"color: #ff9900;\">//................\n}</span></li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\n\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\n	<li>\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\n\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\n\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\n\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\n\n<span style=\"color: #ff6600;\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File Explorer&lt;/title&gt;\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\n\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\nfunction HandleFolderContextMenu(action, folderPath){\nalert(action+\'nn Folder Path : \'+folderPath);\n}\nfunction HandleFileContextMenu(action, filePath){\nalert(action+\'nn File Path : \'+filePath);\n}</span>\n\n<span style=\"color: #0000ff;\">function showMenu(){\n$(\'.directory&gt;a\').contextMenu({\nmenu: \'myFolderMenu\'\n},\nfunction(action, el, pos) {\nvar folderPath=$(el).attr(\'rel\');\nHandleFolderContextMenu(action, folderPath);\n}\n);\n$(\'.file&gt;a\').contextMenu({\nmenu: \'myFileMenu\'\n},\nfunction(action, el, pos) {\nvar filePath=$(el).attr(\'rel\');\nHandleFileContextMenu(action, filePath);\n}\n);\n}</span>\n\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\n\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\n\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\n//        alert(\'You selected : \'+file);\ndocument.getElementById(\'selectedFile\').value = file\ndocument.getElementById(\'fileBrowserForm\').submit()\n}</span>\n\n<span style=\"color: #ff6600;\">$(document).ready(function() {\n$(\'#file_list\').fileTree({\nroot:\'/\',    /*DESCRIPTION 1*/\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\nexpandSpeed: 1000,\ncollapseSpeed: 1000,\nmultiFolder: false\n}, function(file) {\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\n});\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;h1&gt;File Explorer&lt;/h1&gt;\n&lt;body&gt;\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\n&lt;%=\"Empty\"%&gt;\n&lt;/div&gt;\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\n&lt;/g:form&gt;\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</span>&lt;/body&gt;\n&lt;/html&gt;</span>\n\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\nshowMenu();\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\n\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\n//.......................\noutput.append(\"&lt;/ul&gt;\")\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\nOutputStream out = response.getOutputStream()\nout.write (output.toString().getBytes())\n//.......................\n}</strong></span></li>\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-54','','','2009-05-26 15:59:21','2009-05-26 10:29:21','',61,'http://www.intelligrape.com/blog/?p=128',0,'revision','',0),(127,13,'2009-05-26 15:53:50','2009-05-26 10:23:50','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minutes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"2\" align=\"center\"><hr /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-53','','','2009-05-26 15:53:50','2009-05-26 10:23:50','',61,'http://www.intelligrape.com/blog/?p=127',0,'revision','',0),(129,10,'2010-03-18 12:02:54','2010-03-18 06:32:54','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minutes.</td>\r\n<td style=\"horizontal-align: right; vertical-align: top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"2\" align=\"center\"><hr /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'\\n\\n Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'\\n\\n File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\">// <![CDATA[\r\n showMenu();\r\n// ]]></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>\r\nHope this helps you guys in creating file explorer with context menu.\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-autosave','','','2010-03-18 12:02:54','2010-03-18 06:32:54','',61,'http://www.intelligrape.com/blog/?p=129',0,'revision','',0),(130,6,'2009-05-26 10:04:48','2009-05-26 04:34:48','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-21','','','2009-05-26 10:04:48','2009-05-26 04:34:48','',49,'http://www.intelligrape.com/blog/?p=130',0,'revision','',0),(131,7,'2009-05-29 10:42:52','2009-05-29 05:12:52','<!--  		@page { size: 21cm 29.7cm; margin: 2cm } 		P { margin-bottom: 0.21cm } -->\n\nLets discuss how can we upload a file and store it in a database, along with that how do we render it on the gsp page. I am taking an example to upload and render the image in this blog, though the code would be same for any other file.\n\nSo Lets consider I have a domain class with the name Person\n<pre lang=\"groovy\">class Person {\n    .\n    .\n    .\n    bytes[] picture\n    static constraints = {\n        picture(size:0..5000000)  // to store files upto 5MB approx\n    }\n}</pre>\nOnce we have a field with a byte[] defined in the class then automatically its view is generated with a input tag of file type in html, which returns the MultipartFile object in the controller. MultipartFile provides various useful methods which can be used getBytes(), getSize(), getContentType(), getName() etc.\n\nSo as MultipartFile object returs the byte[] which is to be stored in a picture property of a person class, in the save action of the PersonController Lets see how we do it :\n<pre lang=\"groovy\">person.picture = params.picture\nor\nperson.properties = params\n\n//Now the person object holds the image and lets save it\n\nperson.save()</pre>\nWe are done with file uploading. Now to render the image/file, lets have a separate controller in a controller directory, where we would define the action to generate the image:\n<pre lang=\"groovy\">class ImageController {  def defaultAction =\'show\'\n\ndef show= {\n    //loads the class with a name and assigns obj a new instance created of the same object\n    def obj = Class.forName(\"${params.classname}\",true,Thread.currentThread().contextClassLoader).newInstance();\n    def object = obj.get( params.id )\n    response.setContentType(params.mime)\n    byte[] image = object.\"${params.fieldName}\"\n    response.outputStream &lt;&lt; image\n  }\n}</pre>\nNow where ever we want to display the image, we can just include the following tag:\n<pre lang=\"groovy\"><img src=\"${createLink(controller:\'image\', id:personInstance.id, params:[fieldName:\" alt=\"\" /></pre>\nNote : The above code can be dangerous as a hacker can modify the className and feildName in the query string and get the hidden information.\nHope this helped.\n\n~Amit Jain~\n\namit@intelligrape.com\n\n<a onclick=\"javascript:pageTracker._trackPageview(\'/outbound/article/www.IntelliGrape.com\');\" href=\"http://www.intelligrape.com/\">http://www.IntelliGrape.com/</a>','Grails : Upload and Render File',0,'','inherit','open','open','','42-autosave','','','2009-05-29 10:42:52','2009-05-29 05:12:52','',42,'http://www.intelligrape.com/blog/?p=131',0,'revision','',0),(132,6,'2009-06-15 13:26:03','2009-06-15 07:56:03','<strong>What is a command object ?\n</strong>\nCommand object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\n\n<strong>Where to define command object ?</strong>\n\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\n\n<strong> How to define command object ?\n</strong>\nIn one of my recent  projects I did it like this :\n<pre lang=\"groovy\">public class RegisterUserCommand {\n\n    String username\n    String password\n    String firstName\n    String lastName\n    String email\n    String age\n\n        static constraints={\n        username blank:false,size:30\n        password blank:false\n        cardNo creditCard:true\n        firstName matches/[A-Za-z ]/\n        lastName matches /[A-Aa-z ]/\n        email blank:false,email:true\n        age range:18..60\n    }\n\n}</pre>\n<strong>How to define custom validators ?</strong>\n\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj -&gt;\n        if(!(val==obj.password))\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\n}</pre>\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\n\n<strong>How to use our command object now ?</strong>\n\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\nThus,you can create or modify your controller action as :\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd -&gt;\n    if(!cmd.hasErrors()) {\n        // your code does something\n    }\n    else{\n            // your code does something\n    }\n}\n\n}</pre>\n<strong>How do I display error messages on my gsp page ?\n</strong>\nTo do so you first need to pass the command object to your gsp page as :\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\nThen in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\n<pre lang=\"groovy\">\n<div class=\"errors\"></div></pre>\n<strong>But it shows default error messages.How can I define my own error messages ?\n</strong>\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\n<pre lang=\"groovy\">field.blank.message={0} cannot be blank             #my message for blank fields\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\n</strong>\nThe error message  is defined as:\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\n[{0}] = property\n[{1}] = class\n[{2}] = value\n[{3}] = constraint\n\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\nOr you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\nSo in the validator the parameters and the message are returned as :\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\nHope you find this useful.\nImran Mir\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-autosave','','','2009-06-15 13:26:03','2009-06-15 07:56:03','',49,'http://www.intelligrape.com/blog/?p=132',0,'revision','',0),(139,10,'2009-06-15 13:25:28','2009-06-15 07:55:28','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.\n\nThis class has to be imported by issuing the statement.\n<blockquote>import org.springframework.web.context.request.RequestContextHolder</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>def session = RequestContextHolder.currentRequestAttributes().getSession()</blockquote>\nHope this helps.\n\nS Vivek Krishna\n\nvivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-3','','','2009-06-15 13:25:28','2009-06-15 07:55:28','',136,'http://www.intelligrape.com/blog/?p=139',0,'revision','',0),(133,6,'2009-05-29 10:21:02','2009-05-29 04:51:02','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n    def static config = ConfigurationHolder.config\r\n    static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-22','','','2009-05-29 10:21:02','2009-05-29 04:51:02','',49,'http://www.intelligrape.com/blog/?p=133',0,'revision','',0),(135,6,'2009-06-02 17:42:56','2009-06-02 12:12:56','<strong>What is a command object ?\r\n</strong>\r\n Command object is a non persistent class used for data-validation. The main advantage of using the Command objects is that we can validate those forms that do not map to the domain class.\r\n\r\n<strong>Where to define command object ?</strong>\r\n\r\nYou can define command classes in the <em>grails-app/controllers</em> directory or even in the same file as a controller; or you may also define it in <em>grails-app/src/groovy.</em>\r\n\r\n<strong> How to define command object ?\r\n</strong>\r\nIn one of my recent  projects I did it like this :\r\n<pre lang=\"groovy\">public class RegisterUserCommand {\r\n\r\n    String username\r\n    String password\r\n    String firstName\r\n    String lastName\r\n    String email\r\n    String age\r\n\r\n        static constraints={\r\n        username blank:false,size:30\r\n        password blank:false\r\n        cardNo creditCard:true\r\n        firstName matches/[A-Za-z ]/\r\n        lastName matches /[A-Aa-z ]/\r\n        email blank:false,email:true\r\n        age range:18..60\r\n    }\r\n\r\n}</pre>\r\n<strong>How to define custom validators ?</strong>\r\n\r\nLets us assume we \'ve one more field as<em> verifyPassword </em>and we want to match it to the password field. We \'ll use custom validator as :\r\n<pre lang=\"groovy\">verifyPassword blank:false,validator:{val,obj ->\r\n        if(!(val==obj.password))\r\n        return [\'field.match.message\',\'Cofirm Password \',\'Password\']\r\n}</pre>\r\nNote :Here we \'ve returned our own customized message instead of the default error message, along with the parameters.The <em>default error message</em> is implicitly returned when we use default validations.\r\n\r\n<strong>How to use our command object now ?</strong>\r\n\r\nWhen a request comes in, Grails will automatically create a new instance of the command object, bind the incoming request parameters to the properties of the instance, and pass it to you as the argument.\r\nThus,you can create or modify your controller action as :\r\n<pre lang=\"groovy\">def registerUser = { RegisterUserCommand cmd ->\r\n    if(!cmd.hasErrors()) {\r\n        // your code does something\r\n    }\r\n    else{\r\n            // your code does something\r\n    }\r\n}\r\n\r\n}</pre>\r\n<strong>How do I display error messages on my gsp page ?\r\n</strong>\r\nTo do so you first need to pass the command object to your gsp page as :\r\n<pre lang=\"groovy\">     render (view:\'myErrorPage\', model:[myCmd:cmd])</pre>\r\n Then in the <em> myErrorPage.gsp </em>you can use g:renderErrors  tag to display the errors(if any). But before displaying errors u need to make sure there are errors by  making use of g:hasErrors tag :\r\n<pre lang=\"groovy\">\r\n<g:hasErrors bean=\"${myCmd?.errors}\">\r\n          <div class=\"errors\">\r\n            <g:renderErrors bean=\"${cmd}\"/>\r\n          </div>\r\n   </g:hasErrors>\r\n</pre>\r\n<strong>But it shows default error messages.How can I define my own error messages ?\r\n</strong>\r\nTo do so you need to modify the<em> /grails-app/i18n/message.properties_</em> file by creating your own messages or replacing the default messages by custom messages :\r\n<pre lang=\"groovy\">\r\nfield.blank.message={0} cannot be blank             #my message for blank fields\r\nfields.does.not.match.message={3} and {4} do not match           # my verifyPassword error message\r\nfield.number.notallowed.message={3} must have alphabets only           # u can guess this</pre>\r\n\r\n<strong>I can\'t follow the parameterized messages..can u please ellaborate.\r\n</strong>\r\nThe error message  is defined as:\r\n<pre lang=\"groovy\">default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]</pre>\r\n\r\n[{0}] = property\r\n[{1}] = class\r\n[{2}] = value\r\n[{3}] = constraint\r\n\r\nThe above example is a default message provided in the message.properties  file.One can easily modify the message to suit to the requirement.\r\n Or you choose to define your own message.eg., for the example given in the begining , the error message for the <em>verifyPassword</em> validator can be defined as :\r\n<pre lang=\"groovy\">fields.does.not.match.message={3} and {4} does not match</pre>\r\n So in the validator the parameters and the message are returned as :\r\n<pre lang=\"groovy\">return [\'field.match.message\',\'Cofirm Password \',\'Password\']</pre>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Command Objects',0,'','inherit','open','open','','49-revision-24','','','2009-06-02 17:42:56','2009-06-02 12:12:56','',49,'http://www.intelligrape.com/blog/?p=135',0,'revision','',0),(136,10,'2009-07-16 19:23:30','2009-07-16 13:53:30','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nThe session attributes can now be accessed as\r\n<blockquote>\r\n<pre lang=\"groovy\">session.attribute</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','publish','open','open','','accessing-session-map-in-the-domain-or-service-layer','','','2009-07-17 11:49:19','2009-07-17 06:19:19','',0,'http://www.intelligrape.com/blog/?p=136',0,'post','',3),(137,10,'2009-06-15 13:19:35','2009-06-15 07:49:35','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.\n\nThis class has to be imported by issuing the statement.\n<blockquote>import org.springframework.web.context.request.RequestContextHolder</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as\n<blockquote>def session = RequestContextHolder.currentRequestAttributes().getSession()</blockquote>','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision','','','2009-06-15 13:19:35','2009-06-15 07:49:35','',136,'http://www.intelligrape.com/blog/?p=137',0,'revision','',0),(138,10,'2009-06-15 13:24:28','2009-06-15 07:54:28','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.\n\nThis class has to be imported by issuing the statement.\n<blockquote>import org.springframework.web.context.request.RequestContextHolder</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>def session = RequestContextHolder.currentRequestAttributes().getSession()</blockquote>\nHope this helps','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-2','','','2009-06-15 13:24:28','2009-06-15 07:54:28','',136,'http://www.intelligrape.com/blog/?p=138',0,'revision','',0),(140,10,'2009-06-15 13:26:44','2009-06-15 07:56:44','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.\r\n\r\nThis class has to be imported by issuing the statement.\r\n<blockquote><pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre></blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote><pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre></blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-4','','','2009-06-15 13:26:44','2009-06-15 07:56:44','',136,'http://www.intelligrape.com/blog/?p=140',0,'revision','',0),(141,10,'2009-06-15 13:28:17','2009-06-15 07:58:17','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class has to be imported by issuing the statement.\n<blockquote>\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\n</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\n</blockquote>\nHope this helps.  S Vivek Krishna  vivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-5','','','2009-06-15 13:28:17','2009-06-15 07:58:17','',136,'http://www.intelligrape.com/blog/?p=141',0,'revision','',0),(143,10,'2009-06-15 13:30:37','2009-06-15 08:00:37','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class has to be imported by issuing the statement.\n<blockquote>\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\n</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\n</blockquote>\nHope this helps.\n\nS Vivek Krishna\n\nvivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-7','','','2009-06-15 13:30:37','2009-06-15 08:00:37','',136,'http://www.intelligrape.com/blog/?p=143',0,'revision','',0),(142,10,'2009-06-15 13:29:08','2009-06-15 07:59:08','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class has to be imported by issuing the statement.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nHope this helps.  S Vivek Krishna  vivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-6','','','2009-06-15 13:29:08','2009-06-15 07:59:08','',136,'http://www.intelligrape.com/blog/?p=142',0,'revision','',0),(144,11,'2009-06-15 13:34:44','2009-06-15 08:04:44','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class has to be imported by issuing the statement.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-8','','','2009-06-15 13:34:44','2009-06-15 08:04:44','',136,'http://www.intelligrape.com/blog/?p=144',0,'revision','',0),(145,10,'2009-06-16 12:25:51','2009-06-16 06:55:51','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class has to be imported by issuing the statement.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@intelligrape.com','Accessing Session Map in a Domain Method',0,'','inherit','open','open','','136-revision-9','','','2009-06-16 12:25:51','2009-06-16 06:55:51','',136,'http://www.intelligrape.com/blog/?p=145',0,'revision','',0),(146,10,'2009-06-18 11:21:26','2009-06-18 05:51:26','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\n<blockquote>\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder\nimport javax.servlet.http.HttpSession</pre>\n</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\n</blockquote>\nHope this helps.\n\nS Vivek Krishna\n\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-10','','','2009-06-18 11:21:26','2009-06-18 05:51:26','',136,'http://www.intelligrape.com/blog/?p=146',0,'revision','',0),(147,10,'2009-06-18 11:22:05','2009-06-18 05:52:05','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder\r\nimport javax.servlet.http.HttpSession</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-11','','','2009-06-18 11:22:05','2009-06-18 05:52:05','',136,'http://www.intelligrape.com/blog/?p=147',0,'revision','',0),(148,10,'2009-06-18 11:22:09','2009-06-18 05:52:09','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder\r\nimport javax.servlet.http.HttpSession</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-12','','','2009-06-18 11:22:09','2009-06-18 05:52:09','',136,'http://www.intelligrape.com/blog/?p=148',0,'revision','',0),(149,10,'2009-06-18 11:22:55','2009-06-18 05:52:55','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder\r\nimport javax.servlet.http.HttpSession</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-13','','','2009-06-18 11:22:55','2009-06-18 05:52:55','',136,'http://www.intelligrape.com/blog/?p=149',0,'revision','',0),(150,11,'2009-07-13 10:34:42','2009-07-13 05:04:42','In this post i will try to explain how to dump a mysql database so that it can be migrated with same state.In my project i face this situation every week and thanks to dumpfiles that they save lot of time and make the process whole lot easier.\n\n<strong>What is a dumpfile ? </strong>\n\nA dumpfile is a sql script which contains the step by step instruction to generate a database. It contains the steps to create the table structure and also populates the tables with the original values. By steps i mean the plain simple sql queries.\n\nThe Mysql command used to  dump a database is below:\n<pre lang=\"groovy\">gaurav@gaurav:~$ mysqldump -u root -p   &gt;</pre>\ne.g. Suppose we have a database named <strong>james</strong> and we want to take it\'s dump.\n<pre lang=\"groovy\">gaurav@gaurav:~$ mysqldump -u root -p james &gt; ~/Desktop/jamesDump.sql\nEnter Password: ******</pre>\nNow we are back to prompt. We can check the dumpfile by going to the location where it was saved. In the<a href=\"http://www.intelligrape.com/blog/?p=46\"> next</a> post I will describe how to use a dumpfile to create a new database.\n\nHope it helps.\n\nGaurav Chauhan\ngaurav@intelligrape.com\n\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Dumping a Mysql Database',0,'','inherit','open','open','','45-autosave','','','2009-07-13 10:34:42','2009-07-13 05:04:42','',45,'http://www.intelligrape.com/blog/?p=150',0,'revision','',0),(151,10,'2009-07-16 19:20:57','2009-07-16 13:50:57','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\n<blockquote>\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\n</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\n</blockquote>\nThe session attributes can now be accessed as\n<blockquote>\n<pre lang=\"groovy\">session.&lt;attribute&gt;</pre>\n</blockquote>\nHope this helps.\n\nS Vivek Krishna\n\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-14','','','2009-07-16 19:20:57','2009-07-16 13:50:57','',136,'http://www.intelligrape.com/blog/?p=151',0,'revision','',0),(152,10,'2009-07-16 19:21:40','2009-07-16 13:51:40','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nThe session attributes can now be accessed as\r\n<blockquote>\r\n<pre lang=\"groovy\">session.&lt;attribute&gt;</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-15','','','2009-07-16 19:21:40','2009-07-16 13:51:40','',136,'http://www.intelligrape.com/blog/?p=152',0,'revision','',0),(153,10,'2009-07-16 19:21:49','2009-07-16 13:51:49','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nThe session attributes can now be accessed as\r\n<blockquote>\r\n<pre lang=\"groovy\">session.&lt;attribute&gt;</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-16','','','2009-07-16 19:21:49','2009-07-16 13:51:49','',136,'http://www.intelligrape.com/blog/?p=153',0,'revision','',0),(154,10,'2009-07-16 19:22:11','2009-07-16 13:52:11','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nThe session attributes can now be accessed as\r\n<blockquote>\r\n<pre lang=\"groovy\">session.attribute</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-17','','','2009-07-16 19:22:11','2009-07-16 13:52:11','',136,'http://www.intelligrape.com/blog/?p=154',0,'revision','',0),(155,10,'2009-07-16 19:22:21','2009-07-16 13:52:21','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nThe session attributes can now be accessed as\r\n<blockquote>\r\n<pre lang=\"groovy\">session.attribute</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-18','','','2009-07-16 19:22:21','2009-07-16 13:52:21','',136,'http://www.intelligrape.com/blog/?p=155',0,'revision','',0),(156,10,'2009-07-16 19:23:30','2009-07-16 13:53:30','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\r\n</blockquote>\r\nNow, the session variable can be defined in the Service class or Domain method as:\r\n<blockquote>\r\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\r\n</blockquote>\r\nThe session attributes can now be accessed as\r\n<blockquote>\r\n<pre lang=\"groovy\">session.attribute</pre>\r\n</blockquote>\r\nHope this helps.\r\n\r\nS Vivek Krishna\r\n\r\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-revision-19','','','2009-07-16 19:23:30','2009-07-16 13:53:30','',136,'http://www.intelligrape.com/blog/?p=156',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (181,7,'2009-08-18 11:27:31','2009-08-18 05:57:31','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client came up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\\\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html. for example, to play youtube video on our webpage along with other content, we just need to copy the embed or object tag from youtube to our tinymce and call replaceHtmlTags function we just saw on that text and the video would be up and running. \r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Render html code written in tinymce',0,'Write and render your html code written in tinymce. It allows user to used any html tags like we can copy embed tag from youtube and paste in our tinymce. and that video can be visible on our webpage along with the text entered in tinymce.  ','publish','open','open','','alfresco-render-html-code-written-in-tinymce','','','2009-08-18 11:28:26','2009-08-18 05:58:26','',0,'http://www.intelligrape.com/blog/?p=181',0,'post','',0),(162,7,'2009-08-07 12:43:20','2009-08-07 07:13:20','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\n    String title\r\n    String description\r\n    String link\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               //As blogs requested from wordpress may have draft posts, so we requested twice the number of blogs needed as this request to wordpress plugin is expensive.\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\\\&lt;.*?\\\\\">\\\\&lt;.*?\\\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.link = post.permaLink\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   //makes the recursive call\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n            return excerptPosts\r\n       }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','publish','open','open','','wordpress-plugin-workaround-to-get-excerpt-of-recent-posts-only-published-messages','','','2009-08-21 12:36:59','2009-08-21 07:06:59','',0,'http://www.intelligrape.com/blog/?p=162',0,'post','',5),(163,7,'2009-08-07 12:34:36','2009-08-07 07:04:36','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\n<pre class=\"”groovy”\">//create a class blog</pre>\npublic class Blog{\nString title\nString description\nString postId\n}\n\n \n\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\n     * @param count : number of recent blogs needed.\n     * @param textSize : number of charaters to be displayed in a description\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\n     * @return List : Returns list of blog objects.\n     */\n\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\n\n         List excerptPosts = []\n         Blog blog\n         int postsAdded=0\n          try {\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\n                    println \"recent post service being iterated\"\n                   if(postsAdded &lt; count){\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\n                            blog = new Blog()\n                            blog.title = post.title\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\n                            blog.postId = post.postId\n                            excerptPosts &lt;&lt; blog\n                            postsAdded++\n                       }\n                   }\n               }\n               if(postsAdded&lt;count){\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\n               }\n            } catch (Exception e) {\n                log.error \"Error rendering the wordpress recentPosts tag\", e\n            }\n                  return excerptPosts\n         }\n\n&lt;/pre&gt;\n\nCheers,\n~~Amit Jain~~\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision','','','2009-08-07 12:34:36','2009-08-07 07:04:36','',162,'http://www.intelligrape.com/blog/?p=163',0,'revision','',0),(164,7,'2009-08-07 12:34:36','2009-08-07 07:04:36','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n \r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-2','','','2009-08-07 12:34:36','2009-08-07 07:04:36','',162,'http://www.intelligrape.com/blog/?p=164',0,'revision','',0),(171,7,'2009-08-07 12:43:51','2009-08-07 07:13:51','The Session Map is available in Grails in the Views, TagLibs and the Controllers. That is, it can be directly accessed by the name \"session\". If the Session Map is required to be accessed in the Service Layer or the Domain layer, such a straightforward approach will not work. In this case, a class which is a part of the Spring Framework can be used which gives the current context, the request attributes and the session.  This class along with HttpSession have to be imported by issuing the following statements.\n<blockquote>\n<pre lang=\"groovy\">import org.springframework.web.context.request.RequestContextHolder</pre>\n</blockquote>\nNow, the session variable can be defined in the Service class or Domain method as:\n<blockquote>\n<pre lang=\"groovy\">def session = RequestContextHolder.currentRequestAttributes().getSession()</pre>\n</blockquote>\nThe session attributes can now be accessed as\n<blockquote>\n<pre lang=\"groovy\">session.attribute</pre>\n</blockquote>\nHope this helps.\n\nS Vivek Krishna\n\nvivek@IntelliGrape.com','Accessing Session Map in the Domain or Service Layer',0,'','inherit','open','open','','136-autosave','','','2009-08-07 12:43:51','2009-08-07 07:13:51','',136,'http://www.intelligrape.com/blog/?p=171',0,'revision','',0),(165,7,'2009-08-07 12:35:39','2009-08-07 07:05:39','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">&lt;pre class=\"groovy\"&gt;</pre>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-3','','','2009-08-07 12:35:39','2009-08-07 07:05:39','',162,'http://www.intelligrape.com/blog/?p=165',0,'revision','',0),(166,7,'2009-08-07 12:35:40','2009-08-07 07:05:40','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">&lt;pre class=\"groovy\"&gt;</pre>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-4','','','2009-08-07 12:35:40','2009-08-07 07:05:40','',162,'http://www.intelligrape.com/blog/?p=166',0,'revision','',0),(167,7,'2009-08-07 12:37:41','2009-08-07 07:07:41','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">&lt;pre class=\"groovy\"&gt;</pre>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-5','','','2009-08-07 12:37:41','2009-08-07 07:07:41','',162,'http://www.intelligrape.com/blog/?p=167',0,'revision','',0),(168,7,'2009-08-07 12:37:43','2009-08-07 07:07:43','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">&lt;pre class=\"groovy\"&gt;</pre>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-6','','','2009-08-07 12:37:43','2009-08-07 07:07:43','',162,'http://www.intelligrape.com/blog/?p=168',0,'revision','',0),(169,7,'2009-08-07 12:38:21','2009-08-07 07:08:21','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">&lt;pre class=\"groovy\"&gt;</pre>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-7','','','2009-08-07 12:38:21','2009-08-07 07:08:21','',162,'http://www.intelligrape.com/blog/?p=169',0,'revision','',0),(170,7,'2009-08-07 12:38:24','2009-08-07 07:08:24','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<pre class=\"”groovy”\">&lt;pre class=\"groovy\"&gt;</pre>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n\r\n&lt;/pre&gt;\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-8','','','2009-08-07 12:38:24','2009-08-07 07:08:24','',162,'http://www.intelligrape.com/blog/?p=170',0,'revision','',0),(172,7,'2009-08-07 12:41:10','2009-08-07 07:11:10','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }</blockquote>\r\n \r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-9','','','2009-08-07 12:41:10','2009-08-07 07:11:10','',162,'http://www.intelligrape.com/blog/?p=172',0,'revision','',0),(173,7,'2009-08-07 13:45:33','2009-08-07 08:15:33','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\n<blockquote>\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"”groovy”\">//create a class blog\npublic class Blog{\nString title\nString description\nString postId\n}\n\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\n     * @param count : number of recent blogs needed.\n     * @param textSize : number of charaters to be displayed in a description\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\n     * @return List : Returns list of blog objects.\n     */\n\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\n\n         List excerptPosts = []\n         Blog blog\n         int postsAdded=0\n          try {\n               //As blogs requested from wordpress may have draft posts, so we requested twice the number of blogs needed as this request to wordpress plugin is expensive.\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\n                   if(postsAdded &lt; count){\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\n                            blog = new Blog()\n                            blog.title = post.title\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\\\&lt;.*?\\\\\">\\\\&lt;.*?\\\\</a>&gt;\",\"\") //removes html code from description\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\n                            blog.postId = post.postId\n                            excerptPosts &lt;&lt; blog\n                            postsAdded++\n                       }\n                   }\n               }\n               if(postsAdded&lt;count){\n                   //makes the recursive call\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\n               }\n            } catch (Exception e) {\n                log.error \"Error rendering the wordpress recentPosts tag\", e\n            }\n            return excerptPosts\n       }\n </pre>\n</div>\n</div>\n</blockquote>\n\nCheers,\n~~Amit Jain~~\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-autosave','','','2009-08-07 13:45:33','2009-08-07 08:15:33','',162,'http://www.intelligrape.com/blog/?p=173',0,'revision','',0),(176,7,'2009-08-07 12:55:05','2009-08-07 07:25:05','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-12','','','2009-08-07 12:55:05','2009-08-07 07:25:05','',162,'http://www.intelligrape.com/blog/?p=176',0,'revision','',0),(175,7,'2009-08-07 12:51:18','2009-08-07 07:21:18','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }</blockquote>\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-11','','','2009-08-07 12:51:18','2009-08-07 07:21:18','',162,'http://www.intelligrape.com/blog/?p=175',0,'revision','',0),(174,7,'2009-08-07 12:43:20','2009-08-07 07:13:20','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<pre class=\"”groovy”\">//create a class blog</pre>\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                    println \"recent post service being iterated\"\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }</blockquote>\r\n \r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-10','','','2009-08-07 12:43:20','2009-08-07 07:13:20','',162,'http://www.intelligrape.com/blog/?p=174',0,'revision','',0),(177,7,'2009-08-07 12:57:44','2009-08-07 07:27:44','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n                  return excerptPosts\r\n         }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-13','','','2009-08-07 12:57:44','2009-08-07 07:27:44','',162,'http://www.intelligrape.com/blog/?p=177',0,'revision','',0),(178,7,'2009-08-07 12:59:02','2009-08-07 07:29:02','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n            return excerptPosts\r\n       }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-14','','','2009-08-07 12:59:02','2009-08-07 07:29:02','',162,'http://www.intelligrape.com/blog/?p=178',0,'revision','',0),(179,7,'2009-08-07 13:39:58','2009-08-07 08:09:58','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               //As blogs requested from wordpress may have draft messages, we requested twice the number of blogs needed as this request wordpress plugin is expensive.\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n            return excerptPosts\r\n       }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-15','','','2009-08-07 13:39:58','2009-08-07 08:09:58','',162,'http://www.intelligrape.com/blog/?p=179',0,'revision','',0),(180,7,'2009-08-07 13:45:28','2009-08-07 08:15:28','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               //As blogs requested from wordpress may have draft posts, so we requested twice the number of blogs needed as this request to wordpress plugin is expensive.\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   //makes the recursive call\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n            return excerptPosts\r\n       }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-16','','','2009-08-07 13:45:28','2009-08-07 08:15:28','',162,'http://www.intelligrape.com/blog/?p=180',0,'revision','',0),(182,7,'2009-08-18 10:53:16','2009-08-18 05:23:16','Hi,\n\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\n\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\n<blockquote>import java.util.regex.Pattern\nimport java.util.regex.Matcher\nString sampleText = new String(\'\'\'###&lt;embed height=\"545\" width=\"510\" flashvars=\"sessid=BAhDOh9BY3RpdmVTdXBwb3J0OjpPcmRlcmVkSGFzaFsHWwciCmZsYXNoSUM6%250AJ0FjdGlvbkNvbnRyb2xsZXI6OkZsYXNoOjpGbGFzaEhhc2h7AAY6CkB1c2Vk%250AewBbBzoNbGFuZ3VhZ2UiByoq--3e004f671fba3a1e22bf10fceb818ed2aa1a4ff1&amp;amp;pvt=0&amp;amp;doc=grailscheatsheetdraft-1233296292537789-3&amp;amp;version_no=1233296316&amp;amp;presentationId=970124&amp;amp;totalSlides=5&amp;amp;startSlide=1&amp;amp;inContest=0&amp;amp;preview=no&amp;amp;stitle=grails-cheat-sheet-draft-presentation&amp;amp;userName=hominhchuc&amp;amp;has_form=null&amp;amp;form_after_slide_number=null&amp;amp;form_is_blocking=false&amp;amp;hostedIn=slideshare&amp;amp;useHttp=1\" allowfullscreen=\"true\" allowscriptaccess=\"always\" quality=\"high\" bgcolor=\"#FFFFFF\" name=\"player\" id=\"player\" style=\"\" src=\"<a href=\"http://static.slidesharecdn.com/swf/doc_player.swf\">http://static.slidesharecdn.com/swf/doc_player.swf</a>\" type=\"application/x-shockwave-flash\"/&gt;###\'\'\')\n\nreplaceHtmlTags(sampleText)</blockquote>\n<blockquote>def replaceHtmlTags(def text){\ntry{\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\');\n   Matcher matcher\n   def tagStr,updatedTagStr\n   matcher = pattern.matcher(text);\n   int count=1\n   while (matcher.find()) {\n       tagStr = matcher.group()\n       updatedTagStr = new String(tagStr)   \n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\n       text = text.replace(tagStr, updatedTagStr)   \n   }\n}catch(Exception e){\n    println \"Exception caused \" + e.message\n}\n   return text\n}</blockquote>\nWith this code in place, we can render any valid html code written in tinymce. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\n\nHope this helped.\n\nCheers!\n\n~~Amit Jain~~\n\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision','','','2009-08-18 10:53:16','2009-08-18 05:23:16','',181,'http://www.intelligrape.com/blog/?p=182',0,'revision','',0),(185,7,'2009-08-18 10:58:56','2009-08-18 05:28:56','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\r\n<blockquote><code>import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nreplaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\');\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</code></blockquote>\r\nWith this code in place, we can render any valid html code written in tinymce. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\n\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-4','','','2009-08-18 10:58:56','2009-08-18 05:28:56','',181,'http://www.intelligrape.com/blog/?p=185',0,'revision','',0),(183,7,'2009-08-18 10:53:35','2009-08-18 05:23:35','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\r\n<blockquote>import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&lt;embed height=\"545\" width=\"510\" flashvars=\"sessid=BAhDOh9BY3RpdmVTdXBwb3J0OjpPcmRlcmVkSGFzaFsHWwciCmZsYXNoSUM6%250AJ0FjdGlvbkNvbnRyb2xsZXI6OkZsYXNoOjpGbGFzaEhhc2h7AAY6CkB1c2Vk%250AewBbBzoNbGFuZ3VhZ2UiByoq--3e004f671fba3a1e22bf10fceb818ed2aa1a4ff1&amp;amp;pvt=0&amp;amp;doc=grailscheatsheetdraft-1233296292537789-3&amp;amp;version_no=1233296316&amp;amp;presentationId=970124&amp;amp;totalSlides=5&amp;amp;startSlide=1&amp;amp;inContest=0&amp;amp;preview=no&amp;amp;stitle=grails-cheat-sheet-draft-presentation&amp;amp;userName=hominhchuc&amp;amp;has_form=null&amp;amp;form_after_slide_number=null&amp;amp;form_is_blocking=false&amp;amp;hostedIn=slideshare&amp;amp;useHttp=1\" allowfullscreen=\"true\" allowscriptaccess=\"always\" quality=\"high\" bgcolor=\"#FFFFFF\" name=\"player\" id=\"player\" style=\"\" src=\"<a href=\"http://static.slidesharecdn.com/swf/doc_player.swf\">http://static.slidesharecdn.com/swf/doc_player.swf</a>\" type=\"application/x-shockwave-flash\"/&gt;###\'\'\')\r\n\r\nreplaceHtmlTags(sampleText)</blockquote>\r\n<blockquote>def replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\');\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</blockquote>\r\nWith this code in place, we can render any valid html code written in tinymce. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\n\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-2','','','2009-08-18 10:53:35','2009-08-18 05:23:35','',181,'http://www.intelligrape.com/blog/?p=183',0,'revision','',0),(184,7,'2009-08-18 10:53:56','2009-08-18 05:23:56','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\r\n<blockquote>import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&lt;embed height=\"545\" width=\"510\" flashvars=\"sessid=BAhDOh9BY3RpdmVTdXBwb3J0OjpPcmRlcmVkSGFzaFsHWwciCmZsYXNoSUM6%250AJ0FjdGlvbkNvbnRyb2xsZXI6OkZsYXNoOjpGbGFzaEhhc2h7AAY6CkB1c2Vk%250AewBbBzoNbGFuZ3VhZ2UiByoq--3e004f671fba3a1e22bf10fceb818ed2aa1a4ff1&amp;amp;pvt=0&amp;amp;doc=grailscheatsheetdraft-1233296292537789-3&amp;amp;version_no=1233296316&amp;amp;presentationId=970124&amp;amp;totalSlides=5&amp;amp;startSlide=1&amp;amp;inContest=0&amp;amp;preview=no&amp;amp;stitle=grails-cheat-sheet-draft-presentation&amp;amp;userName=hominhchuc&amp;amp;has_form=null&amp;amp;form_after_slide_number=null&amp;amp;form_is_blocking=false&amp;amp;hostedIn=slideshare&amp;amp;useHttp=1\" allowfullscreen=\"true\" allowscriptaccess=\"always\" quality=\"high\" bgcolor=\"#FFFFFF\" name=\"player\" id=\"player\" style=\"\" src=\"<a href=\"http://static.slidesharecdn.com/swf/doc_player.swf\">http://static.slidesharecdn.com/swf/doc_player.swf</a>\" type=\"application/x-shockwave-flash\"/&gt;###\'\'\')\r\n\r\nreplaceHtmlTags(sampleText)</blockquote>\r\n<blockquote>def replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\');\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</blockquote>\r\nWith this code in place, we can render any valid html code written in tinymce. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\n\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-3','','','2009-08-18 10:53:56','2009-08-18 05:23:56','',181,'http://www.intelligrape.com/blog/?p=184',0,'revision','',0),(186,7,'2009-08-18 10:59:47','2009-08-18 05:29:47','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\r\n<blockquote><pre class=\"groovy\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nreplaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\');\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></blockquote>\r\nWith this code in place, we can render any valid html code written in tinymce. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\n\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-5','','','2009-08-18 10:59:47','2009-08-18 05:29:47','',181,'http://www.intelligrape.com/blog/?p=186',0,'revision','',0),(187,7,'2009-08-18 11:07:29','2009-08-18 05:37:29','Hi,\n\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\n\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\n<blockquote><div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"”groovy”\">import java.util.regex.Pattern\nimport java.util.regex.Matcher\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\n\nreplaceHtmlTags(sampleText)\n\ndef replaceHtmlTags(def text){\ntry{\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\n   Matcher matcher\n   def tagStr,updatedTagStr\n   matcher = pattern.matcher(text);\n   int count=1\n   while (matcher.find()) {\n       tagStr = matcher.group()\n       updatedTagStr = new String(tagStr)   \n       //replace \n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\n       text = text.replace(tagStr, updatedTagStr)   \n   }\n}catch(Exception e){\n    println \"Exception caused \" + e.message\n}\n   return text\n}</pre></div></div></blockquote>\nWith this code in place anything wrapped up with \"###\" in tinymce would be rendered as HTML tags. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\n\nHope this helped.\n\nCheers!\n~~Amit Jain~~\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-6','','','2009-08-18 11:07:29','2009-08-18 05:37:29','',181,'http://www.intelligrape.com/blog/?p=187',0,'revision','',0),(188,7,'2009-08-18 11:10:29','2009-08-18 05:40:29','Hi,\n\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\n\nSo we decided to render html given in tinymce ourselves, after loading the domain object. Sample code is given below :\n<blockquote><div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"”groovy”\">import java.util.regex.Pattern\nimport java.util.regex.Matcher\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\n\nreplaceHtmlTags(sampleText)\n\ndef replaceHtmlTags(def text){\ntry{\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\n   Matcher matcher\n   def tagStr,updatedTagStr\n   matcher = pattern.matcher(text);\n   int count=1\n   while (matcher.find()) {\n       tagStr = matcher.group()\n       updatedTagStr = new String(tagStr)   \n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\n       text = text.replace(tagStr, updatedTagStr)   \n   }\n}catch(Exception e){\n    println \"Exception caused \" + e.message\n}\n   return text\n}</pre></div></div></blockquote>\nWith this code in place anything wrapped up with \"###\" in tinymce would be rendered as HTML tags. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\n\nHope this helped.\n\nCheers!\n~~Amit Jain~~\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-7','','','2009-08-18 11:10:29','2009-08-18 05:40:29','',181,'http://www.intelligrape.com/blog/?p=188',0,'revision','',0),(189,7,'2009-08-18 11:13:58','2009-08-18 05:43:58','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-8','','','2009-08-18 11:13:58','2009-08-18 05:43:58','',181,'http://www.intelligrape.com/blog/?p=189',0,'revision','',0),(190,7,'2009-08-18 11:14:08','2009-08-18 05:44:08','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-9','','','2009-08-18 11:14:08','2009-08-18 05:44:08','',181,'http://www.intelligrape.com/blog/?p=190',0,'revision','',0),(191,7,'2009-08-18 11:14:11','2009-08-18 05:44:11','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Write html in tinymce',0,'','inherit','open','open','','181-revision-10','','','2009-08-18 11:14:11','2009-08-18 05:44:11','',181,'http://www.intelligrape.com/blog/?p=191',0,'revision','',0),(192,7,'2009-08-18 11:21:42','2009-08-18 05:51:42','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Render html code written in tinymce',0,'Write and render your html code written in tinymce. It allows user to used any html tags like we can copy embed tag from youtube and paste in our tinymce. and that video can be visible on our webpage along with the text entered in tinymce.  ','inherit','open','open','','181-revision-11','','','2009-08-18 11:21:42','2009-08-18 05:51:42','',181,'http://www.intelligrape.com/blog/?p=192',0,'revision','',0),(193,7,'2009-08-18 11:23:20','2009-08-18 05:53:20','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html. We just need to copy the embed or object from say youtube to our tinymce and the video can be played on our webpage along with the text written in tinymce. \r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Render html code written in tinymce',0,'Write and render your html code written in tinymce. It allows user to used any html tags like we can copy embed tag from youtube and paste in our tinymce. and that video can be visible on our webpage along with the text entered in tinymce.  ','inherit','open','open','','181-revision-12','','','2009-08-18 11:23:20','2009-08-18 05:53:20','',181,'http://www.intelligrape.com/blog/?p=193',0,'revision','',0),(194,7,'2009-08-18 11:25:44','2009-08-18 05:55:44','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html. for example, to play youtube video on our webpage along with other content, we just need to copy the embed or object from youtube to our tinymce and call replaceHtmlTags function we just saw and the video would be up and running. \r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Render html code written in tinymce',0,'Write and render your html code written in tinymce. It allows user to used any html tags like we can copy embed tag from youtube and paste in our tinymce. and that video can be visible on our webpage along with the text entered in tinymce.  ','inherit','open','open','','181-revision-13','','','2009-08-18 11:25:44','2009-08-18 05:55:44','',181,'http://www.intelligrape.com/blog/?p=194',0,'revision','',0),(195,7,'2009-08-18 11:27:19','2009-08-18 05:57:19','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html. for example, to play youtube video on our webpage along with other content, we just need to copy the embed or object tag from youtube to our tinymce and call replaceHtmlTags function we just saw on that text and the video would be up and running. \r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Render html code written in tinymce',0,'Write and render your html code written in tinymce. It allows user to used any html tags like we can copy embed tag from youtube and paste in our tinymce. and that video can be visible on our webpage along with the text entered in tinymce.  ','inherit','open','open','','181-revision-14','','','2009-08-18 11:27:19','2009-08-18 05:57:19','',181,'http://www.intelligrape.com/blog/?p=195',0,'revision','',0),(196,7,'2009-08-18 11:27:31','2009-08-18 05:57:31','Hi,\r\n\r\nWe were using tinymce on alfresco labs 3 stable version. Lately, client come up with the new requirement to display video\'s in the page rendered from text given in tinymce. Since coupling between alfresco and current version of tinymce was so tight, we did not include the latest version of tinymce, which might have supported video\'s too.\r\n\r\nSo we decided to render html given in tinymce ourselves, after loading the domain object. The Sample code is given below :\r\n<blockquote><div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">import java.util.regex.Pattern\r\nimport java.util.regex.Matcher\r\nString sampleText = new String(\'\'\'###&amp;lt;width&amp;gt;369&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;174&amp;lt;/height&amp;gt;&amp;lt;image&amp;gt;/bw/images/preview.jpg&amp;lt;/image&amp;gt;&amp;lt;url&amp;gt;http://www.mediacollege.com/video-gallery/testclips/barsandtone.flv&amp;lt;/url&amp;gt; ###\'\'\')\r\n\r\nsampleText = replaceHtmlTags(sampleText)\r\n\r\ndef replaceHtmlTags(def text){\r\ntry{\r\n   Pattern pattern = Pattern.compile(\'\'\'###(.*?)###\'\'\'); // searches the string wrapped up with \"###\"\r\n   Matcher matcher\r\n   def tagStr,updatedTagStr\r\n   matcher = pattern.matcher(text);\r\n   int count=1\r\n   while (matcher.find()) {\r\n       tagStr = matcher.group()\r\n       updatedTagStr = new String(tagStr)   \r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;lt;\", \"&lt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;gt;\", \"&gt;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;quot;\", \"\"\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"&amp;amp;\", \"&amp;\")\r\n       updatedTagStr = updatedTagStr.replaceAll(\"###\", \"\")\r\n       text = text.replace(tagStr, updatedTagStr)   \r\n   }\r\n}catch(Exception e){\r\n    println \"Exception caused \" + e.message\r\n}\r\n   return text\r\n}</pre></div></div></blockquote>\r\nWith this code in place, html code wrapped up with \"###\" in tinymce, can be rendered as HTML tags rather than just a string. This gives lot of power to the user, as it can be used to show videos, slides from slideshare and anything we can display using html. for example, to play youtube video on our webpage along with other content, we just need to copy the embed or object tag from youtube to our tinymce and call replaceHtmlTags function we just saw on that text and the video would be up and running. \r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>','Alfresco : Render html code written in tinymce',0,'Write and render your html code written in tinymce. It allows user to used any html tags like we can copy embed tag from youtube and paste in our tinymce. and that video can be visible on our webpage along with the text entered in tinymce.  ','inherit','open','open','','181-revision-15','','','2009-08-18 11:27:31','2009-08-18 05:57:31','',181,'http://www.intelligrape.com/blog/?p=196',0,'revision','',0),(209,7,'2009-08-21 11:35:37','2009-08-21 06:05:37','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\n    String title\r\n    String description\r\n    String link\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               //As blogs requested from wordpress may have draft posts, so we requested twice the number of blogs needed as this request to wordpress plugin is expensive.\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.link = post.permaLink\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   //makes the recursive call\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n            return excerptPosts\r\n       }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-18','','','2009-08-21 11:35:37','2009-08-21 06:05:37','',162,'http://www.intelligrape.com/blog/?p=209',0,'revision','',0),(199,7,'2009-08-21 11:20:44','2009-08-21 05:50:44','<em></em>Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n      def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every one hour, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'Grails : Caching using cron jobs i.e using quartz plugin. As with grails 1.1.1 plugin springcache plugin didn\'t work.','publish','open','open','','grails-caching-using-cron-jobs','','','2009-08-21 13:40:28','2009-08-21 08:10:28','',0,'http://www.intelligrape.com/blog/?p=199',0,'post','',2),(201,7,'2009-08-21 11:06:49','2009-08-21 05:36:49','Hi,\n\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope. \n\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\n<blockquote>\n\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\nimport org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\n\nclass FetchRecentBlogsJob {\n    def utilService\n    def concurrent = false\n    def startDelay = 1000*10\n    def timeout = 1000*60*60\n\n    def execute() {\n        CH.config.recentBlogs =  utilService.getRecentExcerptedPosts(2)\n   }\n}\n</pre class=\"groovy\">\n</div class=\"code\">\n</div class=\"wp_syntax\">\nThis excute method in the above class runs after every 1 hr, which gets the result from the service and updates our list. \n\nHope this helped.\n\nCheers!!\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com/\n','Grails: caching using cron jobs',0,'','inherit','open','open','','199-revision-2','','','2009-08-21 11:06:49','2009-08-21 05:36:49','',199,'http://www.intelligrape.com/blog/?p=201',0,'revision','',0),(200,7,'2009-08-21 11:05:48','2009-08-21 05:35:48','Hi,\n\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope. \n\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\n<blockquote>\n\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\nimport org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\n\nclass FetchRecentBlogsJob {\n    def utilService\n    def concurrent = false\n    def startDelay = 1000*10\n    def timeout = 1000*60*60\n\n    def execute() {\n        CH.config.recentBlogs =  utilService.getRecentExcerptedPosts(2)\n        CH.config.recentBlogsShortDesc =  utilService.truncateBlogsDescription(CH.config.recentBlogs,40)\n        CH.config.recentBlogsLongDesc =  utilService.truncateBlogsDescription(CH.config.recentBlogs,100)\n    }\n}\n\n</pre class=\"groovy\">\n</div class=\"code\">\n</div class=\"wp_syntax\">\nThis excute method in the above class runs after every 1 hr, which gets the result from the service and updates our list. \n\nHope this helped.\n\nCheers!!\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com/\n','Grails: caching using cron jobs',0,'','inherit','open','open','','199-revision','','','2009-08-21 11:05:48','2009-08-21 05:35:48','',199,'http://www.intelligrape.com/blog/?p=200',0,'revision','',0),(203,7,'2009-08-21 11:09:33','2009-08-21 05:39:33','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\ndef utilService\r\ndef concurrent = false\r\ndef startDelay = 1000*10\r\ndef timeout = 1000*60*60\r\ndef execute() {\r\nCH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n}\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every 1 hr, which gets the result from the service and updates our list.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'','inherit','open','open','','199-revision-4','','','2009-08-21 11:09:33','2009-08-21 05:39:33','',199,'http://www.intelligrape.com/blog/?p=203',0,'revision','',0),(202,7,'2009-08-21 11:07:39','2009-08-21 05:37:39','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope. \r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\n\r\nclass FetchRecentBlogsJob {\r\n    def utilService\r\n    def concurrent = false\r\n    def startDelay = 1000*10\r\n    def timeout = 1000*60*60\r\n\r\n    def execute() {\r\n        CH.config.recentBlogs =  utilService.getRecentExcerptedPosts(2)\r\n   }\r\n}\r\n\r\n\r\n</pre class=\"groovy\">\r\n</div class=\"code\">\r\n</div class=\"wp_syntax\"></blockquote>\r\nThis excute method in the above class runs after every 1 hr, which gets the result from the service and updates our list. \r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/\r\n','Grails: caching using cron jobs',0,'','inherit','open','open','','199-revision-3','','','2009-08-21 11:07:39','2009-08-21 05:37:39','',199,'http://www.intelligrape.com/blog/?p=202',0,'revision','',0),(204,7,'2009-08-21 11:13:28','2009-08-21 05:43:28','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n       def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every 1 hr, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'','inherit','open','open','','199-revision-5','','','2009-08-21 11:13:28','2009-08-21 05:43:28','',199,'http://www.intelligrape.com/blog/?p=204',0,'revision','',0),(205,7,'2009-08-21 11:14:16','2009-08-21 05:44:16','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n       def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every one hour, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'','inherit','open','open','','199-revision-6','','','2009-08-21 11:14:16','2009-08-21 05:44:16','',199,'http://www.intelligrape.com/blog/?p=205',0,'revision','',0),(206,7,'2009-08-21 11:19:29','2009-08-21 05:49:29','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n       def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every one hour, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'Grails : Caching using cron jobs i.e using quartz plugin. As with grails 1.1.1 plugin springcache plugin didn\'t work.','inherit','open','open','','199-revision-7','','','2009-08-21 11:19:29','2009-08-21 05:49:29','',199,'http://www.intelligrape.com/blog/?p=206',0,'revision','',0),(207,7,'2009-08-21 11:20:32','2009-08-21 05:50:32','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n      def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every one hour, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'Grails : Caching using cron jobs i.e using quartz plugin. As with grails 1.1.1 plugin springcache plugin didn\'t work.','inherit','open','open','','199-revision-8','','','2009-08-21 11:20:32','2009-08-21 05:50:32','',199,'http://www.intelligrape.com/blog/?p=207',0,'revision','',0),(208,7,'2009-08-07 13:51:02','2009-08-07 08:21:02','While integrating the blogs using wordpress plugin in one of the project I am working on. I observed that using current version(0.1) of wordpress plugin, when we request for recent posts, it returns not only published blogs but also blogs with status as draft(which are not yet published). Along with that, we needed to show excerpt of recent blogs. So the workaround I found is given below\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"”groovy”\">//create a class blog\r\npublic class Blog{\r\nString title\r\nString description\r\nString postId\r\n}\r\n\r\n/** A function that returns the requested number of recent published posts as  Blog objects list. Its parameters :\r\n     * @param count : number of recent blogs needed.\r\n     * @param textSize : number of charaters to be displayed in a description\r\n     * @param blogsCount : it is used to make a recursive call, incase wordpress service returned draft posts as well.   Pass this value equivalent to count\r\n     * @return List : Returns list of blog objects.\r\n     */\r\n\r\n  List getRecentExcerptedPosts(int count, int textSize, int blogsCount = count){\r\n\r\n         List excerptPosts = []\r\n         Blog blog\r\n         int postsAdded=0\r\n          try {\r\n               //As blogs requested from wordpress may have draft posts, so we requested twice the number of blogs needed as this request to wordpress plugin is expensive.\r\n               wordpressService.getRecentPosts(blogsCount*2).each { post -&gt;\r\n                   if(postsAdded &lt; count){\r\n                        if(post.post_status.equalsIgnoreCase(\'publish\')){\r\n                            blog = new Blog()\r\n                            blog.title = post.title\r\n                            blog.description = post.description.replaceAll(\"<a href=\"file://\\&lt;.*?\\\">\\&lt;.*?\\</a>&gt;\",\"\") //removes html code from description\r\n                            blog.description = textSize &gt; blog.description.length()?blog.description : blog.description.substring(0, textSize)\r\n                            blog.postId = post.postId\r\n                            excerptPosts &lt;&lt; blog\r\n                            postsAdded++\r\n                       }\r\n                   }\r\n               }\r\n               if(postsAdded&lt;count){\r\n                   //makes the recursive call\r\n                   excerptPosts= getRecentExcerptedPosts(count,textSize, blogsCount*2)\r\n               }\r\n            } catch (Exception e) {\r\n                log.error \"Error rendering the wordpress recentPosts tag\", e\r\n            }\r\n            return excerptPosts\r\n       }\r\n </pre>\r\n</div>\r\n</div>\r\n</blockquote>\r\n\r\nCheers,\r\n~~Amit Jain~~\r\namit@intelligrape.com','Wordpress plugin : workaround to get excerpt of recent posts & only published messages ',0,'','inherit','open','open','','162-revision-17','','','2009-08-07 13:51:02','2009-08-07 08:21:02','',162,'http://www.intelligrape.com/blog/?p=208',0,'revision','',0),(210,7,'2009-08-21 11:20:44','2009-08-21 05:50:44','Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n      def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every one hour, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'Grails : Caching using cron jobs i.e using quartz plugin. As with grails 1.1.1 plugin springcache plugin didn\'t work.','inherit','open','open','','199-revision-9','','','2009-08-21 11:20:44','2009-08-21 05:50:44','',199,'http://www.intelligrape.com/blog/?p=210',0,'revision','',0),(211,7,'2009-08-21 13:45:54','2009-08-21 08:15:54','<em></em>Hi,\r\n\r\nWe needed to cache the result of a webservice. We were using grails 1.1.1 version and springcache plugin for caching. Unfortunately, current springcache version didn\'t work with grails 1.1.1. So we decided to cache the results using cron jobs, which will run in the background after every 1hr and store the results in a list, which will have a application level scope.\r\n\r\nTo implement this functionality, we used quartz plugin (http://grails.org/Quartz+plugin). This made our job easier. Below I have given the code, which did caching for us :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH</pre>\r\n</div>\r\nclass FetchRecentBlogsJob {\r\n      def utilService\r\n      def concurrent = false\r\n      def startDelay = 1000*10\r\n      def timeout = 1000*60*60\r\n\r\n      def execute() {\r\n                CH.config.recentBlogs = utilService.getRecentExcerptedPosts(2)\r\n       }\r\n}</div></blockquote>\r\nThis excute method in the above class runs after every one hour, which gets the result from the service and updates our list. The frequency at which we need to update the list can be set using number of properties as given in the documentation of quartz plugin.\r\n\r\nHope this helped.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: caching using cron jobs',0,'Grails : Caching using cron jobs i.e using quartz plugin. As with grails 1.1.1 plugin springcache plugin didn\'t work.','inherit','open','open','','199-autosave','','','2009-08-21 13:45:54','2009-08-21 08:15:54','',199,'http://www.intelligrape.com/blog/?p=211',0,'revision','',0),(212,5,'2009-08-21 20:15:49','2009-08-21 14:45:49','Note: Months are from 0 to 11. Hence the 7th month is \"August\"\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>\r\n\r\nCheers!!!\r\n~Chandan Luthra~\r\n<a href=\"mailto:chandan@intelligrape.com\">chandan@intelligrape.com</a>\r\n<a href=\"http://www.intelligrape.com\"> www.intelligrape.com</a>','Fetching the last day of the month',0,'','publish','open','open','','fetching-the-last-day-of-the-month','','','2009-08-21 20:21:31','2009-08-21 14:51:31','',0,'http://www.intelligrape.com/blog/?p=212',0,'post','',0),(214,5,'2009-08-21 20:07:53','2009-08-21 14:37:53','Note: Months are from 0 to 11\n<code pre>\nCalendar calendar = GregorianCalendar.instance\ncalendar.set(2009, 7, 21)\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\n</code>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-2','','','2009-08-21 20:07:53','2009-08-21 14:37:53','',212,'http://www.intelligrape.com/blog/?p=214',0,'revision','',0),(218,5,'2009-08-21 20:10:25','2009-08-21 14:40:25','Note: Months are from 0 to 11\r\n<pre class=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-6','','','2009-08-21 20:10:25','2009-08-21 14:40:25','',212,'http://www.intelligrape.com/blog/?p=218',0,'revision','',0),(215,5,'2009-08-21 20:08:08','2009-08-21 14:38:08','Note: Months are from 0 to 11\r\n<code language=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</code>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-3','','','2009-08-21 20:08:08','2009-08-21 14:38:08','',212,'http://www.intelligrape.com/blog/?p=215',0,'revision','',0),(213,5,'2009-08-21 20:06:53','2009-08-21 14:36:53','<span class=\"js-comment\">Note: Months are from 0 to 11</span>\n\n<span class=\"js-variable\">Calendar </span><span class=\"js-variable\">calendar </span><span class=\"js-operator\">= </span><span class=\"js-variable\">GregorianCalendar</span><span class=\"js-punctuation\">.</span><span class=\"js-variable\">instance</span>\n<span class=\"js-variable\">calendar</span><span class=\"js-punctuation\">.</span><span class=\"js-variable\">set</span><span class=\"js-punctuation\">(</span><span class=\"js-atom\">2009</span><span class=\"js-punctuation\">, </span><span class=\"js-atom\">7</span><span class=\"js-punctuation\">, </span><span class=\"js-atom\">21</span><span class=\"js-punctuation\">)</span>\n<span class=\"js-variable\">println </span><span class=\"js-string\">\"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"</span>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision','','','2009-08-21 20:06:53','2009-08-21 14:36:53','',212,'http://www.intelligrape.com/blog/?p=213',0,'revision','',0),(216,5,'2009-08-21 20:08:19','2009-08-21 14:38:19','Note: Months are from 0 to 11\r\n<code language=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</code>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-4','','','2009-08-21 20:08:19','2009-08-21 14:38:19','',212,'http://www.intelligrape.com/blog/?p=216',0,'revision','',0),(217,5,'2009-08-21 20:08:28','2009-08-21 14:38:28','Note: Months are from 0 to 11\r\n<code language=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</code>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-5','','','2009-08-21 20:08:28','2009-08-21 14:38:28','',212,'http://www.intelligrape.com/blog/?p=217',0,'revision','',0),(219,5,'2009-08-21 20:10:55','2009-08-21 14:40:55','Note: Months are from 0 to 11\r\n<div class=\"code>\r\n<pre class=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n</div>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-7','','','2009-08-21 20:10:55','2009-08-21 14:40:55','',212,'http://www.intelligrape.com/blog/?p=219',0,'revision','',0),(220,5,'2009-08-21 20:11:00','2009-08-21 14:41:00','Note: Months are from 0 to 11\r\n<div class=\"code>\r\n<pre class=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n</div>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-8','','','2009-08-21 20:11:00','2009-08-21 14:41:00','',212,'http://www.intelligrape.com/blog/?p=220',0,'revision','',0),(222,5,'2009-08-21 20:12:25','2009-08-21 14:42:25','Note: Months are from 0 to 11\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-10','','','2009-08-21 20:12:25','2009-08-21 14:42:25','',212,'http://www.intelligrape.com/blog/?p=222',0,'revision','',0),(221,5,'2009-08-21 20:12:00','2009-08-21 14:42:00','Note: Months are from 0 to 11\r\n<blockquote>\r\n<pre class=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-9','','','2009-08-21 20:12:00','2009-08-21 14:42:00','',212,'http://www.intelligrape.com/blog/?p=221',0,'revision','',0),(223,5,'2009-08-21 20:13:45','2009-08-21 14:43:45','Note: Months are from 0 to 11. Hence the 7th month is \"August\"\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>\r\n\r\n##Chandan Luthra##\r\nchandan@intelligrape.com\r\nwww.intelligrape.com','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-11','','','2009-08-21 20:13:45','2009-08-21 14:43:45','',212,'http://www.intelligrape.com/blog/?p=223',0,'revision','',0),(224,5,'2009-08-21 20:15:06','2009-08-21 14:45:06','Note: Months are from 0 to 11. Hence the 7th month is \"August\"\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>\r\n\r\nCheers!!!\r\n~Chandan Luthra~\r\nchandan@intelligrape.com\r\nwww.intelligrape.com','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-12','','','2009-08-21 20:15:06','2009-08-21 14:45:06','',212,'http://www.intelligrape.com/blog/?p=224',0,'revision','',0),(225,5,'2009-08-21 20:15:49','2009-08-21 14:45:49','Note: Months are from 0 to 11. Hence the 7th month is \"August\"\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>\r\n\r\nCheers!!!\r\n~Chandan Luthra~\r\nchandan@intelligrape.com\r\nwww.intelligrape.com','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-13','','','2009-08-21 20:15:49','2009-08-21 14:45:49','',212,'http://www.intelligrape.com/blog/?p=225',0,'revision','',0),(226,5,'2009-08-21 20:18:50','2009-08-21 14:48:50','Note: Months are from 0 to 11. Hence the 7th month is \"August\"\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>\r\n\r\nCheers!!!\r\n~Chandan Luthra~\r\nchandan@intelligrape.com\r\nwww.intelligrape.com','Fetching the last day of the month',0,'','inherit','open','open','','212-revision-14','','','2009-08-21 20:18:50','2009-08-21 14:48:50','',212,'http://www.intelligrape.com/blog/?p=226',0,'revision','',0),(227,7,'2009-08-28 14:49:09','2009-08-28 09:19:09','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this, \r\n\r\nIn UrlMappings.groovy file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">&lt;g:link controller=\"myController\" action=\"myAction\"&gt; myLink&lt;/g:link&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url \"http://serverURL.com/contact\". I wanted not only \"contact\" at the end but also \".html\" text to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url \"http://serverURL.com/contact.html\", UrlMappings file is searched only for contact and \".html\" gets truncated. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'In this blog Reverse Url Mappings has been used to generate the URL ending with .html, given controller and action names.','publish','open','open','','grails-reverse-url-mapping-to-generate-urls-ending-with-html','','','2009-08-28 15:31:15','2009-08-28 10:01:15','',0,'http://www.intelligrape.com/blog/?p=227',0,'post','',1),(228,7,'2009-08-28 14:32:06','2009-08-28 09:02:06','Hi Friends,\n\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\nThen I tried this, \nUrlMappings.groovy  \n<blockquote>\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\nclass UrlMappings {\n    static mappings = {\n      ...\n      \"/contact(controller:\'myController\', action:\'myAction\')\n    }\n}\n</pre>\n    </div>\n</div>\n</blockquote>\nAnd in my gsp file :\n<blockquote>\n\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n<g:link controller=\"${myController}\" action=\"${myAction}\" > myLink </g:link>\n</pre>\n    </div>\n</div>\n</blockquote>\nThe above code gave me this url : http://serverURL.com/contact. I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\n<blockquote>\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\nclass UrlMappings {\n    static mappings = {\n      ...\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\n      \"/contact(controller:\'myController\', action:\'myAction\')\n    }\n}\n</pre>\n    </div>\n</div>\n</blockquote>\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping wont work. Since for the url - http://serverURL.com/contact.html, UrlMappings file is searched for contact. Therefore we need to have \"/contact.html\" mapping also. \nNot to forget, the mappings specified above has to be in the same order.\n\n\n\n','Grails: reverse url mapping to generate urls ending with \".html\"',0,'','inherit','open','open','','227-revision','','','2009-08-28 14:32:06','2009-08-28 09:02:06','',227,'http://www.intelligrape.com/blog/?p=228',0,'revision','',0),(229,7,'2009-08-28 14:33:07','2009-08-28 09:03:07','Hi Friends,\n\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\nThen I tried this, \nUrlMappings.groovy  \n<blockquote>\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\nclass UrlMappings {\n    static mappings = {\n      ...\n      \"/contact(controller:\'myController\', action:\'myAction\')\n    }\n}\n</pre>\n    </div>\n</div>\n</blockquote>\nAnd in my gsp file :\n<blockquote>\n\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n<g:link controller=\"${myController}\" action=\"${myAction}\" > myLink </g:link>\n</pre>\n    </div>\n</div>\n</blockquote>\nThe above code gave me this url : http://serverURL.com/contact. I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\n<blockquote>\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\nclass UrlMappings {\n    static mappings = {\n      ...\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\n      \"/contact(controller:\'myController\', action:\'myAction\')\n    }\n}\n</pre>\n    </div>\n</div>\n</blockquote>\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping wont work. Since for the url - http://serverURL.com/contact.html, UrlMappings file is searched for contact. Therefore we need to have \"/contact.html\" mapping also. \nNot to forget, the mappings specified above has to be in the same order.\n\nCheers!!\nAmit Jain\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com/\n\n\n\n','Grails: reverse url mapping to generate urls ending with \".html\"',0,'','inherit','open','open','','227-revision-2','','','2009-08-28 14:33:07','2009-08-28 09:03:07','',227,'http://www.intelligrape.com/blog/?p=229',0,'revision','',0),(230,7,'2009-08-28 14:41:19','2009-08-28 09:11:19','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this,\r\nUrlMappings.groovy\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"><g:link controller=\"myController\" action=\"myAction\"> myLink</g:link></pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url : http://serverURL.com/contact. I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url - http://serverURL.com/contact.html, UrlMappings file is searched for contact. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\nAmit Jain\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'','inherit','open','open','','227-revision-3','','','2009-08-28 14:41:19','2009-08-28 09:11:19','',227,'http://www.intelligrape.com/blog/?p=230',0,'revision','',0),(231,7,'2009-08-28 14:43:01','2009-08-28 09:13:01','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this,\r\nUrlMappings.groovy\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">&lt;g:link controller=\"myController\" action=\"myAction\"&gt; myLink&lt;/g:link&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url : http://serverURL.com/contact. I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url - http://serverURL.com/contact.html, UrlMappings file is searched for contact. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\nAmit Jain\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'','inherit','open','open','','227-revision-4','','','2009-08-28 14:43:01','2009-08-28 09:13:01','',227,'http://www.intelligrape.com/blog/?p=231',0,'revision','',0),(232,7,'2009-08-28 14:47:29','2009-08-28 09:17:29','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this,\r\nUrlMappings.groovy\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">&lt;g:link controller=\"myController\" action=\"myAction\"&gt; myLink&lt;/g:link&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url \"http://serverURL.com/contact\". I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url \"http://serverURL.com/contact.html\", UrlMappings file is searched only for contact and \".html\" gets truncated. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\nAmit Jain\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'','inherit','open','open','','227-revision-5','','','2009-08-28 14:47:29','2009-08-28 09:17:29','',227,'http://www.intelligrape.com/blog/?p=232',0,'revision','',0),(233,7,'2009-08-28 14:49:09','2009-08-28 09:19:09','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this, \r\n\r\nIn UrlMappings.groovy file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">&lt;g:link controller=\"myController\" action=\"myAction\"&gt; myLink&lt;/g:link&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url \"http://serverURL.com/contact\". I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url \"http://serverURL.com/contact.html\", UrlMappings file is searched only for contact and \".html\" gets truncated. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\nAmit Jain\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'','inherit','open','open','','227-revision-6','','','2009-08-28 14:49:09','2009-08-28 09:19:09','',227,'http://www.intelligrape.com/blog/?p=233',0,'revision','',0),(234,7,'2009-08-28 14:52:50','2009-08-28 09:22:50','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this, \r\n\r\nIn UrlMappings.groovy file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">&lt;g:link controller=\"myController\" action=\"myAction\"&gt; myLink&lt;/g:link&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url \"http://serverURL.com/contact\". I wanted not only \"contact\" at the end but also \".html\" code to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url \"http://serverURL.com/contact.html\", UrlMappings file is searched only for contact and \".html\" gets truncated. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\nAmit Jain\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'In this blog Reverse Url Mappings has been used to generate the URL ending with .html, given controller and action names.','inherit','open','open','','227-revision-7','','','2009-08-28 14:52:50','2009-08-28 09:22:50','',227,'http://www.intelligrape.com/blog/?p=234',0,'revision','',0),(235,7,'2009-08-28 14:56:52','2009-08-28 09:26:52','Hi Friends,\r\n\r\nRecently I came across a problem, where the url of the links were to be generated dynamically based on the controller and action to be executed and  should end with \".html\". Reverse url mappings came to my rescue, which can be implemented using &lt;g:link&gt; GSP tag.\r\nThen I tried this, \r\n\r\nIn UrlMappings.groovy file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }</pre>\r\n</div>\r\n</div></blockquote>\r\nAnd in my gsp file :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">&lt;g:link controller=\"myController\" action=\"myAction\"&gt; myLink&lt;/g:link&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\nThe above code gave me this url \"http://serverURL.com/contact\". I wanted not only \"contact\" at the end but also \".html\" text to be appended with it. So for that I added one more entry to my UrlMappings.groovy file. Now it looks like this :\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class UrlMappings {\r\n    static mappings = {\r\n      ...\r\n      \"/contact.html(controller:\'myController\', action:\'myAction\')\r\n      \"/contact(controller:\'myController\', action:\'myAction\')\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nIn the above code, both lines are required to make the url ending with \".html\". Only \"/contact.html\" mapping won\'t work. Since for the url \"http://serverURL.com/contact.html\", UrlMappings file is searched only for contact and \".html\" gets truncated. Therefore we need to have \"/contact.html\" mapping also.\r\nDon\'t forget, the mappings specified above has to be in the same order.\r\n\r\nCheers!!\r\nAmit Jain\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com/','Grails: reverse url mapping to generate urls ending with \".html\"',0,'In this blog Reverse Url Mappings has been used to generate the URL ending with .html, given controller and action names.','inherit','open','open','','227-revision-8','','','2009-08-28 14:56:52','2009-08-28 09:26:52','',227,'http://www.intelligrape.com/blog/?p=235',0,'revision','',0),(236,6,'2009-09-09 16:43:32','2009-09-09 11:13:32',' In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database. Imagine the time it would have taken to insert 50000 records with this pace. Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\"> (0..60000).each{\r\n           Person person = new Person(.....)\r\n           person.save()\r\n       }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\">   def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(....)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n            }\r\n          batch.clear()\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()\r\n        }\r\n        def endTime =  System.nanoTime()\r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff</pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>. But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in the method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache. As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(....)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','publish','open','open','','batch-processing-in-grails','','','2009-09-14 13:04:34','2009-09-14 07:34:34','',0,'http://www.intelligrape.com/blog/?p=236',0,'post','',3),(237,6,'2009-09-09 16:23:17','2009-09-09 10:53:17','\n\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database.Imagine the time it would have taken to insert 50000 records with this pace.Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\n<code>(0..60000).each{\n               Person person = new Person(.....)\n               person.save()\n         }</code>\n \n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\n\n <code>  def startTime = System.nanoTime()\n        List batch =[]\n        (0..50000).each{\n           Person person= new Person(..)\n            batch.add(person)\n              if(batch.size()>1000){\n                Person.withTransaction{\n                    for(Person p in batch){\n                        p.save()\n                    }\n                }\n                batch.clear()\n            }\n                       \n        }\n        def endTime =  System.nanoTime() \n        def diff = (startTime-endTime)/1000000000\n        println \"TIME TAKEN IS :::\"+diff </code>\n\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>.But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\n\n But there is one flaw in method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache.As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\n\n        def startTime = System.nanoTime()\n        List batch =[]\n        (0..50000).each{\n           Person person= new Person(..)\n            batch.add(person)\n            println \"Created:::::\"+it\n            if(batch.size()>1000){\n                Person.withTransaction{\n                    for(Person p in batch){\n                        p.save()\n                    }\n                }\n                batch.clear()\n            }\n          session = sessionFactory.getCurrentSession()\n          session.clear()             \n        }\n        def endTime =  System.nanoTime() \n        def diff = (startTime-endTime)/1000000000\n        println \"TIME TAKEN IS :::\"+diff\n\n\n\nThank you,\nImran Mir,\nimran@intelligrape.com\n\n\n\n\n  \n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision','','','2009-09-09 16:23:17','2009-09-09 10:53:17','',236,'http://www.intelligrape.com/blog/?p=237',0,'revision','',0),(238,6,'2009-09-09 16:31:36','2009-09-09 11:01:36','\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database.Imagine the time it would have taken to insert 50000 records with this pace.Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\n<pre lang=\"groovy\">(0..60000).each{\n               Person person = new Person(.....)\n               person.save()\n         }</pre>\n \n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\n\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\n        List batch =[]\n        (0..50000).each{\n           Person person= new Person(..)\n            batch.add(person)\n              if(batch.size()>1000){\n                Person.withTransaction{\n                    for(Person p in batch){\n                        p.save()\n                    }\n                }\n                batch.clear()\n            }\n                       \n        }\n        def endTime =  System.nanoTime() \n        def diff = (startTime-endTime)/1000000000\n        println \"TIME TAKEN IS :::\"+diff </pre>\n\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>.But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\n\n But there is one flaw in method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache.As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\n<pre lang=\"groovy\">\n        def startTime = System.nanoTime()\n        List batch =[]\n        (0..50000).each{\n           Person person= new Person(..)\n            batch.add(person)\n            println \"Created:::::\"+it\n            if(batch.size()>1000){\n                Person.withTransaction{\n                    for(Person p in batch){\n                        p.save()\n                    }\n                }\n                batch.clear()\n            }\n          session = sessionFactory.getCurrentSession()\n          session.clear()             \n        }\n        def endTime =  System.nanoTime() \n        def diff = (startTime-endTime)/1000000000\n        println \"TIME TAKEN IS :::\"+diff\n</pre>\n\n\nThank you,\nImran Mir,\nimran@intelligrape.com\n\n\n\n\n  \n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-2','','','2009-09-09 16:31:36','2009-09-09 11:01:36','',236,'http://www.intelligrape.com/blog/?p=238',0,'revision','',0),(239,6,'2009-09-09 16:32:45','2009-09-09 11:02:45','\r\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database.Imagine the time it would have taken to insert 50000 records with this pace.Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\">(0..60000).each{\r\n               Person person = new Person(.....)\r\n               person.save()\r\n         }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n                       \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>.But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache.As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-3','','','2009-09-09 16:32:45','2009-09-09 11:02:45','',236,'http://www.intelligrape.com/blog/?p=239',0,'revision','',0),(241,6,'2009-09-09 16:37:29','2009-09-09 11:07:29','\r\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database.Imagine the time it would have taken to insert 50000 records with this pace.Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\"> (0..60000).each{\r\n           Person person = new Person(.....)\r\n           person.save()\r\n       }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n        }        \r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>.But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache.As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-5','','','2009-09-09 16:37:29','2009-09-09 11:07:29','',236,'http://www.intelligrape.com/blog/?p=241',0,'revision','',0),(240,6,'2009-09-09 16:35:44','2009-09-09 11:05:44','\r\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database.Imagine the time it would have taken to insert 50000 records with this pace.Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\">(0..60000).each{\r\n                               Person person = new Person(.....)\r\n                               person.save()\r\n                           }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n        }        \r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>.But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache.As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-4','','','2009-09-09 16:35:44','2009-09-09 11:05:44','',236,'http://www.intelligrape.com/blog/?p=240',0,'revision','',0),(242,6,'2009-09-09 16:42:09','2009-09-09 11:12:09','\r\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database. Imagine the time it would have taken to insert 50000 records with this pace. Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\"> (0..60000).each{\r\n           Person person = new Person(.....)\r\n           person.save()\r\n       }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n        }        \r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>. But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in the method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache. As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(....)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-6','','','2009-09-09 16:42:09','2009-09-09 11:12:09','',236,'http://www.intelligrape.com/blog/?p=242',0,'revision','',0),(243,6,'2009-09-09 16:43:32','2009-09-09 11:13:32','\r\n In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database. Imagine the time it would have taken to insert 50000 records with this pace. Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\"> (0..60000).each{\r\n           Person person = new Person(.....)\r\n           person.save()\r\n       }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n        }        \r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>. But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in the method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache. As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(....)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-7','','','2009-09-09 16:43:32','2009-09-09 11:13:32','',236,'http://www.intelligrape.com/blog/?p=243',0,'revision','',0),(244,6,'2009-09-09 16:45:28','2009-09-09 11:15:28',' In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database. Imagine the time it would have taken to insert 50000 records with this pace. Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\"> (0..60000).each{\r\n           Person person = new Person(.....)\r\n           person.save()\r\n       }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n        }        \r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>. But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in the method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache. As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(....)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-8','','','2009-09-09 16:45:28','2009-09-09 11:15:28','',236,'http://www.intelligrape.com/blog/?p=244',0,'revision','',0),(245,6,'2009-12-02 10:46:13','2009-12-02 05:16:13','In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database. Imagine the time it would have taken to insert 50000 records with this pace. Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\n<pre lang=\"groovy\"> (0..60000).each{\n           Person person = new Person(.....)\n           person.save()\n       }</pre>\nOne of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\n<pre lang=\"groovy\">   def startTime = System.nanoTime()\n        List  batch =[]\n        (0..50000).each{\n           Person person= new Person(....)\n            batch.add(person)\n            println \"Created:::::\"+it\n            if(batch.size()&gt;1000){\n                Person.withTransaction{\n                    for(Person p in batch){\n                        p.save()\n                    }\n                }\n            }\n          batch.clear()\n          session = sessionFactory.getCurrentSession()\n          session.clear()\n        }\n        def endTime =  System.nanoTime()\n        def diff = (startTime-endTime)/1000000000\n        println \"TIME TAKEN IS :::\"+diff</pre>\nIn the previous case the time take to save 50,000 records was around <em>500 seconds</em>. But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\n\nBut there is one flaw in the method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache. As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\n<pre lang=\"groovy\">        def startTime = System.nanoTime()\n        List  batch =[]\n        (0..50000).each{\n           Person person= new Person(....)\n            batch.add(person)\n            println \"Created:::::\"+it\n            if(batch.size()&gt;1000){\n                Person.withTransaction{\n                    for(Person p in batch){\n                        p.save()\n                    }\n                }\n                batch.clear()\n            }\n          session = sessionFactory.getCurrentSession()\n          session.clear()\n        }\n        def endTime =  System.nanoTime()\n        def diff = (startTime-endTime)/1000000000\n        println \"TIME TAKEN IS :::\"+diff</pre>\nThank you,\nImran Mir,\nimran@intelligrape.com','Batch Processing In Grails',0,'','inherit','open','open','','236-autosave','','','2009-12-02 10:46:13','2009-12-02 05:16:13','',236,'http://www.intelligrape.com/blog/?p=245',0,'revision','',0),(246,6,'2009-09-09 16:51:10','2009-09-09 11:21:10',' In one of my project assignments I needed to insert large number of records into the database. I had  to read the objects from an external source. Once I read all of the objects into a List, I iterated the list to save each one of them individually. In the beginning the process carried on fine but as the time passed the execution slowed down considerably. It almost took one second to insert one object into the database. Imagine the time it would have taken to insert 50000 records with this pace. Besides, many times it threw OutOfMemoryException. The code I had written did something like this :\r\n<pre lang=\"groovy\"> (0..60000).each{\r\n           Person person = new Person(.....)\r\n           person.save()\r\n       }</pre>\r\n \r\n One of the solutions that I found was to use transactions and save the objects in batches, each transaction saving a batch of objects. It worked  well and reduced the execution time considerably. What I did was like this :\r\n\r\n<pre lang=\"groovy\"> def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(..)\r\n            batch.add(person)\r\n              if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n        }        \r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff </pre>\r\n\r\n In the previous case the time take to save 50,000 records was around <em>500 seconds</em>. But, here time taken to save the same number of records came out to be just <em>80 seconds</em>.\r\n\r\n But there is one flaw in the method. If the objects are bulky, even this method would not work. Each action in a Grails Controller is executed within a Hibernate Session. The session is started right before the action starts and is closed once it returns. Thus Hibernate caches all the newly inserted Person instances in the session-level cache. As the number of objects grows, the session becomes bulkier, which slows down whole process .That also explains the reason for the memory issue, <em>OutOfMemoryException</em>, because all the objects are being cached to the Hibernate session.The solution to this problem is to clear the session regularly so as to keep it light throughout the process. All that needs to be done is to get hold of  the current session and clear it after each batch has been written to the database. To do this just inject SessionFactory object into your controller, get the current session object  and then clear this current session.\r\n<pre lang=\"groovy\">\r\n        def startTime = System.nanoTime()\r\n        List <Person> batch =[]\r\n        (0..50000).each{\r\n           Person person= new Person(....)\r\n            batch.add(person)\r\n            println \"Created:::::\"+it\r\n            if(batch.size()>1000){\r\n                Person.withTransaction{\r\n                    for(Person p in batch){\r\n                        p.save()\r\n                    }\r\n                }\r\n                batch.clear()\r\n            }\r\n          session = sessionFactory.getCurrentSession()\r\n          session.clear()             \r\n        }\r\n        def endTime =  System.nanoTime() \r\n        def diff = (startTime-endTime)/1000000000\r\n        println \"TIME TAKEN IS :::\"+diff\r\n</pre>\r\n\r\n\r\n\r\nThank you,\r\nImran Mir,\r\nimran@intelligrape.com\r\n\r\n\r\n\r\n\r\n  \r\n','Batch Processing In Grails',0,'','inherit','open','open','','236-revision-9','','','2009-09-09 16:51:10','2009-09-09 11:21:10','',236,'http://www.intelligrape.com/blog/?p=246',0,'revision','',0),(247,7,'2009-09-28 22:55:33','2009-09-28 17:25:33','Let us have a look at the simple javascript code, that can be used to add hotkeys to our web application. I tried using jquery hotkeys plugin and two more plugins, but they didn\'t work for me.\r\n\r\nSo I ended up handling the keydown event of my own.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">var isAlt = false;\r\ndocument.onkeyup = function(e) {\r\n    if (e.which == 18) //18 is the keycode for \'Alt\'\r\n	isAlt = false;\r\n}\r\ndocument.onkeydown = function(e) {\r\n    if (e.which == 18)\r\n	 isAlt = true;\r\n    else if (e.which == 69 &amp;&amp; isAlt == true) { //69 is the keycode for \'e\'\r\n        function1(); 	 // executed when alt+e is pressed\r\n        return false;\r\n    } else if (e.which == 71 &amp;&amp; isAlt == true) {\r\n        function2(); 	 // executed when alt+g is pressed\r\n        return false;\r\n    }\r\n    ...\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares','Add hotkeys to the web application',0,'Add hotkeys to your web application using javascript and its keydown event. ','publish','open','open','','add-hotkeys-to-web-application','','','2009-09-28 22:56:25','2009-09-28 17:26:25','',0,'http://www.intelligrape.com/blog/?p=247',0,'post','',0),(248,7,'2009-09-28 22:51:05','2009-09-28 17:21:05','Lets look at the simple javascript code, that can be used to add hotkeys to our web application. I tried using jquery hotkeys plugin and two more plugins, but they didn\'t work for me. \n\nSo I ended up handling the keydown event of my own. \n\n\n<blockquote>\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\"> \nvar isAlt = false;\ndocument.onkeyup = function(e) {\n    if (e.which == 18) //18 is the keycode for \'Alt\'\n	isAlt = false;\n}\ndocument.onkeydown = function(e) {\n    if (e.which == 18)\n	 isAlt = true;\n    else if (e.which == 69 && isAlt == true) { //69 is the keycode for \'e\'\n        function1(); 	 // executed when alt+e is pressed\n        return false;\n    } else if (e.which == 71 && isAlt == true) {\n        function2(); 	 // executed when alt+g is pressed\n        return false;\n    }\n    ...	 \n}\n</pre></div></div>\n</blockquote>\n\nHope this helped.\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\n\n  	 \n','Add hotkeys ',0,'','inherit','open','open','','247-revision','','','2009-09-28 22:51:05','2009-09-28 17:21:05','',247,'http://www.intelligrape.com/blog/?p=248',0,'revision','',0),(249,7,'2009-09-28 22:52:06','2009-09-28 17:22:06','Lets look at the simple javascript code, that can be used to add hotkeys to our web application. I tried using jquery hotkeys plugin and two more plugins, but they didn\'t work for me. \n\nSo I ended up handling the keydown event of my own. \n\n\n<blockquote>\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\"> \nvar isAlt = false;\ndocument.onkeyup = function(e) {\n    if (e.which == 18) //18 is the keycode for \'Alt\'\n	isAlt = false;\n}\ndocument.onkeydown = function(e) {\n    if (e.which == 18)\n	 isAlt = true;\n    else if (e.which == 69 && isAlt == true) { //69 is the keycode for \'e\'\n        function1(); 	 // executed when alt+e is pressed\n        return false;\n    } else if (e.which == 71 && isAlt == true) {\n        function2(); 	 // executed when alt+g is pressed\n        return false;\n    }\n    ...	 \n}\n</pre></div></div>\n</blockquote>\n\nHope this helped.\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\n\n  	 \n','Add hotkeys to web application',0,'','inherit','open','open','','247-revision-2','','','2009-09-28 22:52:06','2009-09-28 17:22:06','',247,'http://www.intelligrape.com/blog/?p=249',0,'revision','',0),(250,7,'2009-09-28 22:55:33','2009-09-28 17:25:33','Let us have a look at the simple javascript code, that can be used to add hotkeys to our web application. I tried using jquery hotkeys plugin and two more plugins, but they didn\'t work for me.\r\n\r\nSo I ended up handling the keydown event of my own.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">var isAlt = false;\r\ndocument.onkeyup = function(e) {\r\n    if (e.which == 18) //18 is the keycode for \'Alt\'\r\n	isAlt = false;\r\n}\r\ndocument.onkeydown = function(e) {\r\n    if (e.which == 18)\r\n	 isAlt = true;\r\n    else if (e.which == 69 &amp;&amp; isAlt == true) { //69 is the keycode for \'e\'\r\n        function1(); 	 // executed when alt+e is pressed\r\n        return false;\r\n    } else if (e.which == 71 &amp;&amp; isAlt == true) {\r\n        function2(); 	 // executed when alt+g is pressed\r\n        return false;\r\n    }\r\n    ...\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares','Add hotkeys to web application',0,'Add hotkeys to your web application using javascript and its keydown event. ','inherit','open','open','','247-revision-3','','','2009-09-28 22:55:33','2009-09-28 17:25:33','',247,'http://www.intelligrape.com/blog/?p=250',0,'revision','',0),(251,13,'2009-10-12 17:11:02','2009-10-12 11:41:02','<p>In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p>Make sure the following HTML is included on every page where AJAX requests are made. (Place it in body of the main layout so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;position:absolute; top:50%; left:50%; z-index:3000;\">\r\n       <-- Design Busy indicator here -->\r\n       <img src=\"/yoursite/images/spinner.gif\"/>\r\n</span>\r\n</pre>\r\n</div></blockquote>\r\n<p>Make sure the following javascript code has been executed before any AJAX request is made. (Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n\r\n/*\r\n  Registering responders for prototype library.\r\n  (If you are not using  prototype library then there is no need of the next statement.)\r\n*/\r\n\r\nAjax.Responders.register({\r\n          onCreate: function() {\r\n              jQuery(\"#ajax_spinner\").show();\r\n          },\r\n          onComplete: function() {\r\n              jQuery(\"#ajax_spinner\").hide();\r\n          }\r\n});\r\n\r\n/*\r\n   Registering responders for jQuery AJAX calls.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\n              jQuery(this).show();\r\n });\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\n              jQuery(this).hide();\r\n});\r\n\r\n/*\r\n    Note : If you are not using jQuery you can show/hide the div\r\n         using javascript(e.g. document.getElementById) to do the same\r\n*/\r\n</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','publish','open','open','','ajax-request-progress-indicator','','','2009-12-02 11:14:37','2009-12-02 05:44:37','',0,'http://www.intelligrape.com/blog/?p=251',0,'post','',0),(252,13,'2009-10-09 18:19:24','2009-10-09 12:49:24','In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.\n\nMake sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page).\n\n&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;','',0,'','inherit','open','open','','251-revision','','','2009-10-09 18:19:24','2009-10-09 12:49:24','',251,'http://www.intelligrape.com/blog/?p=252',0,'revision','',0),(253,13,'2009-10-09 18:20:25','2009-10-09 12:50:25','In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.\n\nMake sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page).\n\n&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;\n\nMake sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).\n\n&lt;script type=\"text/javascript\"&gt;\n\n/* Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.\n*/\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});\n\n/* Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.\n*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n/* If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same */\n&lt;/script&gt;\n\nThe above trick worked for me and hope it works for you guys too.\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-2','','','2009-10-09 18:20:25','2009-10-09 12:50:25','',251,'http://www.intelligrape.com/blog/?p=253',0,'revision','',0),(264,13,'2009-10-12 16:51:25','2009-10-12 11:21:25','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<code>&lt;script type=\"text/javascript\"&gt;\n/*</code>\n\n<code> Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.\n*/\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});\n\n/* </code>\n\n<code> Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.\n*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n/* </code>\n\n<code> If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same </code>\n\n<code> */\n&lt;/script&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\n\nBhagwat Kumar\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-13','','','2009-10-12 16:51:25','2009-10-12 11:21:25','',251,'http://www.intelligrape.com/blog/?p=264',0,'revision','',0),(254,13,'2009-10-09 18:33:24','2009-10-09 13:03:24','<p style=\"font-size: 19.5px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<pre style=\"font-size: 19.5px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n &lt;-- Design Busy indicator here --&gt;\n &lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</pre>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\n\n<pre style=\"font-size: 19.5px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\n/* Registering responders for prototype library \n If you are not using prototype library then \n there is no need of the next statement.\n*/\n Ajax.Responders.register({\n onCreate: function() {\n jQuery(\"#ajax_spinner\").show();\n },\n onComplete: function() {\n jQuery(\"#ajax_spinner\").hide();\n }\n });\n\n/* Registering responders for jQuery AJAX calls \n If you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then \n there is no need of the next statement.\n*/\n\n jQuery(\"#ajax_spinner\").ajaxStart(function() {\n jQuery(this).show();\n });\n jQuery(\"#ajax_spinner\").ajaxStop(function() {\n jQuery(this).hide();\n });\n/* If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same */\n&lt;/script&gt;</pre>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\n\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-3','','','2009-10-09 18:33:24','2009-10-09 13:03:24','',251,'http://www.intelligrape.com/blog/?p=254',0,'revision','',0),(255,13,'2009-10-09 18:35:03','2009-10-09 13:05:03','<p style=\"font-size: 19.5px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<pre style=\"font-size: 19.5px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n &lt;-- Design Busy indicator here --&gt;\n &lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</pre>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\n\n<pre style=\"font-size: 19.5px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\n/* Registering responders for prototype library\n If you are not using prototype library then\n there is no need of the next statement.\n*/\n Ajax.Responders.register({\n onCreate: function() {\n jQuery(\"#ajax_spinner\").show();\n },\n onComplete: function() {\n jQuery(\"#ajax_spinner\").hide();\n }\n });\n\n/* Registering responders for jQuery AJAX calls\n If you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\n there is no need of the next statement.\n*/\n\n jQuery(\"#ajax_spinner\").ajaxStart(function() {\n jQuery(this).show();\n });\n jQuery(\"#ajax_spinner\").ajaxStop(function() {\n jQuery(this).hide();\n });\n/* If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same */\n&lt;/script&gt;</pre>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-4','','','2009-10-09 18:35:03','2009-10-09 13:05:03','',251,'http://www.intelligrape.com/blog/?p=255',0,'revision','',0),(256,13,'2009-10-09 18:45:21','2009-10-09 13:15:21','<p style=\"font-size: 19.5px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<pre style=\"font-size: 19.5px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n &lt;-- Design Busy indicator here --&gt;\r\n &lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</pre>\r\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\r\n\r\n<pre style=\"font-size: 19.5px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\r\n/* Registering responders for prototype library\r\n If you are not using prototype library then\r\n there is no need of the next statement.\r\n*/\r\n Ajax.Responders.register({\r\n onCreate: function() {\r\n jQuery(\"#ajax_spinner\").show();\r\n },\r\n onComplete: function() {\r\n jQuery(\"#ajax_spinner\").hide();\r\n }\r\n });\r\n\r\n/* Registering responders for jQuery AJAX calls\r\n If you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\n there is no need of the next statement.\r\n*/\r\n\r\n jQuery(\"#ajax_spinner\").ajaxStart(function() {\r\n jQuery(this).show();\r\n });\r\n jQuery(\"#ajax_spinner\").ajaxStop(function() {\r\n jQuery(this).hide();\r\n });\r\n/* If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same */\r\n&lt;/script&gt;</pre>\r\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\r\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-5','','','2009-10-09 18:45:21','2009-10-09 13:15:21','',251,'http://www.intelligrape.com/blog/?p=256',0,'revision','',0),(258,13,'2009-10-09 18:51:06','2009-10-09 13:21:06','<p style=\"font-size: 19.5px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<p style=\"font-size: 19.5px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\"style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\n/* Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.\n*/\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});/* Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.\n*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n/*\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">If you are not using jQuery you can show/hide the div</p>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">using javascript(e.g. document.getElementById) to do the same</p>\n\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">*/\n&lt;/script&gt;\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-7','','','2009-10-09 18:51:06','2009-10-09 13:21:06','',251,'http://www.intelligrape.com/blog/?p=258',0,'revision','',0),(257,13,'2009-10-09 18:50:06','2009-10-09 13:20:06','<p style=\"font-size: 19.5px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<address style=\"font-size: 19.5px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\" </address> <address style=\"font-size: 19.5px; line-height: 28.5px; text-align: justify;\"> style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</address>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<address style=\"font-size: 19.5px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\n/* Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.\n*/\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});\n\n/* Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.\n*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n/*\n\n</address> <address style=\"font-size: 19.5px; line-height: 28.5px;\"> If you are not using jQuery you can show/hide the div </address> <address style=\"font-size: 19.5px; line-height: 28.5px;\">using javascript(e.g. document.getElementById) to do the same </address> <address style=\"font-size: 19.5px; line-height: 28.5px;\">*/\n&lt;/script&gt;</address>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\"></p>\n<p style=\"font-size: 19.5px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-6','','','2009-10-09 18:50:06','2009-10-09 13:20:06','',251,'http://www.intelligrape.com/blog/?p=257',0,'revision','',0),(259,13,'2009-10-09 18:52:36','2009-10-09 13:22:36','<p style=\"font-size: 12px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<p style=\"font-size: 12px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\"style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;\r\n<p style=\"font-size: 2px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<p style=\"font-size: 12px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\r\n/* Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.\r\n*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});/* Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n/*\r\n<p style=\"font-size: 12px; line-height: 28.5px;\">If you are not using jQuery you can show/hide the div</p>\r\n<p style=\"font-size: 12px; line-height: 28.5px;\">using javascript(e.g. document.getElementById) to do the same</p>\r\n\r\n<p style=\"font-size: 12px; line-height: 28.5px;\">*/\r\n&lt;/script&gt;\r\n<p style=\"font-size: 12px; line-height: 28.5px;\"></p>\r\n<p style=\"font-size: 12px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-8','','','2009-10-09 18:52:36','2009-10-09 13:22:36','',251,'http://www.intelligrape.com/blog/?p=259',0,'revision','',0),(260,13,'2009-10-09 18:54:20','2009-10-09 13:24:20','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 28.5px; text-align: justify;\">&lt;span id=\"ajax_spinner\"style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 28.5px;\">&lt;script type=\"text/javascript\"&gt;\r\n/* Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.\r\n*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});/* Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n/*\r\n<p style=\"font-size: 13px; line-height: 28.5px;\">If you are not using jQuery you can show/hide the div</p>\r\n<p style=\"font-size: 13px; line-height: 28.5px;\">using javascript(e.g. document.getElementById) to do the same</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 28.5px;\">*/\r\n&lt;/script&gt;\r\n<p style=\"font-size: 13px; line-height: 28.5px;\"></p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-9','','','2009-10-09 18:54:20','2009-10-09 13:24:20','',251,'http://www.intelligrape.com/blog/?p=260',0,'revision','',0),(261,13,'2009-10-09 18:56:43','2009-10-09 13:26:43','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 28.5px; text-align: justify;\"><span style=\"color: #339966;\">&lt;span id=\"ajax_spinner\"style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 28.5px;\"><span style=\"color: #339966;\">&lt;script type=\"text/javascript\"&gt;\r\n/* Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.\r\n*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});/* Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.\r\n*/</span>\r\n\r\n<span style=\"color: #339966;\">jQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n/*</span>\r\n<p style=\"font-size: 13px; line-height: 28.5px;\"><span style=\"color: #339966;\">If you are not using jQuery you can show/hide the divusing javascript(e.g. document.getElementById) to do the same</span></p>\r\n\r\n<p style=\"font-size: 13px; line-height: 28.5px;\"><span style=\"color: #339966;\">*/\r\n&lt;/script&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)','',0,'','inherit','open','open','','251-revision-10','','','2009-10-09 18:56:43','2009-10-09 13:26:43','',251,'http://www.intelligrape.com/blog/?p=261',0,'revision','',0),(263,13,'2009-10-09 19:02:20','2009-10-09 13:32:20','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 25px; text-align: justify;\"><span style=\"color: #339966;\">&lt;span id=\"ajax_spinner\"style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 25px;\"><span style=\"color: #339966;\">&lt;script type=\"text/javascript\"&gt;\r\n/* Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.\r\n*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});\r\n/* Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.\r\n*/</span>\r\n\r\n<span style=\"color: #339966;\">jQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n/*</span>\r\n<p style=\"font-size: 13px; line-height: 25px;\"><span style=\"color: #339966;\">If you are not using jQuery you can show/hide the div using javascript (e.g. document.getElementById) to do the same*/</span></p>\r\n&lt;/script&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-12','','','2009-10-09 19:02:20','2009-10-09 13:32:20','',251,'http://www.intelligrape.com/blog/?p=263',0,'revision','',0),(262,13,'2009-10-09 18:59:19','2009-10-09 13:29:19','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 25px; text-align: justify;\"><span style=\"color: #339966;\">&lt;span id=\"ajax_spinner\"style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<p style=\"font-size: 13px; line-height: 25px;\"><span style=\"color: #339966;\">&lt;script type=\"text/javascript\"&gt;\r\n/* Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.\r\n*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});/* Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.\r\n*/</span>\r\n\r\n<span style=\"color: #339966;\">jQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n/*</span>\r\n<p style=\"font-size: 13px; line-height: 25px;\"><span style=\"color: #339966;\">If you are not using jQuery you can show/hide the divusing javascript(e.g. document.getElementById) to do the same</span></p>\r\n\r\n<p style=\"font-size: 13px; line-height: 25px;\"><span style=\"color: #339966;\">*/\r\n&lt;/script&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-11','','','2009-10-09 18:59:19','2009-10-09 13:29:19','',251,'http://www.intelligrape.com/blog/?p=262',0,'revision','',0),(268,13,'2009-10-12 16:57:12','2009-10-12 11:27:12','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<code>&lt;script type=\"text/javascript\"&gt;\n\n/*Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.*/\n\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});\n\n/*Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n\n/*<code>If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\n&lt;/script&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\n\nBhagwat Kumar\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-17','','','2009-10-12 16:57:12','2009-10-12 11:27:12','',251,'http://www.intelligrape.com/blog/?p=268',0,'revision','',0),(265,13,'2009-10-12 16:51:34','2009-10-12 11:21:34','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library. Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<code>&lt;script type=\"text/javascript\"&gt;\r\n/*</code>\r\n\r\n<code> Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.\r\n*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});\r\n\r\n/* </code>\r\n\r\n<code> Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n/* </code>\r\n\r\n<code> If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same </code>\r\n\r\n<code> */\r\n&lt;/script&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-14','','','2009-10-12 16:51:34','2009-10-12 11:21:34','',251,'http://www.intelligrape.com/blog/?p=265',0,'revision','',0),(266,13,'2009-10-12 16:54:03','2009-10-12 11:24:03','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<code>&lt;script type=\"text/javascript\"&gt;</code><code> </code>\n\n<code>/*</code>\n\n<code>Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.\n*/\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});</code>\n\n/*\n\n<code> Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.\n*/</code>\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n/*\n\n<code> If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same </code>\n\n<code> */\n&lt;/script&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\nhttp://www.prototypejs.org/api/ajax/responders\nhttp://docs.jquery.com/Ajax/jQuery.ajax\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\n\nBhagwat Kumar\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-15','','','2009-10-12 16:54:03','2009-10-12 11:24:03','',251,'http://www.intelligrape.com/blog/?p=266',0,'revision','',0),(267,13,'2009-10-12 16:54:42','2009-10-12 11:24:42','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<code>&lt;script type=\"text/javascript\"&gt;</code><code> </code>\r\n\r\n<code>/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});</code>\r\n\r\n/*<code>Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/</code>\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n\r\n/*<code>If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-16','','','2009-10-12 16:54:42','2009-10-12 11:24:42','',251,'http://www.intelligrape.com/blog/?p=267',0,'revision','',0),(269,13,'2009-10-12 16:57:23','2009-10-12 11:27:23','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<code>&lt;script type=\"text/javascript\"&gt;\r\n\r\n/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/\r\n\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});\r\n\r\n/*Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n\r\n/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\nhttp://www.prototypejs.org/api/ajax/responders\r\nhttp://docs.jquery.com/Ajax/jQuery.ajax\r\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','',0,'','inherit','open','open','','251-revision-18','','','2009-10-12 16:57:23','2009-10-12 11:27:23','',251,'http://www.intelligrape.com/blog/?p=269',0,'revision','',0),(270,13,'2009-10-12 17:03:42','2009-10-12 11:33:42','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<code>&lt;script type=\"text/javascript\"&gt;</code>\n\n/*Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.*/\n\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});\n\n/*Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n\n/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\n&lt;/script&gt;\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\nhttp://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications (Thanks to Amit)\n\nBhagwat Kumar\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-19','','','2009-10-12 17:03:42','2009-10-12 11:33:42','',251,'http://www.intelligrape.com/blog/?p=270',0,'revision','',0),(272,13,'2009-10-12 17:05:56','2009-10-12 11:35:56','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\n\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\n&lt;-- Design Busy indicator here --&gt;\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\n&lt;/span&gt;</code>\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\n\n<code>&lt;script type=\"text/javascript\"&gt;</code>\n\n/*Registering responders for prototype library\nIf you are not using prototype library then\nthere is no need of the next statement.*/\n\nAjax.Responders.register({\nonCreate: function() {\njQuery(\"#ajax_spinner\").show();\n},\nonComplete: function() {\njQuery(\"#ajax_spinner\").hide();\n}\n});\n\n/*Registering responders for jQuery AJAX calls\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\nthere is no need of the next statement.*/\n\njQuery(\"#ajax_spinner\").ajaxStart(function() {\njQuery(this).show();\n});\njQuery(\"#ajax_spinner\").ajaxStop(function() {\njQuery(this).hide();\n});\n\n/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\n&lt;/script&gt;\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\n\nBhagwat Kumar\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-21','','','2009-10-12 17:05:56','2009-10-12 11:35:56','',251,'http://www.intelligrape.com/blog/?p=272',0,'revision','',0),(271,13,'2009-10-12 17:04:28','2009-10-12 11:34:28','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<code>&lt;script type=\"text/javascript\"&gt;</code>\r\n\r\n/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/\r\n\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});\r\n\r\n/*Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n\r\n/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-20','','','2009-10-12 17:04:28','2009-10-12 11:34:28','',251,'http://www.intelligrape.com/blog/?p=271',0,'revision','',0),(273,13,'2009-10-12 17:08:41','2009-10-12 11:38:41','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<code>&lt;script type=\"text/javascript\"&gt;</code>\r\n\r\n/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/\r\n\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});\r\n\r\n/*Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n\r\n/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-22','','','2009-10-12 17:08:41','2009-10-12 11:38:41','',251,'http://www.intelligrape.com/blog/?p=273',0,'revision','',0),(274,13,'2009-10-12 17:09:33','2009-10-12 11:39:33','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<code>&lt;script type=\"text/javascript\"&gt;</code>\r\n\r\n/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/\r\n\r\nAjax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});\r\n\r\n/*Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});\r\n\r\n/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-23','','','2009-10-12 17:09:33','2009-10-12 11:39:33','',251,'http://www.intelligrape.com/blog/?p=274',0,'revision','',0),(335,7,'2009-12-07 15:16:25','2009-12-07 09:46:25','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code which worked nicely for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass MyControllerTests extends GrailsUnitTestCase {	\r\n\r\n  protected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n  }	\r\n ...\r\n}	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','publish','open','open','','login-user-for-integration-test-when-using-jsecurity-plugin','','','2009-12-07 16:39:17','2009-12-07 11:09:17','',0,'http://www.intelligrape.com/blog/?p=335',0,'post','',1),(275,13,'2009-10-12 17:10:42','2009-10-12 11:40:42','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<span style=\"color: #ff6600;\"><code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code></span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<span style=\"color: #ff6600;\"><code>&lt;script type=\"text/javascript\"&gt;</code></span>\r\n\r\n<span style=\"color: #ff6600;\">/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/</span>\r\n\r\n<span style=\"color: #ff6600;\">Ajax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});</span>\r\n\r\n<span style=\"color: #ff6600;\">/*Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/</span>\r\n\r\n<span style=\"color: #ff6600;\">jQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});</span>\r\n\r\n<span style=\"color: #ff6600;\">/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-24','','','2009-10-12 17:10:42','2009-10-12 11:40:42','',251,'http://www.intelligrape.com/blog/?p=275',0,'revision','',0),(276,13,'2009-05-26 16:00:17','2009-05-26 10:30:17','<table border=\"0\" cellspacing=\"5\">\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: left; vertical-align: middle;\">You can create a customized, fully-interactive file tree using <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\"> jQuery File Tree plugin </a> Written by Cory S.N. LaViska. For a demo on File Explorer<a href=\"http://abeautifulsite.net/notebook_files/58/demo/\" target=\"_blank\"> click here.</a>\r\n\r\nHere are the quick steps to implement it in your application. For advanced information please go to the <a target=\"_blank\">plugin website</a> where you can find the detailed description of this plugin as well as links to demo, download etc pages.\r\n\r\nAt first glance this seems to be very lengthy blog but when you start copying and pasting the code shown here into your application you will get this lengthy explanation very useful.\r\n\r\nHere is a snapshot of what we are going to achieve in few minutes.</td>\r\n<td style=\"horizontal-align: right; vertical-align:top;\"><img title=\"screenshot1\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2009/05/screenshot1.png\" alt=\"File Explorer with context menu\" width=\"350\" height=\"270\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"2\" align=\"center\"><hr /></td>\r\n</tr>\r\n</tbody></table>\r\n<ol>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Install jquery plugin</span></h3>\r\n</li>\r\njQuery File Tree requires jQuery 1.2 or above.If you have already installed this plugin then you can skip this step.\r\nTo install jQuery plugin use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails install-plugin jquery</code></span>\r\n\r\nTo get the list of commands to manage plugins (eg. create, install, uninstall, list of plugins) use the following command :\r\n\r\n<span style=\"color: #ff6600;\"><code>grails --help | grep plugin</code></span>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Download jQuery File Tree plugin files</span></h3>\r\n</li>\r\nYou can download the required files from the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">plugins website</a> or <a href=\"http://abeautifulsite.net/notebook_files/58/jqueryFileTree.zip \" target=\"_blank\">Click here to download</a>.\r\n\r\nUnzip the downloaded zip file. The unzipped folder \'jqueryFileTree\' contains a folder \'connector\' that you can safely delete because we will write our own connector specific to grails.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">place the unzipped folder into web-app folder</span></h3>\r\n</li>\r\nUsing operating system file explorer tool move/copy the unzipped folder \'jqueryFileTree\' to the applications web-app folder. If you are not interested in such an easy step then you can move the jqueryFileTree.js file to web-app/js folder, jqueryFileTree.css file to web-app/css and all the files from jQueryFileTree/images to web-app/images folder and correspondingly change the reference to these files in gsp page we will be creating next. I assume you followed the easier way i.e. copied the entire folder into web-app folder.\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Decide the controller, action and gsp page</span></h3>\r\n</li>\r\nSuppose we have a controller \'FileBrowser\'(...grails-app/controllers/FileBrowserController.groovy) and its \'showBrowser\' action renders the view (we call it : .../grails-app/views/FileBrowser/FileBrowser.gsp). The controller looks like\r\n<code>\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\n//................\r\n}\r\n</span> </code>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create gsp page and customize it</span></h3>\r\nHere is the contents of \"/grails-app/views/FileBrowser/FileBrowser.gsp\" file :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\"> function YourFunctionToProcessThisFilePath(file){\r\nalert(\'You selected : \'+file);\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \'generateFileList.gsp\',    /*DESCRIPTION 2*/\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3*/\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n<ul>\r\n	<li><strong>DESCRIPTION #1</strong>: absoulute path of the folder which will be treated as root level folder in our file explorer. There exists a potential for malicious individuals to be able to view your entire directory structure by spoofing the root parameter. However you can control this from the script file described in DESCRIPTION #2.</li>\r\n	<li><strong>DESCRIPTION #2</strong>: connector file(server side script) that generates the list of files and subdirectories for the selected folder. This is a gsp file where you get the absolute path of the folder in dir attribute of params map for which the files and subfolders is to be found and output an unsorted list in the following format:\r\nWe will create this gsp page parallel to FileBrowser.gsp i.e. .../grails-app/views/FileBrowser/generateFileList.gsp in Step 6. Later we will move this logic into an action and hence no need of connector script (see step 8).</li>\r\n	<li><strong>DESCRIPTION #3</strong>: this javascript function is called with absolute path to the selectd file whenever a file is clicked in the file browser page.</li>\r\n	<li><strong>DESCRIPTION #4</strong>: The id of the div tag is used in jQuery. So it must match at both places.</li>\r\n</ul>\r\n</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create connector script</span></h3>\r\n</li>\r\n<code> Here is the code for connector script \"...grails-app/views/FileBrowser/generateFileList.gsp\"</code>\r\n<pre><span style=\"color: #ff6600;\"><code>&lt;%\r\nString dir = params?.dir\r\nif (dir == null) {\r\n    return;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\n    dir+=File.separator\r\n}\r\n\r\nFile f=new File(dir)\r\nif (f.exists()) {\r\n    List&lt;File&gt; files=[]\r\n\r\n    f.eachFile { File file-&gt;\r\n        if(!file.hidden)\r\n            files&lt;&lt;file\r\n    }\r\n\r\n    files.sort{File file-&gt; file.name.toUpperCase()}\r\n    StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n    // All dirs\r\n    files.each{File file-&gt;\r\n        if(file.directory){\r\n            output.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n        }\r\n    }\r\n    // All files\r\n    files.each{File file-&gt;\r\n        if(file.file){\r\n            int dotIndex = file.name.lastIndexOf(\'.\');\r\n            String ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\";\r\n            output.append(\"\"\"&lt;li class=\"file ext_${ext}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\");\r\n        }\r\n    }\r\n    output.append(\"&lt;/ul&gt;\");\r\n    println output.toString()\r\n}\r\n%&gt;\r\n</code></span></pre>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Test Your File Explorer</span></h3>\r\nIt\'s time to test your file explorer. If everything went perfectly then you have successfully created your file explorer. Type the url of the action responsible for rendering FileBrowser.gsp.You can also experiment with various Parameters that are passed as an object to the fileTree() function in FileBrowser.gsp. List of Valid options can be found at the <a href=\"http://abeautifulsite.net/notebook/58\" target=\"_blank\">pluging website</a> under \'Configuring the File Tree\' heading.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Moving the connector script  to an action of the controller</span></h3>\r\nHere is the modified controller FileBrowserController having an action generateFileList. This contains the same code as in generateFileList with few new statements appended and obviously &lt;% and %&gt; has been removed.The modified lines has been shown in different color.\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\ndef showBrowser = {\r\n//.................\r\nrender( view : \'FileBrowser\')\r\n}\r\ndef generateFileList={\r\nString dir = params?.dir\r\nif (dir == null) {\r\nreturn;\r\n}\r\n/* you can put here your own custom check with dir variable to protect from malicious request.  */\r\nif(!dir.endsWith(File.separator)){\r\ndir+=File.separator\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">File f=new File(dir)\r\nif (f.exists()) {\r\nList&lt;File&gt; files=[]</span>\r\n\r\n<span style=\"color: #ff6600;\">f.eachFile { File file-&gt;\r\nif(!file.hidden)\r\nfiles&lt;&lt;file\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">files.sort{File file-&gt;\r\nfile.name.toUpperCase()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">StringBuffer output=new StringBuffer(\'&lt;ul class=\"jqueryFileTree\" style=\"display: none;\"&gt;\')\r\n// All dirs\r\nfiles.each{File file-&gt;\r\nif(file.directory){\r\noutput.append(\"\"\"&lt;li class=\"directory collapsed\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name+File.separator}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\n// All files\r\nfiles.each{File file-&gt;\r\nif(file.file){\r\nint dotIndex = file.name.lastIndexOf(\'.\')\r\nString ext = dotIndex &gt; 0 ? file.name.substring(dotIndex + 1) : \"\"\r\noutput.append(\"\"\"&lt;li class=\"file ext_${ext}\" id=\"${dir+file.name}\"&gt;&lt;a href=\"#\" rel=\"${dir+file.name}\"&gt;${file.name}&lt;/a&gt;&lt;/li&gt;\"\"\")\r\n}\r\n}\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #333399;\">OutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\nout.flush()\r\nout.close()</span>\r\n}\r\n}\r\n//................\r\n} </span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Making changes to FileBrowser.gsp to use generateFileList action instead of generateFileList.gsp file</span></h3>\r\nHere are the modified lines of FileBrowser.gsp file (Modified lines shown in different color ) :\r\n\r\n<span style=\"color: #ff6600;\"> $(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',\r\nscript: <span style=\"color: #333399;\">\"${createLink(action:\'generateFileList\')}\", /* you can also explicitly specify the controller */</span>\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\n</span>\r\n\r\nAfter this change, you can test your File Explorer and if everything works perfectly, you can safely delete the file generateFileList.gsp.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Forwarding to an action when a file is clicked</span></h3>\r\nTo do so we will modify FileBrowser.gsp page to include a form and a hidden field for absolute path of the selected file.\r\nThe modified FileBrowser.gsp(with modified lines shown in different color) is now :\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\n<span style=\"color: #333399;\">document.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n</span>}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n<span style=\"color: #333399;\"> &lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nNow add an action \'processThisFile\' or whatever you have used as forms action in FileBrowser.gsp file. Here is the modified FileBrowserController :\r\n\r\n<span style=\"color: #ff6600;\">class FileBrowserController {\r\n//...............\r\n<span style=\"color: #333399;\">def processThisFile={\r\nprintln params.selectedFile\r\nrender(params.selectedFile)\r\n}</span></span>\r\n\r\n<span style=\"color: #ff9900;\">//................\r\n}</span></li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Installing the plugin for Context Menu(Right Click)</span></h3>\r\nNow we are going to add Context Menu functionality to our File Explorer. For this purpose we will be using one more plugin <a href=\"http://abeautifulsite.net/notebook/80\" target=\"_blank\">jQuery Context Menu Plugin</a> Written by Cory S.N. LaViska(same author has written jQuery File Tree plugin). For advanced details go to the <a href=\"(http://abeautifulsite.net/notebook/80\" target=\"_blank\">plugin website</a> where you can see a demo as well as download necessary files to use this plugin. <a href=\"http://abeautifulsite.net/notebook_files/80/jquery.contextMenu.zip\" target=\"_blank\">Click here to download the plugin.</a>\r\n\r\nAfter you have downloaded the zip file, unzip it and copy it in applications web-app folder as you did for jQuery File Tree Plugin in Step 3.</li>\r\n	<li>\r\n<h3><span style=\"text-decoration: underline;\">Create context menu options by Modifying FileBrowser.gsp file</span></h3>\r\ncreate a list in FileBrowser.gsp that will be the markup for your context menu:\r\nActions are specified in the href attribute, preceeded by a # symbol. When selected, this is what will be passed back to the action parameter in the callback. You can add class attributes to the list items to assist with styling, but they have no functional meaning. Thus, class names do not have to correspond with actions.\r\n\r\nLet\'s create a contextMenu (UL with id myFolderMenu) with four options <em>cut, paste, rename and delete </em>also a separator beteween paste and rename option which is displayed whenever a folder is <strong>right-clicked</strong>. When you click an option from the displayed context menu the javascript function <em>HandleFolderContextMenu</em> is called with parameters action and folderPath. action contains the href attribute excluding # character of the selected context menu option and folderPath contains the absolute path of the selected folder i.e. on which it was right clicked.\r\n\r\nSimilarly a contextMenu(UL with id myFileMenu) with two options Open... and Properties which is displayed whenever a file is right-clicked has been created. Like Context Menu for folders, this time <em>HandleFileContextMenu</em> javascript function is called with action and filePath parameters.\r\n\r\nYou can follow the similar steps as described in Step 10 to forward request to an action where it will be processed depending on the action and absolute path to the selected file or folder.\r\n\r\n<span style=\"color: #ff6600;\">&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;File Explorer&lt;/title&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'js/jquery\', file: \'jquery-1.3.2.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jqueryFileTree\', file: \'jqueryFileTree.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;link rel=\"stylesheet\" href=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.css\')}\"&gt;\r\n&lt;script src=\"${createLinkTo(dir: \'jquery.contextMenu\', file: \'jquery.contextMenu.js\')}\" type=\"text/javascript\"&gt;&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;script type=\"text/javascript\"&gt;\r\nfunction HandleFolderContextMenu(action, folderPath){\r\nalert(action+\'nn Folder Path : \'+folderPath);\r\n}\r\nfunction HandleFileContextMenu(action, filePath){\r\nalert(action+\'nn File Path : \'+filePath);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">function showMenu(){\r\n$(\'.directory&gt;a\').contextMenu({\r\nmenu: \'myFolderMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar folderPath=$(el).attr(\'rel\');\r\nHandleFolderContextMenu(action, folderPath);\r\n}\r\n);\r\n$(\'.file&gt;a\').contextMenu({\r\nmenu: \'myFileMenu\'\r\n},\r\nfunction(action, el, pos) {\r\nvar filePath=$(el).attr(\'rel\');\r\nHandleFileContextMenu(action, filePath);\r\n}\r\n);\r\n}</span>\r\n\r\n<span style=\"color: #0000ff;\">&lt;/script&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">&lt;script type=\"text/javascript\"&gt;</span>\r\n\r\n<span style=\"color: #ff6600;\">function YourFunctionToProcessThisFilePath(file){\r\n//        alert(\'You selected : \'+file);\r\ndocument.getElementById(\'selectedFile\').value = file\r\ndocument.getElementById(\'fileBrowserForm\').submit()\r\n}</span>\r\n\r\n<span style=\"color: #ff6600;\">$(document).ready(function() {\r\n$(\'#file_list\').fileTree({\r\nroot:\'/\',    /*DESCRIPTION 1*/\r\nscript: \"${createLink(action:\'generateFileList\')}\", //\'generateFileList.gsp\',\r\nexpandSpeed: 1000,\r\ncollapseSpeed: 1000,\r\nmultiFolder: false\r\n}, function(file) {\r\nYourFunctionToProcessThisFilePath(file); /* DESCRIPTION 3 */\r\n});\r\n});\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;h1&gt;File Explorer&lt;/h1&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"file_list\"&gt;    &lt;!-- DESCRIPTION #4 --&gt;\r\n&lt;%=\"Empty\"%&gt;\r\n&lt;/div&gt;\r\n&lt;g:form name=\"fileBrowserForm\" action=\"processThisFile\" method=\"post\"&gt;\r\n&lt;g:hiddenField name=\"selectedFile\" /&gt;\r\n&lt;/g:form&gt;\r\n<span style=\"color: #0000ff;\">&lt;ul id=\"myFolderMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"copy\"&gt;&lt;a href=\"#copy\"&gt;Copy&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"paste\"&gt;&lt;a href=\"#paste\"&gt;Paste&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"separator rename\"&gt;&lt;a href=\"#rename\"&gt;Rename&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"deleteFolder\"&gt;&lt;a href=\"#deleteFolder\"&gt;Delete&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;ul id=\"myFileMenu\" class=\"contextMenu\"&gt;\r\n&lt;li class=\"open\"&gt;&lt;a href=\"#open\"&gt;Open...&lt;/a&gt;&lt;/li&gt;\r\n&lt;li class=\"properties\"&gt;&lt;a href=\"#properties\"&gt;Properties&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</span>&lt;/body&gt;\r\n&lt;/html&gt;</span>\r\n\r\nFinally modify generateFileList action by adding a statement output.append(\"<script type=\"text/javascript\"><!--\r\nshowMenu();\r\n// --></script>\") as shown below the modified lines of generateFileList action to get the changes made to FileBrowser.gsp to work. It just calls the showMenu javascript function defined in FileBrowser.gsp which in turn enables the context menu for the explored folder.\r\n\r\n<span style=\"color: #ff6600;\"><strong>def generateFileList={\r\n//.......................\r\noutput.append(\"&lt;/ul&gt;\")\r\n<span style=\"color: #0000ff;\">output.append(\"&lt;script&gt;showMenu(); &lt;/script&gt;\")</span>\r\nOutputStream out = response.getOutputStream()\r\nout.write (output.toString().getBytes())\r\n//.......................\r\n}</strong></span></li>\r\n</ol>','Creating File Explorer with Context Menu using jQuery File Tree Plugin',0,'','inherit','open','open','','61-revision-55','','','2009-05-26 16:00:17','2009-05-26 10:30:17','',61,'http://www.intelligrape.com/blog/?p=276',0,'revision','',0),(277,7,'2009-11-04 00:47:25','2009-11-03 19:17:25','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\nfunction getMerchantProvider(cardNo){                      //cardNo is the credit card number\r\n    var cards = new Array();\r\n    cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n    cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n    cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n    cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n    cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n    cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n    cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n    cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n    cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n    cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n    cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n    cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n        for (i=0; i&lt;prefix.length; i++) {\r\n             var exp = new RegExp (\"^\" + prefix[i]);\r\n             if (exp.test (cardNo))\r\n                  return cards[cardType].cardName;            \r\n       }\r\n    }\r\n     return \"Invalid\";       \r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','publish','open','open','','identify-merchant-provider-from-the-given-credit-card-no','','','2009-11-04 09:04:52','2009-11-04 03:34:52','',0,'http://www.intelligrape.com/blog/?p=277',0,'post','',0),(278,7,'2009-11-04 00:39:27','2009-11-03 19:09:27','Hi Friends,\n\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding credit card details in the system and yet we needed to know the merchant provider. The following is the code helped:\n&lt;div class=\"wp_syntax\"&gt;&lt;div class=\"code\"&gt;&lt;pre class=\"javascript\"&gt;\n//cardNo is the credit card number\nfunction getMerchantProvider(cardNo,id){\n    var cards = new Array();\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\n    var prefix\n    var cardType\n    var found=false;\n    for(cardType=0; cardType&lt;cards.length; cardType++){\n        prefix = cards[cardType].prefixes.split(\",\");\n     for (i=0; i&lt;prefix.length; i++) {\n      var exp = new RegExp (\"^\" + prefix[i]);\n      if (exp.test (cardNo)){\n                found=true;\n                break;\n            }\n     }\n        if(found==true)\n            break;\n    }\n    if(found==true){\n         return cards[cardType].cardName;\n    }else{\n         return \"Invalid\";       \n    }\n}\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\nThe above function returns merchant provider name if matching pattern is found and \"Invalid\" if not. This function doesn\'t validates the credit card no.\n\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\n\nThanks!\n\n~~Amit Jain~~\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision','','','2009-11-04 00:39:27','2009-11-03 19:09:27','',277,'http://www.intelligrape.com/blog/?p=278',0,'revision','',0),(280,7,'2009-11-04 00:41:27','2009-11-03 19:11:27','Hi Friends,\n\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding credit card details in the system and yet we needed to know the merchant provider. The following is the code helped:\n\n&lt;\n&lt;div class=\"wp_syntax\"&gt;&lt;div class=\"code\"&gt;&lt;pre class=\"groovy\"&gt;\n//cardNo is the credit card number\nfunction getMerchantProvider(cardNo,id){\n    var cards = new Array();\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\n    var prefix\n    var cardType\n    var found=false;\n    for(cardType=0; cardType&lt;cards.length; cardType++){\n        prefix = cards[cardType].prefixes.split(\",\");\n     for (i=0; i&lt;prefix.length; i++) {\n      var exp = new RegExp (\"^\" + prefix[i]);\n      if (exp.test (cardNo)){\n                found=true;\n                break;\n            }\n     }\n        if(found==true)\n            break;\n    }\n    if(found==true){\n         return cards[cardType].cardName;\n    }else{\n         return \"Invalid\";       \n    }\n}\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\nThe above function returns merchant provider name if matching pattern is found and \"Invalid\" if not. This function doesn\'t validates the credit card no.\n\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\n\nThanks!\n\n~~Amit Jain~~\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-3','','','2009-11-04 00:41:27','2009-11-03 19:11:27','',277,'http://www.intelligrape.com/blog/?p=280',0,'revision','',0),(279,7,'2009-11-04 00:40:37','2009-11-03 19:10:37','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding credit card details in the system and yet we needed to know the merchant provider. The following is the code helped:\r\n&lt;div class=\"wp_syntax\"&gt;&lt;div class=\"code\"&gt;&lt;pre class=\"javascript\"&gt;\r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\r\nThe above function returns merchant provider name if matching pattern is found and \"Invalid\" if not. This function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-2','','','2009-11-04 00:40:37','2009-11-03 19:10:37','',277,'http://www.intelligrape.com/blog/?p=279',0,'revision','',0),(281,7,'2009-11-04 00:42:35','2009-11-03 19:12:35','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding credit card details in the system and yet we needed to know the merchant provider. The following is the code helped:\r\n<blockquote>\r\n&lt;div class=\"wp_syntax\"&gt;&lt;div class=\"code\"&gt;&lt;pre class=\"groovy\"&gt;\r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\r\n\r\nThe above function returns merchant provider name if matching pattern is found and \"Invalid\" if not. This function doesn\'t validates the credit card no.</blockquote>\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-4','','','2009-11-04 00:42:35','2009-11-03 19:12:35','',277,'http://www.intelligrape.com/blog/?p=281',0,'revision','',0),(282,7,'2009-11-04 00:44:27','2009-11-03 19:14:27','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding credit card details in the system and yet we needed to know the merchant provider. The following is the code helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and \"Invalid\" if not. This function doesn\'t validates the credit card no.\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-5','','','2009-11-04 00:44:27','2009-11-03 19:14:27','',277,'http://www.intelligrape.com/blog/?p=282',0,'revision','',0),(283,7,'2009-11-04 00:44:58','2009-11-03 19:14:58','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding credit card details in the system and yet we needed to know the merchant provider. The following is the code helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and \"Invalid\" if not. This function doesn\'t validates the credit card no.\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-6','','','2009-11-04 00:44:58','2009-11-03 19:14:58','',277,'http://www.intelligrape.com/blog/?p=283',0,'revision','',0),(284,7,'2009-11-04 00:47:00','2009-11-03 19:17:00','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-7','','','2009-11-04 00:47:00','2009-11-03 19:17:00','',277,'http://www.intelligrape.com/blog/?p=284',0,'revision','',0),(285,7,'2009-11-04 00:47:25','2009-11-03 19:17:25','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-8','','','2009-11-04 00:47:25','2009-11-03 19:17:25','',277,'http://www.intelligrape.com/blog/?p=285',0,'revision','',0),(286,7,'2009-11-04 09:04:46','2009-11-04 03:34:46','Hi Friends,\n\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\n<blockquote>\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \nfunction getMerchantProvider(cardNo){                      //cardNo is the credit card number\n    var cards = new Array();\n    cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\n    cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\n    cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\n    cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\n    cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\n    cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\n    cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\n    cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\n    cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\n    cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\n    cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\n    cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\n    var prefix\n    var cardType\n\n    for(cardType=0; cardType&lt;cards.length; cardType++){\n        prefix = cards[cardType].prefixes.split(\",\");\n        for (i=0; i&prefix.length; i++) {\n             var exp = new RegExp (\"^\" + prefix[i]);\n             if (exp.test (cardNo))\n                  return cards[cardType].cardName;            \n       }\n    }\n     return \"Invalid\";       \n}\n</pre></div></div>\n</blockquote>\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\n\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\n\nThanks!\n\n~~Amit Jain~~\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-autosave','','','2009-11-04 09:04:46','2009-11-04 03:34:46','',277,'http://www.intelligrape.com/blog/?p=286',0,'revision','',0),(288,7,'2009-11-04 00:50:34','2009-11-03 19:20:34','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\nfunction getMerchantProvider(cardNo){                      //cardNo is the credit card number\r\n    var cards = new Array();\r\n    cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n    cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n    cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n    cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n    cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n    cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n    cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n    cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n    cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n    cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n    cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n    cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-10','','','2009-11-04 00:50:34','2009-11-03 19:20:34','',277,'http://www.intelligrape.com/blog/?p=288',0,'revision','',0),(287,7,'2009-11-04 00:49:22','2009-11-03 19:19:22','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\n//cardNo is the credit card number\r\nfunction getMerchantProvider(cardNo,id){\r\n    var cards = new Array();\r\n    cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n    cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n    cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n    cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n    cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n    cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n    cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n    cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n    cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n    cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n    cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n    cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n    var found=false;\r\n    for(cardType=0; cardType&lt;cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n     for (i=0; i&lt;prefix.length; i++) {\r\n      var exp = new RegExp (\"^\" + prefix[i]);\r\n      if (exp.test (cardNo)){\r\n                found=true;\r\n                break;\r\n            }\r\n     }\r\n        if(found==true)\r\n            break;\r\n    }\r\n    if(found==true){\r\n         return cards[cardType].cardName;\r\n    }else{\r\n         return \"Invalid\";       \r\n    }\r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-9','','','2009-11-04 00:49:22','2009-11-03 19:19:22','',277,'http://www.intelligrape.com/blog/?p=287',0,'revision','',0),(289,7,'2009-11-04 09:02:17','2009-11-04 03:32:17','Hi Friends,\r\n\r\nI was working on the financial application, where the user doesn\'t want to select merchant provider while feeding in credit card details and yet we needed to know the merchant provider. Following is the code that helped:\r\n<blockquote>\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"javascript\"> \r\nfunction getMerchantProvider(cardNo){                      //cardNo is the credit card number\r\n    var cards = new Array();\r\n    cards [0] = {cardName: \"Visa\",prefixes: \"4\"};\r\n    cards [1] = {cardName: \"Mastercard\", prefixes: \"51,52,53,54,55\"};\r\n    cards [2] = {cardName: \"DinersClub\", prefixes: \"300,301,302,303,304,305,36,38,55\"};\r\n    cards [3] = {cardName: \"CarteBlanche\", prefixes: \"300,301,302,303,304,305,36,38\"};\r\n    cards [4] = {cardName: \"American Express\", prefixes: \"34,37\"};\r\n    cards [5] = {cardName: \"Discovery\",  prefixes: \"6011,650\"};\r\n    cards [6] = {cardName: \"JCB\", prefixes: \"3,1800,2131\"};\r\n    cards [7] = {cardName: \"enRoute\", prefixes: \"2014,2149\"};\r\n    cards [8] = {cardName: \"Solo\", prefixes: \"6334, 6767\"};\r\n    cards [9] = {cardName: \"Switch\", prefixes: \"4903,4905,4911,4936,564182,633110,6333,6759\"};\r\n    cards [10] = {cardName: \"Maestro\", prefixes: \"5020,6\"};\r\n    cards [11] = {cardName: \"VisaElectron\", prefixes: \"417500,4917,4913\"};\r\n    var prefix\r\n    var cardType\r\n\r\n    for(cardType=0; cardType<cards.length; cardType++){\r\n        prefix = cards[cardType].prefixes.split(\",\");\r\n        for (i=0; i<prefix.length; i++) {\r\n             var exp = new RegExp (\"^\" + prefix[i]);\r\n             if (exp.test (cardNo))\r\n                  return cards[cardType].cardName;            \r\n       }\r\n    }\r\n     return \"Invalid\";       \r\n}\r\n</pre></div></div>\r\n</blockquote>\r\nThe above function returns merchant provider name if matching pattern is found and Invalid if not. Please make a note, this function doesn\'t validates the credit card no.\r\n\r\nFor the credit card number validation I used jquery extended validation plugin for credit card, which also needed to know the merchant provider for validation so this code helped. Extended credit card validation plugin can be found at <a href=\"http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx\">http://www.ihwy.com/labs/jquery-validate-credit-card-extension.aspx</a>\r\n\r\nThanks!\r\n\r\n~~Amit Jain~~\r\n<a href=\"mailto:amit@intelligrape.com\">amit@intelligrape.com</a>\r\nIntelliGrape Softwares','Identify merchant provider from the given credit card no.',0,'','inherit','open','open','','277-revision-11','','','2009-11-04 09:02:17','2009-11-04 03:32:17','',277,'http://www.intelligrape.com/blog/?p=289',0,'revision','',0),(290,7,'2009-11-05 00:30:34','2009-11-04 19:00:34','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;\r\n\r\n</pre>\r\n</div>\r\n</div>\r\nNote :If you use in-memory database you may not need to follow this step.\r\n\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. Otherwise there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','publish','open','open','','grails-few-tips-for-writing-integration-tests','','','2009-11-05 09:59:44','2009-11-05 04:29:44','',0,'http://www.intelligrape.com/blog/?p=290',0,'post','',3),(291,7,'2009-11-05 00:18:44','2009-11-04 18:48:44',' Just thought I would share with you few tips or key points we should remember while writing integration test cases:\n\n1. Flush and clear the session object for every single test case for example\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n	import org.codehaus.groovy.grails.commons.ApplicationHolder\n \n	class FooTests extends GroovyTestCase {\n	  def sessionFactory \n	  void setUp() {\n	    sessionFactory.currentSession.flush()\n	    sessionFactory.currentSession.clear()\n	  }\n	}\n</pre></div></div>\n2. Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, to ensure that all test passes.\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n	drop database <MyTestDatabase>; \n	create database <MyTestDatabase>; \n\n3. Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\n	 void testAccountService_addSavingsAccount() {...}\n         void testAccountService_addCheckingAccount() {...} \n	 void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions\n   This would make your test cases more understandable and focussed on individual task.\n\n4. Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\n\nLets have a look at the sample example for Integration test written for the controller:\n\nclass AccountControllerTests extends GrailsUnitTestCase {\n    def accountService\n    def sessionFactory\n    def renderMap\n    def controller\n\n    protected void setUp() {\n        super.setUp()\n        controller = new AccountController()\n        controller.accountService = accountService\n        sessionFactory.currentSession.flush()\n        sessionFactory.currentSession.clear()\n        AccountController.metaClass.render = {Map map ->	//This is to access model when view or template is rendered in the controller\n            renderMap = map\n        }\n    }\n   public void testSave() {\n        def oldCount = Account.list().size()\n        loadParams()\n        controller.save()\n\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template \n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\n    }\n\n   private void loadParams() {\n        def customer = Customer.list()[0]\n        def params = [accountUse: AccountDepositType.SAVINGS.id, routeTransit: \'789456124\', accountNumber: \'23444\', accountType: AccountType.ACH.id, partyId: customer.party.id.toString(), customerId: customer.id.toString()]\n        controller.params.putAll(params)\n    }\n}\n\nHope this helped!\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision','','','2009-11-05 00:18:44','2009-11-04 18:48:44','',290,'http://www.intelligrape.com/blog/?p=291',0,'revision','',0),(292,7,'2009-11-05 00:19:44','2009-11-04 18:49:44',' Just thought I would share with you few tips or key points we should remember while writing integration test cases:\n\n1. Flush and clear the session object for every single test case for example\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n	import org.codehaus.groovy.grails.commons.ApplicationHolder\n \n	class FooTests extends GroovyTestCase {\n	  def sessionFactory \n	  void setUp() {\n	    sessionFactory.currentSession.flush()\n	    sessionFactory.currentSession.clear()\n	  }\n	}\n</pre></div></div>\n2. Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, to ensure that all test passes.\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n	drop database <MyTestDatabase>; \n	create database <MyTestDatabase>; \n</pre></div></div>\n3. Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\n	 void testAccountService_addSavingsAccount() {...}\n         void testAccountService_addCheckingAccount() {...} \n	 void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions\n</pre></div></div>\n   This would make your test cases more understandable and focussed on individual task.\n\n4. Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\n\nLets have a look at the sample example for Integration test written for the controller:\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">\nclass AccountControllerTests extends GrailsUnitTestCase {\n    def accountService\n    def sessionFactory\n    def renderMap\n    def controller\n\n    protected void setUp() {\n        super.setUp()\n        controller = new AccountController()\n        controller.accountService = accountService\n        sessionFactory.currentSession.flush()\n        sessionFactory.currentSession.clear()\n        AccountController.metaClass.render = {Map map ->	//This is to access model when view or template is rendered in the controller\n            renderMap = map\n        }\n    }\n   public void testSave() {\n        def oldCount = Account.list().size()\n        loadParams()\n        controller.save()\n\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template \n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\n    }\n\n   private void loadParams() {\n        def customer = Customer.list()[0]\n        def params = [accountUse: AccountDepositType.SAVINGS.id, routeTransit: \'789456124\', accountNumber: \'23444\', accountType: AccountType.ACH.id, partyId: customer.party.id.toString(), customerId: customer.id.toString()]\n        controller.params.putAll(params)\n    }\n}\n</pre></div></div>\nHope this helped!\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-2','','','2009-11-05 00:19:44','2009-11-04 18:49:44','',290,'http://www.intelligrape.com/blog/?p=292',0,'revision','',0),(295,7,'2009-11-05 00:27:34','2009-11-04 18:57:34','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ApplicationHolder\r\n\r\nclass FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database ;\r\ncreate database ;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-5','','','2009-11-05 00:27:34','2009-11-04 18:57:34','',290,'http://www.intelligrape.com/blog/?p=295',0,'revision','',0),(293,7,'2009-11-05 00:21:46','2009-11-04 18:51:46','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ApplicationHolder\r\n\r\nclass FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database ;\r\ncreate database ;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">	 void testAccountService_addSavingsAccount() {...}\r\n         void testAccountService_addCheckingAccount() {...}\r\n	 void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def customer = Customer.list()[0]\r\n        def params = [accountUse: AccountDepositType.SAVINGS.id, routeTransit: \'789456124\', accountNumber: \'23444\', accountType: AccountType.ACH.id, partyId: customer.party.id.toString(), customerId: customer.id.toString()]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-3','','','2009-11-05 00:21:46','2009-11-04 18:51:46','',290,'http://www.intelligrape.com/blog/?p=293',0,'revision','',0),(294,7,'2009-11-05 00:22:21','2009-11-04 18:52:21','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ApplicationHolder\r\n\r\nclass FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database ;\r\ncreate database ;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def customer = Customer.list()[0]\r\n        def params = [accountUse: AccountDepositType.SAVINGS.id, routeTransit: \'789456124\', accountNumber: \'23444\', accountType: AccountType.ACH.id, partyId: customer.party.id.toString(), customerId: customer.id.toString()]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-4','','','2009-11-05 00:22:21','2009-11-04 18:52:21','',290,'http://www.intelligrape.com/blog/?p=294',0,'revision','',0),(296,7,'2009-11-05 00:29:20','2009-11-04 18:59:20','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ApplicationHolder\r\n\r\nclass FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database ;\r\ncreate database ;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-6','','','2009-11-05 00:29:20','2009-11-04 18:59:20','',290,'http://www.intelligrape.com/blog/?p=296',0,'revision','',0),(297,7,'2009-11-05 09:54:25','2009-11-05 04:24:25','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\n\n1.  Flush and clear the session object for every single test case for example\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\n  def sessionFactory\n  void setUp() {\n    sessionFactory.currentSession.flush()\n    sessionFactory.currentSession.clear()\n  }\n}</pre>\n</div>\n</div>\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\ncreate database &lt;myTestDatabase&gt;;\n\nNote :If you use in-memory database you don\'t need to follow this step.</pre>\n</div>\n</div>\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\n void testAccountService_addCheckingAccount() {...}\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\n</div>\n</div>\nThis would make your test cases more understandable and focussed on individual task.\n\n4.  Avoid making your test case depedent upon the data. Otherwise there is high probability that it would break if any changes were made to the data\n\nLets have a look at the sample code for Integration test written for the controller:\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\n    def accountService\n    def sessionFactory\n    def renderMap\n    def controller\n\n    protected void setUp() {\n        super.setUp()\n        controller = new AccountController()\n        controller.accountService = accountService\n        sessionFactory.currentSession.flush()\n        sessionFactory.currentSession.clear()\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\n            renderMap = map\n        }\n    }\n   public void testSave() {\n        def oldCount = Account.list().size()\n        loadParams()\n        controller.save()\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\n    }\n\n   private void loadParams() {\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\n        controller.params.putAll(params)\n    }\n}</pre>\n</div>\n</div>\nHope this helped!\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-autosave','','','2009-11-05 09:54:25','2009-11-05 04:24:25','',290,'http://www.intelligrape.com/blog/?p=297',0,'revision','',0),(301,7,'2009-11-05 09:50:21','2009-11-05 04:20:21','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. Otherwise there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-10','','','2009-11-05 09:50:21','2009-11-05 04:20:21','',290,'http://www.intelligrape.com/blog/?p=301',0,'revision','',0),(298,7,'2009-11-05 00:30:34','2009-11-04 19:00:34','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ApplicationHolder\r\n\r\nclass FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database ;\r\ncreate database ;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-7','','','2009-11-05 00:30:34','2009-11-04 19:00:34','',290,'http://www.intelligrape.com/blog/?p=298',0,'revision','',0),(300,7,'2009-11-05 00:33:14','2009-11-04 19:03:14','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-9','','','2009-11-05 00:33:14','2009-11-04 19:03:14','',290,'http://www.intelligrape.com/blog/?p=300',0,'revision','',0),(299,7,'2009-11-05 00:32:26','2009-11-04 19:02:26','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">import org.codehaus.groovy.grails.commons.ApplicationHolder\r\n\r\nclass FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. As there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-8','','','2009-11-05 00:32:26','2009-11-04 19:02:26','',290,'http://www.intelligrape.com/blog/?p=299',0,'revision','',0),(302,7,'2009-11-05 09:52:56','2009-11-05 04:22:56','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;\r\n\r\nNote :If you use in-memory database you don\'t need to follow this step.</pre>\r\n</div>\r\n</div>\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. Otherwise there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-11','','','2009-11-05 09:52:56','2009-11-05 04:22:56','',290,'http://www.intelligrape.com/blog/?p=302',0,'revision','',0),(303,7,'2009-11-05 09:54:56','2009-11-05 04:24:56','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;\r\n\r\n</pre>\r\n</div>\r\n</div>\r\nNote :If you use in-memory database you don\'t need to follow this step.\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. Otherwise there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-12','','','2009-11-05 09:54:56','2009-11-05 04:24:56','',290,'http://www.intelligrape.com/blog/?p=303',0,'revision','',0),(304,7,'2009-11-05 09:55:36','2009-11-05 04:25:36','Just thought I would share with you few tips or key points we should remember while writing integration test cases:\r\n\r\n1.  Flush and clear the session object for every single test case for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class FooTests extends GroovyTestCase {\r\n  def sessionFactory\r\n  void setUp() {\r\n    sessionFactory.currentSession.flush()\r\n    sessionFactory.currentSession.clear()\r\n  }\r\n}</pre>\r\n</div>\r\n</div>\r\n2.  Drop and create the test database before you run integration test: Recently I found, after commiting my integration tests in the repository, some started failing and to my surprise, at the same time that failing test passed on my machine. Later I discovered it was because of some database issue. Since then I have made it a practice to drop and recreate the database again before commiting it to the repository, and then run the test cases to ensure that all test passes.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">drop database &lt;myTestDatabase&gt;;\r\ncreate database &lt;myTestDatabase&gt;;\r\n\r\n</pre>\r\n</div>\r\n</div>\r\nNote :If you use in-memory database you don\'t need to follow this step.\r\n\r\n3.  Make different test cases to test different methods or even parts of it defined in a controller or a service: for example\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\"> void testAccountService_addSavingsAccount() {...}\r\n void testAccountService_addCheckingAccount() {...}\r\n void testAccountService_addSavingsAccount_invalidName() {...}  //to test the expected exceptions</pre>\r\n</div>\r\n</div>\r\nThis would make your test cases more understandable and focussed on individual task.\r\n\r\n4.  Avoid making your test case depedent upon the data. Otherwise there is high probability that it would break if any changes were made to the data\r\n\r\nLets have a look at the sample code for Integration test written for the controller:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class AccountControllerTests extends GrailsUnitTestCase {\r\n    def accountService\r\n    def sessionFactory\r\n    def renderMap\r\n    def controller\r\n\r\n    protected void setUp() {\r\n        super.setUp()\r\n        controller = new AccountController()\r\n        controller.accountService = accountService\r\n        sessionFactory.currentSession.flush()\r\n        sessionFactory.currentSession.clear()\r\n        AccountController.metaClass.render = {Map map -&gt;	//This is to access model when view or template is rendered in the controller\r\n            renderMap = map\r\n        }\r\n    }\r\n   public void testSave() {\r\n        def oldCount = Account.list().size()\r\n        loadParams()\r\n        controller.save()\r\n        assertEquals \"Created a new account\", renderMap.model.status //accessing model values rendered with view/template\r\n        assertEquals(oldCount + 1, Account.list().size())   //not being dependent on the data\r\n    }\r\n\r\n   private void loadParams() {\r\n        def params = [routeTransit: \'789456124\', accountNumber: \'23444\', accountType: \"ACH\",...]\r\n        controller.params.putAll(params)\r\n    }\r\n}</pre>\r\n</div>\r\n</div>\r\nHope this helped!\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com','Grails: Few tips for writing integration tests',0,'','inherit','open','open','','290-revision-13','','','2009-11-05 09:55:36','2009-11-05 04:25:36','',290,'http://www.intelligrape.com/blog/?p=304',0,'revision','',0),(305,10,'2009-11-20 19:13:55','2009-11-20 13:43:55','Many a times, it is required to inject a Spring Bean into a Grails artefact. It has happened a few times with us in our projects that we needed to inject a TagLib bean in the service layer for code re-use for sending out e-mails. This is how we achieved it\r\n\r\n<code>MyService implements org.springframework.context.ApplicationContext</code>\r\n\r\nImport the classes import org.springframework.context.ApplicationContext and org.codehaus.groovy.grails.commons.ConfigurationHolder\r\n\r\nDefine a method as given below\r\n<blockquote>public def getMyTag() {\r\nreturn ConfigurationHolder.config.applicationContext.getBean(\"MyTagLib\")\r\n}</blockquote>\r\nwhere MyTagLib is a TagLib class is a custom TagLib class. For ApplicationTagLib, which contains the tags like createLink() ,replace \"MyTagLib\" with \"ApplicationTagLib\" as the argument in the getBean() method.\r\n\r\nWe can access the methods/closures in the bean with a statement like myTag.methodName()\r\n\r\nOne thing to note is that writing something like\r\n<blockquote><code>def myTag = ConfigurationHolder.config.applicationContext.getBean(\"MyTagLib\")</code></blockquote>\r\nwill not work because applicationContext would not have been initialized then and an exception will be thrown.\r\nHope this Helps.\r\n\r\nS Vivek Krishna','Accessing Spring Beans by Implementing ApplicationContextAware in Grails Artefacts',0,'','publish','open','open','','accessing-spring-beans-by-implementing-applicationcontextaware-in-grails-artefacts','','','2009-11-20 19:13:55','2009-11-20 13:43:55','',0,'http://www.intelligrape.com/blog/?p=305',0,'post','',0),(306,10,'2009-11-20 19:12:55','2009-11-20 13:42:55','Many a times, it is required to inject a Spring Bean into a Grails artefact. It has happened a few times with us in our projects that we needed to inject a TagLib bean in the service layer for code re-use for sending out e-mails. This is how we achieved it\n\n<code>MyService implements org.springframework.context.ApplicationContext</code>\n\nImport the classes import org.springframework.context.ApplicationContext and org.codehaus.groovy.grails.commons.ConfigurationHolder\n\nDefine a method as given below\n<blockquote>public def getMyTag() {\nreturn ConfigurationHolder.config.applicationContext.getBean(\"MyTagLib\")\n}</blockquote>\nwhere MyTagLib is a TagLib class is a custom TagLib class. For ApplicationTagLib, which contains the tags like createLink() ,replace \"MyTagLib\" with \"ApplicationTagLib\" as the argument in the getBean() method.\n\nWe can access the methods/closures in the bean with a statement like myTag.methodName()\n\nOne thing to note is that writing something like\n<blockquote><code>def myTag = ConfigurationHolder.config.applicationContext.getBean(\"MyTagLib\")</code></blockquote>\nwill not work because applicationContext would not have been initialized then and an exception w\nHope this Helps.','Accessing Spring Beans by Implementing ApplicationContextAware in Grails Classes',0,'','inherit','open','open','','305-revision','','','2009-11-20 19:12:55','2009-11-20 13:42:55','',305,'http://www.intelligrape.com/blog/?p=306',0,'revision','',0),(307,10,'2009-11-20 19:13:52','2009-11-20 13:43:52','Many a times, it is required to inject a Spring Bean into a Grails artefact. It has happened a few times with us in our projects that we needed to inject a TagLib bean in the service layer for code re-use for sending out e-mails. This is how we achieved it\n\n<code>MyService implements org.springframework.context.ApplicationContext</code>\n\nImport the classes import org.springframework.context.ApplicationContext and org.codehaus.groovy.grails.commons.ConfigurationHolder\n\nDefine a method as given below\n<blockquote>public def getMyTag() {\nreturn ConfigurationHolder.config.applicationContext.getBean(\"MyTagLib\")\n}</blockquote>\nwhere MyTagLib is a TagLib class is a custom TagLib class. For ApplicationTagLib, which contains the tags like createLink() ,replace \"MyTagLib\" with \"ApplicationTagLib\" as the argument in the getBean() method.\n\nWe can access the methods/closures in the bean with a statement like myTag.methodName()\n\nOne thing to note is that writing something like\n<blockquote><code>def myTag = ConfigurationHolder.config.applicationContext.getBean(\"MyTagLib\")</code></blockquote>\nwill not work because applicationContext would not have been initialized then and an exception will be thrown.\nHope this Helps.\n\nS Vivek Krishna','Accessing Spring Beans by Implementing ApplicationContextAware in Grails Artefacts',0,'','inherit','open','open','','305-revision-2','','','2009-11-20 19:13:52','2009-11-20 13:43:52','',305,'http://www.intelligrape.com/blog/?p=307',0,'revision','',0),(308,4,'2009-11-25 01:31:28','2009-11-24 20:01:28','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide an Expando class which provides the same functionality.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue</pre>\r\n</div>\r\n</div>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". The properties that we add get stored in the map object in the class. We can think of our class as a simple wrapper around the map. Retrieving values from the object is same as calling getters for the class proeprties.\r\n\r\nHowever, if we just have to use a dynamically expandable bean for storing data, then we can simply use groovy\'s \"Expando\" class. Having our own implementation makes sense when we also want to add behaviour to this class.\r\n\r\nThis was my first taste of groovy\'s metaprogramming powers. It truly is amazing.\r\n\r\nHope you find this useful.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Groovy: Create class with dynamic properties',0,'','publish','open','open','','groovy-create-class-with-dynamic-properties','','','2009-12-02 10:50:29','2009-12-02 05:20:29','',0,'http://www.intelligrape.com/blog/?p=308',0,'post','',0),(309,4,'2009-11-25 01:14:38','2009-11-24 19:44:38','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide a class which provides same functionality\n\n<code>class MyExpandableClass{\nMap props=[:];\ndef getProperty(String property){\nreturn props[property];\n}\nvoid setProperty(String property, Object newValue){\nprops[property] = newValue;\n}\n}\nMyExpandableClass myExpandableObject = new MyExpandableClass()\nmyExpandableObject.numberValue=1234\nmyExpandableObject.dateValue=new Date()\nmyExpandableObject.stringValue=\"TEST\"\nprintln myExpandableObject.numberValue\nprintln myExpandableObject.dateValue\nprintln myExpandableObject.stringValue\n</code>\n\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". ','Adding properties on the fly to a groovy Class',0,'','inherit','open','open','','308-revision','','','2009-11-25 01:14:38','2009-11-24 19:44:38','',308,'http://www.intelligrape.com/blog/?p=309',0,'revision','',0),(310,4,'2009-11-25 01:14:49','2009-11-24 19:44:49','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide a class which provides same functionality\r\n\r\n<code>class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue\r\n</code>\r\n\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". ','Adding properties on the fly to a groovy Class',0,'','inherit','open','open','','308-revision-2','','','2009-11-25 01:14:49','2009-11-24 19:44:49','',308,'http://www.intelligrape.com/blog/?p=310',0,'revision','',0),(311,4,'2009-11-25 01:16:06','2009-11-24 19:46:06','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide a class which provides same functionality\r\n\r\n<code>class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue\r\n</code>\r\n\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". ','Adding properties on the fly to a groovy Class',0,'','inherit','open','open','','308-revision-3','','','2009-11-25 01:16:06','2009-11-24 19:46:06','',308,'http://www.intelligrape.com/blog/?p=311',0,'revision','',0),(312,4,'2009-11-25 01:18:04','2009-11-24 19:48:04','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide a class which provides same functionality\r\n<blockquote><code>class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue\r\n</code></blockquote>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\".','Adding properties on the fly to a groovy Class',0,'','inherit','open','open','','308-revision-4','','','2009-11-25 01:18:04','2009-11-24 19:48:04','',308,'http://www.intelligrape.com/blog/?p=312',0,'revision','',0),(313,4,'2009-11-25 01:19:15','2009-11-24 19:49:15','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide a class which provides same functionality\r\n<blockquote><code>class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue\r\n</code></blockquote>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\".','Adding properties on the fly to a groovy Class',0,'','inherit','open','open','','308-revision-5','','','2009-11-25 01:19:15','2009-11-24 19:49:15','',308,'http://www.intelligrape.com/blog/?p=313',0,'revision','',0),(314,4,'2009-11-25 01:21:51','2009-11-24 19:51:51','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide a class which provides same functionality\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue\r\n</pre></div></div>\r\n\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\".','Adding properties on the fly to a groovy Class',0,'','inherit','open','open','','308-revision-6','','','2009-11-25 01:21:51','2009-11-24 19:51:51','',308,'http://www.intelligrape.com/blog/?p=314',0,'revision','',0),(315,4,'2009-11-25 01:28:06','2009-11-24 19:58:06','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide an Expando class which provides the same functionality.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue</pre>\r\n</div>\r\n</div>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". However, if we just have to use a dynamically expandable bean for storing data, then we can simply use groovy\'s \"Expando\" class. Having our own implementation makes sense when we also want to add behaviour to this class. This was my first taste of groovy\'s metaprogramming powers. It truly is amazing.\r\n\r\nHope you find this useful.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Groovy: Create class with dynamic properties',0,'','inherit','open','open','','308-revision-7','','','2009-11-25 01:28:06','2009-11-24 19:58:06','',308,'http://www.intelligrape.com/blog/?p=315',0,'revision','',0),(316,4,'2009-11-25 01:30:59','2009-11-24 20:00:59','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide an Expando class which provides the same functionality.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue</pre>\r\n</div>\r\n</div>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". The properties that we add get stored in the map object in the class. We can think of our class as a simple wrapper around the map. Retrieving values from the object is same as calling getters for the class proeprties.\r\n\r\nHowever, if we just have to use a dynamically expandable bean for storing data, then we can simply use groovy\'s \"Expando\" class. Having our own implementation makes sense when we also want to add behaviour to this class.\r\n\r\nThis was my first taste of groovy\'s metaprogramming powers. It truly is amazing.\r\n\r\nHope you find this useful.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Groovy: Create class with dynamic properties',0,'','inherit','open','open','','308-revision-8','','','2009-11-25 01:30:59','2009-11-24 20:00:59','',308,'http://www.intelligrape.com/blog/?p=316',0,'revision','',0),(317,4,'2009-12-02 10:50:00','2009-12-02 05:20:00','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide an Expando class which provides the same functionality.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue</pre>\r\n</div>\r\n</div>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". The properties that we add get stored in the map object in the class. We can think of our class as a simple wrapper around the map. Retrieving values from the object is same as calling getters for the class proeprties.\r\n\r\nHowever, if we just have to use a dynamically expandable bean for storing data, then we can simply use groovy\'s \"Expando\" class. Having our own implementation makes sense when we also want to add behaviour to this class.\r\n\r\nThis was my first taste of groovy\'s metaprogramming powers. It truly is amazing.\r\n\r\nHope you find this useful.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Groovy: Create class with dynamic properties',0,'','inherit','open','open','','308-autosave','','','2009-12-02 10:50:00','2009-12-02 05:20:00','',308,'http://www.intelligrape.com/blog/?p=317',0,'revision','',0),(318,13,'2009-12-01 12:08:55','2009-12-01 06:38:55','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n   def quartzScheduler                // Inject the quartzScheduler bean\r\n\r\n  def reScheduleMyJob={\r\n       def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n       trigger.repeatInterval = 5000    // in millisecods, a long value\r\n       trigger.repeatCount=10           // Optional int value, if not set it repeats indefinately.\r\n\r\n       Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n       println \"Next Fire Time : ${nextFireTime}\"\r\n  }\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programatically',0,'','publish','open','open','','rescheduling-a-quartz-job-programmatically','','','2010-03-04 13:03:23','2010-03-04 07:33:23','',0,'http://www.intelligrape.com/blog/?p=318',0,'post','',0),(319,13,'2009-12-01 11:43:24','2009-12-01 06:13:24','Let us have a look at the simple javascript code, that can be used to add hotkeys to our web application. I tried using jquery hotkeys plugin and two more plugins, but they didn\'t work for me.\n\nSo I ended up handling the keydown event of my own.\n<blockquote>\n<div class=\"wp_syntax\">\n<div class=\"code\">\n<pre class=\"groovy\">var isAlt = false;\ndocument.onkeyup = function(e) {\n    if (e.which == 18) //18 is the keycode for \'Alt\'\n	isAlt = false;\n}\ndocument.onkeydown = function(e) {\n    if (e.which == 18)\n	 isAlt = true;\n    else if (e.which == 69 &amp;&amp; isAlt == true) { //69 is the keycode for \'e\'\n        function1(); 	 // executed when alt+e is pressed\n        return false;\n    } else if (e.which == 71 &amp;&amp; isAlt == true) {\n        function2(); 	 // executed when alt+g is pressed\n        return false;\n    }\n    ...\n}</pre>\n</div>\n</div></blockquote>\nHope this helped.\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares','',0,'','inherit','open','open','','318-revision','','','2009-12-01 11:43:24','2009-12-01 06:13:24','',318,'http://www.intelligrape.com/blog/?p=319',0,'revision','',0),(320,13,'2009-12-01 11:43:42','2009-12-01 06:13:42','Let us have a look at the simple javascript code, that can be used to add hotkeys to our web application. I tried using jquery hotkeys plugin and two more plugins, but they didn\'t work for me.\r\n\r\nSo I ended up handling the keydown event of my own.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">var isAlt = false;\r\ndocument.onkeyup = function(e) {\r\n    if (e.which == 18) //18 is the keycode for \'Alt\'\r\n	isAlt = false;\r\n}\r\ndocument.onkeydown = function(e) {\r\n    if (e.which == 18)\r\n	 isAlt = true;\r\n    else if (e.which == 69 &amp;&amp; isAlt == true) { //69 is the keycode for \'e\'\r\n        function1(); 	 // executed when alt+e is pressed\r\n        return false;\r\n    } else if (e.which == 71 &amp;&amp; isAlt == true) {\r\n        function2(); 	 // executed when alt+g is pressed\r\n        return false;\r\n    }\r\n    ...\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares','',0,'','inherit','open','open','','318-revision-2','','','2009-12-01 11:43:42','2009-12-01 06:13:42','',318,'http://www.intelligrape.com/blog/?p=320',0,'revision','',0),(321,13,'2009-12-01 11:49:45','2009-12-01 06:19:45','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n\r\nSo I ended up handling the keydown event of my own.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\" \r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<pre class=\"groovy\">class MyController{\r\n def quartzScheduler	// Inject the quartzScheduler bean\r\n\r\ndef reScheduleMyJob={\r\n def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n trigger.repeatInterval = 50000		// in millisecods, a long value\r\n trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n println \"Next Fire Time : ${nextFireTime}\"\r\n}</pre>\r\nSimilarly if you are using Cron expression to schedule the job then use setCronExpression method of the trigger instance got from quartzScheduler.getTrigger() to reset the cron expression.\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links\r\nhttp://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\r\nhttp://quartz.sourceforge.net/javadoc\r\n\r\n~~~~~Bhagwt Kumar~~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-3','','','2009-12-01 11:49:45','2009-12-01 06:19:45','',318,'http://www.intelligrape.com/blog/?p=321',0,'revision','',0),(322,13,'2009-12-01 11:52:36','2009-12-01 06:22:36','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n def quartzScheduler	// Inject the quartzScheduler bean\r\n\r\ndef reScheduleMyJob={\r\n def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n trigger.repeatInterval = 50000		// in millisecods, a long value\r\n trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n println \"Next Fire Time : ${nextFireTime}\"\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use setCronExpression method of the trigger instance got from quartzScheduler.getTrigger() to reset the cron expression.\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links\r\nhttp://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\r\nhttp://quartz.sourceforge.net/javadoc\r\n\r\n~~~~~Bhagwt Kumar~~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-4','','','2009-12-01 11:52:36','2009-12-01 06:22:36','',318,'http://www.intelligrape.com/blog/?p=322',0,'revision','',0),(323,13,'2009-12-01 11:55:11','2009-12-01 06:25:11','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n def quartzScheduler	                         // Inject the quartzScheduler bean\r\n\r\ndef reScheduleMyJob={\r\n def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n trigger.repeatInterval = 50000		// in millisecods, a long value\r\n trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n\r\n Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n println \"Next Fire Time : ${nextFireTime}\"\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use setCronExpression method of the trigger instance got from quartzScheduler.getTrigger() to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links\r\nhttp://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\r\nhttp://quartz.sourceforge.net/javadoc\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-5','','','2009-12-01 11:55:11','2009-12-01 06:25:11','',318,'http://www.intelligrape.com/blog/?p=323',0,'revision','',0),(324,13,'2009-12-01 12:04:43','2009-12-01 06:34:43','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n def quartzScheduler	                         // Inject the quartzScheduler bean\r\n\r\ndef reScheduleMyJob={\r\n def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n trigger.repeatInterval = 50000		// in millisecods, a long value\r\n trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n\r\n Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n println \"Next Fire Time : ${nextFireTime}\"\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-6','','','2009-12-01 12:04:43','2009-12-01 06:34:43','',318,'http://www.intelligrape.com/blog/?p=324',0,'revision','',0),(325,13,'2009-12-01 12:04:48','2009-12-01 06:34:48','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n def quartzScheduler	                         // Inject the quartzScheduler bean\r\n\r\ndef reScheduleMyJob={\r\n def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n trigger.repeatInterval = 50000		// in millisecods, a long value\r\n trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n\r\n Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n println \"Next Fire Time : ${nextFireTime}\"\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-7','','','2009-12-01 12:04:48','2009-12-01 06:34:48','',318,'http://www.intelligrape.com/blog/?p=325',0,'revision','',0),(326,13,'2009-12-01 12:07:38','2009-12-01 06:37:38','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n   def quartzScheduler                                  // Inject the quartzScheduler bean\r\n\r\n  def reScheduleMyJob={\r\n       def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n       trigger.repeatInterval = 50000		// in millisecods, a long value\r\n       trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n\r\n       Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n       println \"Next Fire Time : ${nextFireTime}\"\r\n  }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-8','','','2009-12-01 12:07:38','2009-12-01 06:37:38','',318,'http://www.intelligrape.com/blog/?p=326',0,'revision','',0),(327,13,'2009-12-01 12:07:45','2009-12-01 06:37:45','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n   def quartzScheduler                                  // Inject the quartzScheduler bean\r\n\r\n  def reScheduleMyJob={\r\n       def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n       trigger.repeatInterval = 50000		// in millisecods, a long value\r\n       trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n\r\n       Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n       println \"Next Fire Time : ${nextFireTime}\"\r\n  }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-9','','','2009-12-01 12:07:45','2009-12-01 06:37:45','',318,'http://www.intelligrape.com/blog/?p=327',0,'revision','',0),(328,13,'2009-12-02 11:13:55','2009-12-02 05:43:55','<p>In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p>Make sure the following HTML is included on every page where AJAX requests are made. (Place it in body of the main layout so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;position:absolute; top:50%; left:50%; z-index:3000;\">\r\n       <-- Design Busy indicator here -->\r\n       <img src=\"/yoursite/images/spinner.gif\"/>\r\n</span>\r\n</pre>\r\n</div></blockquote>\r\n<p>Make sure the following javascript code has been executed before any AJAX request is made. (Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n\r\n/*\r\n  Registering responders for prototype library.\r\n  (If you are not using  prototype library then there is no need of the next statement.)\r\n*/\r\n\r\nAjax.Responders.register({\r\n          onCreate: function() {\r\n              jQuery(\"#ajax_spinner\").show();\r\n          },\r\n          onComplete: function() {\r\n              jQuery(\"#ajax_spinner\").hide();\r\n          }\r\n});\r\n\r\n/*\r\n   Registering responders for jQuery AJAX calls.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\n              jQuery(this).show();\r\n });\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\n              jQuery(this).hide();\r\n});\r\n\r\n/*\r\n    Note : If you are not using jQuery you can show/hide the div\r\n         using javascript(e.g. document.getElementById) to do the same\r\n*/\r\n</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-autosave','','','2009-12-02 11:13:55','2009-12-02 05:43:55','',251,'http://www.intelligrape.com/blog/?p=328',0,'revision','',0),(334,13,'2009-12-02 11:12:30','2009-12-02 05:42:30','<p>In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p>Make sure the following HTML is included on every page where AJAX requests are made. (Place it in body of the main layout so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"xml\"><span id=\"ajax_spinner\" style=\"display:none;position:absolute; top:50%; left:50%; z-index:3000;\">\r\n       <-- Design Busy indicator here -->\r\n       <img src=\"/yoursite/images/spinner.gif\"/>\r\n</span>\r\n</pre>\r\n</div></blockquote>\r\n<p>Make sure the following javascript code has been executed before any AJAX request is made. (Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n\r\n/*\r\n  Registering responders for prototype library.\r\n  (If you are not using  prototype library then there is no need of the next statement.)\r\n*/\r\n\r\nAjax.Responders.register({\r\n          onCreate: function() {\r\n              jQuery(\"#ajax_spinner\").show();\r\n          },\r\n          onComplete: function() {\r\n              jQuery(\"#ajax_spinner\").hide();\r\n          }\r\n});\r\n\r\n/*\r\n   Registering responders for jQuery AJAX calls.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\n              jQuery(this).show();\r\n });\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\n              jQuery(this).hide();\r\n});\r\n\r\n/*\r\n    Note : If you are not using jQuery you can show/hide the div\r\n         using javascript(e.g. document.getElementById) to do the same\r\n*/\r\n&lt;/script&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-27','','','2009-12-02 11:12:30','2009-12-02 05:42:30','',251,'http://www.intelligrape.com/blog/?p=334',0,'revision','',0),(333,13,'2009-12-01 13:06:30','2009-12-01 07:36:30','<p>In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p>Make sure the following HTML is included on every page where AJAX requests are made. (Place it in body of the main layout so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"html\"><code>&lt;span id=\"ajax_spinner\" style=\"display:none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n       &lt;-- Design Busy indicator here --&gt;\r\n       &lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code></pre>\r\n</div>\r\n</div></blockquote>\r\n<p>Make sure the following javascript code has been executed before any AJAX request is made. (Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"javascript\">&lt;script type=\"text/javascript\"&gt;\r\n\r\n/*\r\n  Registering responders for prototype library.\r\n  (If you are not using  prototype library then there is no need of the next statement.)\r\n*/\r\n\r\nAjax.Responders.register({\r\n          onCreate: function() {\r\n              jQuery(\"#ajax_spinner\").show();\r\n          },\r\n          onComplete: function() {\r\n              jQuery(\"#ajax_spinner\").hide();\r\n          }\r\n});\r\n\r\n/*\r\n   Registering responders for jQuery AJAX calls.\r\n*/\r\n\r\njQuery(\"#ajax_spinner\").ajaxStart(function() {\r\n              jQuery(this).show();\r\n });\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\n              jQuery(this).hide();\r\n});\r\n\r\n/*\r\n    Note : If you are not using jQuery you can show/hide the div\r\n         using javascript(e.g. document.getElementById) to do the same\r\n*/\r\n&lt;/script&gt;</pre>\r\n</div>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-26','','','2009-12-01 13:06:30','2009-12-01 07:36:30','',251,'http://www.intelligrape.com/blog/?p=333',0,'revision','',0),(329,13,'2009-10-12 17:11:02','2009-10-12 11:41:02','<p style=\"font-size: 14px; line-height: 28.5px;\">In my current project, I used ajax to fetch data from the server to provide Desktop Application like Experience. I wanted to automatically show an indicator when an AJAX request is ongoing, and hide it when there is no such request. So I found the following solution for both the Prototype library and the JQuery library.</p>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following HTML is included on every page where AJAX requests are made(Place it in body of the main template so that you do not have to repeat this HTML on each page.</p>\r\n\r\n<span style=\"color: #ff6600;\"><code>&lt;span id=\"ajax_spinner\" style=\"display: none;position:absolute; top:50%; left:50%; z-index:3000;\"&gt;\r\n&lt;-- Design Busy indicator here --&gt;\r\n&lt;img src=\"/yoursite/images/spinner.gif\"/&gt;\r\n&lt;/span&gt;</code></span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">Make sure the following javascript code has been executed before any AJAX request is made.(Move this to a js file and include it in Heading part of the main layout).</p>\r\n\r\n<span style=\"color: #ff6600;\"><code>&lt;script type=\"text/javascript\"&gt;</code></span>\r\n\r\n<span style=\"color: #ff6600;\">/*Registering responders for prototype library\r\nIf you are not using prototype library then\r\nthere is no need of the next statement.*/</span>\r\n\r\n<span style=\"color: #ff6600;\">Ajax.Responders.register({\r\nonCreate: function() {\r\njQuery(\"#ajax_spinner\").show();\r\n},\r\nonComplete: function() {\r\njQuery(\"#ajax_spinner\").hide();\r\n}\r\n});</span>\r\n\r\n<span style=\"color: #ff6600;\">/*Registering responders for jQuery AJAX calls\r\nIf you are not using jQuery\'s AJAX methods(e.g. ajax, get, post) then\r\nthere is no need of the next statement.*/</span>\r\n\r\n<span style=\"color: #ff6600;\">jQuery(\"#ajax_spinner\").ajaxStart(function() {\r\njQuery(this).show();\r\n});\r\njQuery(\"#ajax_spinner\").ajaxStop(function() {\r\njQuery(this).hide();\r\n});</span>\r\n\r\n<span style=\"color: #ff6600;\">/*If you are not using jQuery you can show/hide the div using javascript(e.g. document.getElementById) to do the same*/\r\n&lt;/script&gt;</span>\r\n<p style=\"font-size: 14px; line-height: 28.5px;\">The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\r\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\r\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\r\n\r\nBhagwat Kumar\r\nbhagwat@intelligrape.com','Ajax Request Progress Indicator',0,'','inherit','open','open','','251-revision-25','','','2009-10-12 17:11:02','2009-10-12 11:41:02','',251,'http://www.intelligrape.com/blog/?p=329',0,'revision','',0),(330,4,'2009-11-25 01:31:28','2009-11-24 20:01:28','I recently came across a way in Groovy to define a class which can have dynamic getters and setters and properties can be added on the fly. The following code creates a class \"MyExpandableClass\" and defines two methods in the \"getProperty and setProperty\". If we define these two methods in a groovy class, then calls to any getter or setter on objects of this class will go through these methods. Groovy also provide an Expando class which provides the same functionality.\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyExpandableClass{\r\nMap props=[:];\r\ndef getProperty(String property){\r\nreturn props[property];\r\n}\r\nvoid setProperty(String property, Object newValue){\r\nprops[property] = newValue;\r\n}\r\n}\r\nMyExpandableClass myExpandableObject = new MyExpandableClass()\r\nmyExpandableObject.numberValue=1234\r\nmyExpandableObject.dateValue=new Date()\r\nmyExpandableObject.stringValue=\"TEST\"\r\nprintln myExpandableObject.numberValue\r\nprintln myExpandableObject.dateValue\r\nprintln myExpandableObject.stringValue</pre>\r\n</div>\r\n</div>\r\nIn the above example, we can see that we can add any property to the object of \"MyExpandableClass\". The properties that we add get stored in the map object in the class. We can think of our class as a simple wrapper around the map. Retrieving values from the object is same as calling getters for the class proeprties.\r\n\r\nHowever, if we just have to use a dynamically expandable bean for storing data, then we can simply use groovy\'s \"Expando\" class. Having our own implementation makes sense when we also want to add behaviour to this class.\r\n\r\nThis was my first taste of groovy\'s metaprogramming powers. It truly is amazing.\r\n\r\nHope you find this useful.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Groovy: Create class with dynamic properties',0,'','inherit','open','open','','308-revision-9','','','2009-11-25 01:31:28','2009-11-24 20:01:28','',308,'http://www.intelligrape.com/blog/?p=330',0,'revision','',0),(331,13,'2009-12-02 11:02:04','2009-12-02 05:32:04','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n   def quartzScheduler                // Inject the quartzScheduler bean\r\n\r\n  def reScheduleMyJob={\r\n       def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n       trigger.repeatInterval = 5000    // in millisecods, a long value\r\n       trigger.repeatCount=10           // Optional int value, if not set it repeats indefinately.\r\n\r\n       Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n       println \"Next Fire Time : ${nextFireTime}\"\r\n  }\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programatically',0,'','inherit','open','open','','318-autosave','','','2009-12-02 11:02:04','2009-12-02 05:32:04','',318,'http://www.intelligrape.com/blog/?p=331',0,'revision','',0),(332,13,'2009-12-01 12:08:55','2009-12-01 06:38:55','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n<pre class=\"groovy\">class MyController{\r\n   def quartzScheduler                                  // Inject the quartzScheduler bean\r\n\r\n  def reScheduleMyJob={\r\n       def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n       trigger.repeatInterval = 50000		// in millisecods, a long value\r\n       trigger.repeatCount=10		       // (Optional int value)if not set it repeats indefinately.\r\n\r\n       Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n       println \"Next Fire Time : ${nextFireTime}\"\r\n  }\r\n}</pre>\r\n</div>\r\n</div></blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programmatically',0,'','inherit','open','open','','318-revision-10','','','2009-12-01 12:08:55','2009-12-01 06:38:55','',318,'http://www.intelligrape.com/blog/?p=332',0,'revision','',0),(336,7,'2009-12-07 15:09:03','2009-12-07 09:39:03','Hello Friends,\n\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code with me which worked for both services and controllers:\n\n	import org.jsecurity.SecurityUtils\n	import com.aps.domain.security.JsecUser\n	import org.jsecurity.subject.Subject\n\n	class myControllerTests extends GrailsUnitTestCase {	\n	\n	protected void setUp() {\n		super.setUp()	\n		//following code sets admin as a logged in user				\n		def subject = [isAuthenticated: true,\n			       principal: \"admin\"\n			      ] as Subject\n\n		SecurityUtils.metaClass.static.getSubject = {-> return subject }\n		Subject.metaClass.getPrincipal = {-> return \"admin\" }\n		...\n	}	\n\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\n\nCheers!\n\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision','','','2009-12-07 15:09:03','2009-12-07 09:39:03','',335,'http://www.intelligrape.com/blog/?p=336',0,'revision','',0),(339,7,'2009-12-07 15:13:52','2009-12-07 09:43:52','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code with me which worked for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass myControllerTests extends GrailsUnitTestCase {	\r\n\r\nprotected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n}	\r\n	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-4','','','2009-12-07 15:13:52','2009-12-07 09:43:52','',335,'http://www.intelligrape.com/blog/?p=339',0,'revision','',0),(337,7,'2009-12-07 15:10:03','2009-12-07 09:40:03','Hello Friends,\n\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code with me which worked for both services and controllers:\n<div class=\"wp_syntax\">\n<div class=\"code\">\n\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\n	import org.jsecurity.SecurityUtils\n	import com.aps.domain.security.JsecUser\n	import org.jsecurity.subject.Subject\n\n	class myControllerTests extends GrailsUnitTestCase {	\n	\n	protected void setUp() {\n		super.setUp()	\n		//following code sets admin as a logged in user				\n		def subject = [isAuthenticated: true,\n			       principal: \"admin\"\n			      ] as Subject\n\n		SecurityUtils.metaClass.static.getSubject = {-> return subject }\n		Subject.metaClass.getPrincipal = {-> return \"admin\" }\n		...\n	}	\n</pre></div></div>\n\n</div>\n</div>\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\n\nCheers!\n\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-2','','','2009-12-07 15:10:03','2009-12-07 09:40:03','',335,'http://www.intelligrape.com/blog/?p=337',0,'revision','',0),(338,7,'2009-12-07 15:13:04','2009-12-07 09:43:04','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code with me which worked for both services and controllers:\r\n<div class=\"wp_syntax\">\r\n<div class=\"code\">\r\n\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass myControllerTests extends GrailsUnitTestCase {	\r\n\r\nprotected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n}	\r\n\r\n	</pre></div></div>\r\n\r\n</div>\r\n</div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-3','','','2009-12-07 15:13:04','2009-12-07 09:43:04','',335,'http://www.intelligrape.com/blog/?p=338',0,'revision','',0),(340,7,'2009-12-07 15:16:10','2009-12-07 09:46:10','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code which worked nicely for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass myControllerTests extends GrailsUnitTestCase {	\r\n\r\nprotected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n}	\r\n	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-5','','','2009-12-07 15:16:10','2009-12-07 09:46:10','',335,'http://www.intelligrape.com/blog/?p=340',0,'revision','',0),(341,7,'2009-12-07 15:16:25','2009-12-07 09:46:25','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code which worked nicely for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass myControllerTests extends GrailsUnitTestCase {	\r\n\r\nprotected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n}	\r\n	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-6','','','2009-12-07 15:16:25','2009-12-07 09:46:25','',335,'http://www.intelligrape.com/blog/?p=341',0,'revision','',0),(342,7,'2009-12-07 15:18:40','2009-12-07 09:48:40','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code which worked nicely for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass myControllerTests extends GrailsUnitTestCase {	\r\n\r\nprotected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n}	\r\n	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-7','','','2009-12-07 15:18:40','2009-12-07 09:48:40','',335,'http://www.intelligrape.com/blog/?p=342',0,'revision','',0),(343,7,'2009-12-07 15:24:36','2009-12-07 09:54:36','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code which worked nicely for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass myControllerTests extends GrailsUnitTestCase {	\r\n\r\nprotected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n}	\r\n...\r\n}	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-revision-8','','','2009-12-07 15:24:36','2009-12-07 09:54:36','',335,'http://www.intelligrape.com/blog/?p=343',0,'revision','',0),(344,7,'2009-12-07 16:40:03','2009-12-07 11:10:03','Hello Friends,\r\n\r\nI was using Jsecurity plugin in my project. There was an action in a controller which needed logged in user information and I was finding it difficult to write an integration test for the same. Then Brent Fisher shared the following code which worked nicely for both services and controllers:\r\n<div class=\"wp_syntax\"><div class=\"code\"><pre class=\"groovy\">\r\nimport org.jsecurity.SecurityUtils\r\nimport com.aps.domain.security.JsecUser\r\nimport org.jsecurity.subject.Subject\r\n\r\nclass MyControllerTests extends GrailsUnitTestCase {	\r\n\r\n  protected void setUp() {\r\n	super.setUp()	\r\n	//following code sets admin as a logged in user				\r\n	def subject = [isAuthenticated: true,\r\n		       principal: \"admin\"\r\n		      ] as Subject\r\n\r\n	SecurityUtils.metaClass.static.getSubject = {-> return subject }\r\n	Subject.metaClass.getPrincipal = {-> return \"admin\" }\r\n	...\r\n  }	\r\n ...\r\n}	</pre></div></div>\r\nUsing metaclass, We changed the implementation of getPrincipal() and getSubject() to work in our way. So looking at this, I could see the power of a metaclass, which can be used to change or add new method implementations to an API which is not even accessible to us.\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intellgrape.com','Login user for Integration test when using Jsecurity plugin',0,'','inherit','open','open','','335-autosave','','','2009-12-07 16:40:03','2009-12-07 11:10:03','',335,'http://www.intelligrape.com/blog/?p=344',0,'revision','',0),(345,8,'2009-12-10 00:32:50','2009-12-09 19:02:50','<code>public Map groupBy(Closure closure)</code>\n\nGoing through Groovy Collection, I found this powerful method which takes a Closure as parameter &amp; based on the closure, it returns a map in which all unique values returned by closure act as keys.\n\nLets take an example:\n\nIf you want to group integers between 1 to 100 based on the integer value at units place as follows:\n<pre lang=\"groovy\">[1:[1, 11, 21, 31, 41, 51, 61, 71, 81, 91],\n2:[2, 12, 22, 32, 42, 52, 62, 72, 82, 92],\n3:[3, 13, 23, 33, 43, 53, 63, 73, 83, 93],\n4:[4, 14, 24, 34, 44, 54, 64, 74, 84, 94],\n5:[5, 15, 25, 35, 45, 55, 65, 75, 85, 95],\n6:[6, 16, 26, 36, 46, 56, 66, 76, 86, 96],\n7:[7, 17, 27, 37, 47, 57, 67, 77, 87, 97],\n8:[8, 18, 28, 38, 48, 58, 68, 78, 88, 98],\n9:[9, 19, 29, 39, 49, 59, 69, 79, 89, 99],\n0:[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]]</pre>\nJust think of the code you will need to write in Java for this.\n\nHowever, its a single method call in Groovy:    <code>(1..100).groupBy{it%10}</code>\n\nHope to find more such methods over time.\n\n–\n~Aman Aggarwal\naman@intelligrape.com\n\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Groovy Collection method: groupBy() ',0,'','inherit','open','open','','33-autosave','','','2009-12-10 00:32:50','2009-12-09 19:02:50','',33,'http://www.intelligrape.com/blog/?p=345',0,'revision','',0),(346,8,'2009-12-10 00:32:51','2009-12-09 19:02:51','Often I found it painful working on dates when I had to find a past/future date based on weeks, months or years.\n\nGroovy class <a href=\"http://groovy.codehaus.org/api/org/codehaus/groovy/runtime/TimeCategory.html\">org.codehaus.groovy.runtime.TimeCategory</a> has very helpful &amp; intutive syntax for working on dates.\nI am sure I need not to explain what each of the following statements will do:\n<pre lang=\"groovy\">Date date = new Date()\n\nuse(org.codehaus.groovy.runtime.TimeCategory) {\n    date = date - 10.seconds\n    date = date - 10.minutes\n    date = date - 10.hours\n    date = date - 10.days\n    date = date - 10.weeks\n    date = date - 10.months\n    date = date - 10.years\n}</pre>\n–\n~Aman Aggarwal\naman@intelligrape.com\n\n<a href=\"http://www.IntelliGrape.com/\">http://www.IntelliGrape.com/</a>','Groovy Finding Past/Future Dates',0,'','inherit','open','open','','34-autosave','','','2009-12-10 00:32:51','2009-12-09 19:02:51','',34,'http://www.intelligrape.com/blog/?p=346',0,'revision','',0),(347,8,'2009-12-10 00:32:52','2009-12-09 19:02:52','I want to quickly share how you can sort a Map by its key/value/field of valueObject; in either ascending or descending order using Groovy\n\nI created a <code>Map&lt;String, Person&gt;</code> as follows:\n<pre lang=\"groovy\">class Person {\n    String name\n    Date dateOfBirth\n\n    static constraints = {\n    }\n}\n\nMap  people = [:]\n[*(11..20), *(1..10)].each {\n    Person person = new Person()\n    person.name = \"Person-\" + it\n    use(org.codehaus.groovy.runtime.TimeCategory) {\n        person.dateOfBirth = new Date() - (new Random().nextInt(15) + 10).years\n    }\n    people[person.name] = person\n}</pre>\nNow, Sorting maps in ascending order is a simple one line code:\n<pre lang=\"groovy\">// Sort by Key(Person\'s Name):\nmap = map.sort {it.key}\n\n// Sort by Value(Person Object):\nmap = map.sort {it.value}\n\n// Sort by a particular field of Value(Date Of Birth):\nmap = map.sort {it.value.dateOfBirth}</pre>\nBut how about sorting in reverse order. It would have been great to have map.reverse() or map.reverseSort{} available in Groovy. Since none exists, I had to create the following method:\n<pre lang=\"groovy\">Map reverseSortMap(Map unsortedMap) {\n\n    // Different implementations of Comparator\n    // 1. Reverse Sort by Key(Person\'s Name):\n    Comparator comparator = [compare: {a , b -&gt;\n    b.compareTo(a)\n    }] as Comparator\n\n    // 2. Reverse Sort by Value(Person Object):\n    Comparator comparator = [compare: {a , b -&gt;\n    unsortedMap.get(b).compareTo(unsortedMap.get(a))\n    }] as Comparator\n\n    // 3. Reverse Sort by a particular field of Value(Date Of Birth):\n    Comparator comparator = [compare: {a , b -&gt;\n    unsortedMap.get(b).dateOfBirth.compareTo(unsortedMap.get(a).dateOfBirth)\n    }] as Comparator\n\n    Map sortedMap = new TreeMap(comparator)\n    sortedMap.putAll(unsortedMap)\n\n    return sortedMap\n}</pre>\nUse either of the Comparator implementations above &amp; use the method:\n<pre lang=\"groovy\">people = reverseSortMap(people)</pre>\nHope it helps.\n\n–\n~Aman Aggarwal\naman@intelligrape.com\n\n<a onclick=\"javascript:pageTracker._trackPageview(\'/outbound/article/www.IntelliGrape.com\');\" href=\"http://www.intelligrape.com/\">http://www.IntelliGrape.com/</a>','Groovy Maps: Reverse Sort',0,'','inherit','open','open','','43-autosave','','','2009-12-10 00:32:52','2009-12-09 19:02:52','',43,'http://www.intelligrape.com/blog/?p=347',0,'revision','',0),(349,7,'2010-01-21 16:02:21','2010-01-21 10:32:21','Hi Friends,\r\n\r\nRecently I needed to access my grails application\'s path while writing  an integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Tests : Access your application path',0,'Access your application path in your integration test cases.','publish','open','open','','grails-integration-test-access-application-path','','','2010-01-21 16:37:07','2010-01-21 11:07:07','',0,'http://www.intelligrape.com/blog/?p=349',0,'post','',0),(350,7,'2010-01-21 16:00:22','2010-01-21 10:30:22','Hi Friends,\n\nRecently I needed to access my grails application path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">\nSystem.properties[\'base.dir\']\n</pre>\n</div>\n</blockquote>\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://www.intelligrape.com/','Grails Integration Test : Access application path',0,'','inherit','open','open','','349-revision','','','2010-01-21 16:00:22','2010-01-21 10:30:22','',349,'http://www.intelligrape.com/blog/?p=350',0,'revision','',0),(351,7,'2010-01-21 16:00:22','2010-01-21 10:30:22','Hi Friends,\r\n\r\nRecently I needed to access my grails application path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Test : Access application path',0,'','inherit','open','open','','349-revision-2','','','2010-01-21 16:00:22','2010-01-21 10:30:22','',349,'http://www.intelligrape.com/blog/?p=351',0,'revision','',0),(352,7,'2010-01-21 16:01:54','2010-01-21 10:31:54','Hi Friends,\r\n\r\nRecently I needed to access my grails application path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Test : Access application path',0,'Access your application path in your integration test cases.','inherit','open','open','','349-revision-3','','','2010-01-21 16:01:54','2010-01-21 10:31:54','',349,'http://www.intelligrape.com/blog/?p=352',0,'revision','',0),(353,7,'2010-01-21 16:03:14','2010-01-21 10:33:14','Hi Friends,\r\n\r\nRecently I needed to access my grails application path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Tests : Access your application path',0,'Access your application path in your integration test cases.','inherit','open','open','','349-autosave','','','2010-01-21 16:03:14','2010-01-21 10:33:14','',349,'http://www.intelligrape.com/blog/?p=353',0,'revision','',0),(354,7,'2010-01-21 16:02:21','2010-01-21 10:32:21','Hi Friends,\r\n\r\nRecently I needed to access my grails application path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Test : Access application path',0,'Access your application path in your integration test cases.','inherit','open','open','','349-revision-4','','','2010-01-21 16:02:21','2010-01-21 10:32:21','',349,'http://www.intelligrape.com/blog/?p=354',0,'revision','',0),(355,7,'2010-01-21 16:03:29','2010-01-21 10:33:29','Hi Friends,\r\n\r\nRecently I needed to access my grails application path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Tests : Access your application path',0,'Access your application path in your integration test cases.','inherit','open','open','','349-revision-5','','','2010-01-21 16:03:29','2010-01-21 10:33:29','',349,'http://www.intelligrape.com/blog/?p=355',0,'revision','',0),(356,7,'2010-01-21 16:35:50','2010-01-21 11:05:50','Hi Friends,\r\n\r\nRecently I needed to access my grails application\'s path while writing  a integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Tests : Access your application path',0,'Access your application path in your integration test cases.','inherit','open','open','','349-revision-6','','','2010-01-21 16:35:50','2010-01-21 11:05:50','',349,'http://www.intelligrape.com/blog/?p=356',0,'revision','',0),(357,7,'2010-01-21 16:36:45','2010-01-21 11:06:45','Hi Friends,\r\n\r\nRecently I needed to access my grails application\'s path while writing  an integration test. I tried to do it with servlet context, Application Holder and few more options. But none worked. Then I encountered the simplest way as given below, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nSystem.properties[\'base.dir\']\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://www.intelligrape.com/','Grails Integration Tests : Access your application path',0,'Access your application path in your integration test cases.','inherit','open','open','','349-revision-7','','','2010-01-21 16:36:45','2010-01-21 11:06:45','',349,'http://www.intelligrape.com/blog/?p=357',0,'revision','',0),(358,7,'2010-02-23 18:01:27','2010-02-23 12:31:27','I have a big fan of <a href=\"http://selenium.openqa.org/\" title=\"Selenium\">Selenium</a> and have been using <a href=\"http://selenium.openqa.org/\" title=\"Selenium\">Selenium</a> for quite some time for testing of web-applications.\r\n\r\nRecently, I upgraded my machine to <a href=\"https://wiki.ubuntu.com/HardyHeron\" title=\"Ubuntu Hardy Heron\">Ubuntu Hardy Heron</a> and the next day, I found that all the selenium tests started failling on my machine. On digging through the logs, I found the following information in the <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server </a>logs:\r\n\r\n<code>java.lang.RuntimeException: File was a script file, not a real executable: /usr/bin/firefox-bin</code>\r\n\r\nBefore actually spotting this line, I was mis-led by other log messages; but I will not talk about them in this post.\r\n\r\nThe reason for the failing tests was that <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server</a> thought that the default executable found in the path (/usr/bin/firefox) was a script file and not an executable application for the browser. I am not sure why <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server</a> checks whether the path to the browser should not be a script.\r\n\r\nThe cause of the problem is that because of  <a href=\"https://wiki.ubuntu.com/HardyHeron\" title=\"Ubuntu Hardy Heron\">Ubuntu Hardy Heron</a> upgrade, my firefox also got upgraded from 2.x to 3.x. The firefox browser executable in 2.x is a binary file; whereas for firefox 3.x, it is a script (.sh) file. As a result of this change, the check done by  <a href=\"http://selenium-rc.openqa.org/\" title=\"Selenium Server\">Selenium Server</a> was failing.\r\n\r\nI resolved this problem by providing explicit path to the Firefox 2 executable file in the java code. (I also tried providing explicit path to the Firefox 3 executable but that is no help).\r\n\r\nSo, the code for the Java Selenium test-case looks like this :\r\n\r\n<code>selenium = new DefaultSelenium(\"localhost\", 4444, \"*firefox /usr/lib/firefox/firefox-2-bin\", url);</code>\r\n\r\nThis is not a solution, if you want to test your app with Firefox 3. I haven\'t figured out the solution for making it work with Firefox 3; but for the time being, I am happy with testing my application with Firefox 2.\r\n\r\nIf somebody has a solution for making it work with Firefox 3, please post the solution as a comment to the blog.\r\n\r\n-Deepak','Web Testing using Selenium - fix for error \"java.lang.NullPointerException: sessionId should not be null; has this session been started yet?\"',0,'','inherit','open','open','','15-autosave','','','2010-02-23 18:01:27','2010-02-23 12:31:27','',15,'http://www.intelligrape.com/blog/?p=358',0,'revision','',0),(359,7,'2010-02-25 00:35:48','2010-02-24 19:05:48','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy.\r\n\r\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. \r\n\r\nAs our reports became more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment...\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://intelligrape.com','My experience of using jasper reports with grails application',0,'','publish','open','open','','my-experience-of-using-jasper-reports-with-grails-application','','','2010-02-25 09:33:04','2010-02-25 04:03:04','',0,'http://www.intelligrape.com/blog/?p=359',0,'post','',0),(360,7,'2010-02-25 00:31:12','2010-02-24 19:01:12','','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision','','','2010-02-25 00:31:12','2010-02-24 19:01:12','',359,'http://www.intelligrape.com/blog/?p=360',0,'revision','',0),(361,7,'2010-02-25 00:32:12','2010-02-24 19:02:12','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy. \n\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. Though the latest version 3.7.1 still works fine, only change we need to make in a generated .jrxml file is its Docktype tag. i.e to replace docktype tag with <!DOCTYPE jasperReport PUBLIC \"//JasperReports//DTD Report Design//EN\" \"http://jasperreports.sourceforge.net/dtds/jasperreport.dtd\">\n\nAs our reports got more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment etc. \n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Softwares\nhttp://intelligrape.com ','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision-2','','','2010-02-25 00:32:12','2010-02-24 19:02:12','',359,'http://www.intelligrape.com/blog/?p=361',0,'revision','',0),(362,7,'2010-02-25 00:33:18','2010-02-24 19:03:18','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy. \r\n\r\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. Though the latest version 3.7.1 still works fine, only change we need to make in a generated .jrxml file is its Docktype tag. i.e to replace docktype tag with &lt;!DOCTYPE jasperReport PUBLIC \"//JasperReports//DTD Report Design//EN\" \"http://jasperreports.sourceforge.net/dtds/jasperreport.dtd\"&rt;\r\n\r\nAs our reports got more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment etc. \r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://intelligrape.com ','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision-3','','','2010-02-25 00:33:18','2010-02-24 19:03:18','',359,'http://www.intelligrape.com/blog/?p=362',0,'revision','',0),(363,7,'2010-02-25 00:34:05','2010-02-24 19:04:05','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy.\r\n\r\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. Though the latest version 3.7.1 still works fine, only change we need to make in a generated .jrxml file is its Docktype tag. i.e to replace docktype tag with &lt;!DOCTYPE jasperReport PUBLIC \"//JasperReports//DTD Report Design//EN\" \"http://jasperreports.sourceforge.net/dtds/jasperreport.dtd\"&gt;\r\n\r\nAs our reports got more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment etc.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://intelligrape.com','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision-4','','','2010-02-25 00:34:05','2010-02-24 19:04:05','',359,'http://www.intelligrape.com/blog/?p=363',0,'revision','',0),(367,6,'2010-02-25 10:22:01','2010-02-25 04:52:01',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first character has been typed in the text box. But,a better solution will be  to make the ajax call after 500ms,  after the last character has been typed. The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</pre>\r\n<pre lang=\"javascript\">\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId) {\r\n    clearTimeout(alertTimerId);\r\n    alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n  }\r\n  function sendData(objId) {\r\n    ajax call \r\n  }\r\n</pre></div></blockquote>     \r\nHere, the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction activateTimer(objId, event) {\r\n    if (event.which == 9) {\r\n    }\r\n    else {\r\n      clearTimeout(alertTimerId);\r\n      alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n    }\r\n  }\r\n</pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n  <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</pre></div></blockquote>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com\r\n','Implementing Delay Between Ajax Calls',0,'','publish','open','open','','implementing-delay-in-ajax-calls','','','2010-02-25 10:32:40','2010-02-25 05:02:40','',0,'http://www.intelligrape.com/blog/?p=367',0,'post','',0),(364,7,'2010-02-25 00:35:48','2010-02-24 19:05:48','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy.\r\n\r\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. Though the latest version 3.7.1 still works fine, only change we need to make in a generated .jrxml file is its Docktype tag. i.e to replace docktype tag with &lt;!DOCTYPE jasperReport PUBLIC \"//JasperReports//DTD Report Design//EN\" \"http://jasperreports.sourceforge.net/dtds/jasperreport.dtd\"&gt;\r\n\r\nAs our reports became more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment...\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://intelligrape.com','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision-5','','','2010-02-25 00:35:48','2010-02-24 19:05:48','',359,'http://www.intelligrape.com/blog/?p=364',0,'revision','',0),(365,7,'2010-02-25 00:37:32','2010-02-24 19:07:32','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy.\r\n\r\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. Though the latest version 3.7.1 still works fine, only change we need to make in a generated .jrxml file is its Docktype tag. i.e to replace docktype tag with &lt;!DOCTYPE jasperReport PUBLIC \"//JasperReports//DTD Report Design//EN\" \"http://jasperreports.sourceforge.net/dtds/jasperreport.dtd\"&gt;\r\n\r\nAs our reports became more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment...\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://intelligrape.com','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision-6','','','2010-02-25 00:37:32','2010-02-24 19:07:32','',359,'http://www.intelligrape.com/blog/?p=365',0,'revision','',0),(366,7,'2010-02-25 00:38:25','2010-02-24 19:08:25','In my project we needed to generate certain pdf reports. Then while exploring the options available, I encountered a PDF plugin, which renders gsp page and returns the PDF report. It looked good for the simple reports but may not be a good idea if the report are complex. Then with the help of one of my collegue, we decided to rather generate jasper reports. And as expected, there exists a plugin called \'jasper\' to integrate jasper reports with a grails application, which made my job really easy.\r\n\r\nThings looked good, now we were only left with an IDE to rapidly generate jasper reports and then we finally found a tool called IReport. We could make version 2.0.5 working flawlessly with the jasper plugin. Though the latest version 3.7.1 still works fine, only change we need to make in a generated .jrxml file is its Docktype tag. i.e to replace docktype tag with &lt;!DOCTYPE jasperReport PUBLIC \"//JasperReports//DTD Report Design//EN\" \"http://jasperreports.sourceforge.net/dtds/jasperreport.dtd\"&gt;\r\n\r\nAs our reports became more complex and our understanding about jasper reports grew, even things which looked big like required page breaks on certain conditions etc. became really easy to handle with the IReport tool. We could generate a complex jasper report in 3 days time which includes the time taken to get accustomed to iReport and jasper report and its integration. I will soon write more about jasper reports and few changes we made to the jasper plugin to suit our requirements like directly sending emails with jasper report as an attachment...\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Softwares\r\nhttp://intelligrape.com','My experience of using jasper reports with grails application',0,'','inherit','open','open','','359-revision-7','','','2010-02-25 00:38:25','2010-02-24 19:08:25','',359,'http://www.intelligrape.com/blog/?p=366',0,'revision','',0),(368,6,'2010-02-25 09:59:13','2010-02-25 04:29:13',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box.But,a better solution will be  to make the ajax call after 500ms, after the last charecter has been typed.The idea is to clear the timer on each key-up event till the user types in the last charecter.\n This solution can be implemented as given below:\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">\n<span>\n      <input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\n\n\n<div class=\"code\">\n<pre lang=\"groovy\">\n<span>\n var alertTimerId = 0;\nfunction activateTimer(objId,e){\n           \n            clearTimeout ( alertTimerId );\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\n           \n        }\n\nfunction  sendData(objId){\n	make the ajax call here\n}\n\nHere,the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\n\nfunction activateTimer(objId,event){\n             if (event.which == 9){}\n            else{\n            clearTimeout ( alertTimerId );\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\n             }\n        }\nEvent argument can be passed as parameter like this :\n\n<span>\n      <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\n</span>\n\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision','','','2010-02-25 09:59:13','2010-02-25 04:29:13','',367,'http://www.intelligrape.com/blog/?p=368',0,'revision','',0),(369,6,'2010-02-25 10:00:13','2010-02-25 04:30:13',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box.But,a better solution will be  to make the ajax call after 500ms, after the last charecter has been typed.The idea is to clear the timer on each key-up event till the user types in the last charecter.\n This solution can be implemented as given below:\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">\n<span>\n      <input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\n\n\n<div class=\"code\">\n<pre lang=\"groovy\">\n<span>\n var alertTimerId = 0;\nfunction activateTimer(objId,e){\n           \n            clearTimeout ( alertTimerId );\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\n           \n        }\n\nfunction  sendData(objId){\n	make the ajax call here\n}\n</span> \n</pre></div></blockquote>     \nHere,the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\n\nfunction activateTimer(objId,event){\n             if (event.which == 9){}\n            else{\n            clearTimeout ( alertTimerId );\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\n             }\n        }\nEvent argument can be passed as parameter like this :\n\n<span>\n      <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\n</span>\n\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision-2','','','2010-02-25 10:00:13','2010-02-25 04:30:13','',367,'http://www.intelligrape.com/blog/?p=369',0,'revision','',0),(371,6,'2010-02-25 10:08:54','2010-02-25 04:38:54',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box.But,a better solution will be  to make the ajax call after 500ms, after the last charecter has been typed.The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n      <input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</pre>\r\n<pre lang=\"javascript\">\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId,e){\r\n            clearTimeout ( alertTimerId );\r\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\r\n           }\r\nfunction  sendData(objId){\r\n	make the ajax call here\r\n}\r\n</pre></div></blockquote>     \r\nHere,the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction activateTimer(objId,event){\r\n             if (event.which == 9){}\r\n            else{\r\n            clearTimeout ( alertTimerId );\r\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\r\n             }\r\n        }\r\n</pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n   <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</pre></div></blockquote>\r\n\r\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision-4','','','2010-02-25 10:08:54','2010-02-25 04:38:54','',367,'http://www.intelligrape.com/blog/?p=371',0,'revision','',0),(370,6,'2010-02-25 10:07:06','2010-02-25 04:37:06',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box.But,a better solution will be  to make the ajax call after 500ms, after the last charecter has been typed.The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<span>\r\n      <input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</span></pre>\r\n<pre lang=\"javascript\">\r\n<span>\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId,e){\r\n            clearTimeout ( alertTimerId );\r\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\r\n           }\r\nfunction  sendData(objId){\r\n	make the ajax call here\r\n}\r\n</span> \r\n</pre></div></blockquote>     \r\nHere,the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\n<span>\r\nfunction activateTimer(objId,event){\r\n             if (event.which == 9){}\r\n            else{\r\n            clearTimeout ( alertTimerId );\r\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\r\n             }\r\n        }\r\n</span></pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<span>\r\n\r\n      <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</span></pre></div></blockquote>\r\n\r\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision-3','','','2010-02-25 10:07:06','2010-02-25 04:37:06','',367,'http://www.intelligrape.com/blog/?p=370',0,'revision','',0),(373,6,'2010-02-25 10:16:15','2010-02-25 04:46:15',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box. But,a better solution will be  to make the ajax call after 500ms,  after the last charecter has been typed. The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</pre>\r\n<pre lang=\"javascript\">\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId, e) {\r\n    clearTimeout(alertTimerId);\r\n    alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n  }\r\n  function sendData(objId) {\r\n    ajax call \r\n  }\r\n</pre></div></blockquote>     \r\nHere, the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction activateTimer(objId, event) {\r\n    if (event.which == 9) {\r\n    }\r\n    else {\r\n      clearTimeout(alertTimerId);\r\n      alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n    }\r\n  }\r\n</pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n  <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</pre></div></blockquote>\r\n\r\nHope you fine this useful.\r\nImran Mir\r\nimran@intelligrape.com\r\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision-6','','','2010-02-25 10:16:15','2010-02-25 04:46:15','',367,'http://www.intelligrape.com/blog/?p=373',0,'revision','',0),(372,6,'2010-02-25 10:13:29','2010-02-25 04:43:29',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box. But,a better solution will be  to make the ajax call after 500ms,  after the last charecter has been typed. The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</pre>\r\n<pre lang=\"javascript\">\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId,e){\r\n            clearTimeout ( alertTimerId );\r\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\r\n           }\r\nfunction  sendData(objId){\r\n	make the ajax call here\r\n}\r\n</pre></div></blockquote>     \r\nHere, the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction activateTimer(objId,event){\r\n             if (event.which == 9){}\r\n            else{\r\n            clearTimeout ( alertTimerId );\r\n            alertTimerId = setTimeout (\'sendData(\"\' + objId +\'\")\', 500 );\r\n             }\r\n        }\r\n</pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n  <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</pre></div></blockquote>\r\n\r\nHope you fine this useful.\r\nImran Mir\r\nimran@intelligrape.com\r\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision-5','','','2010-02-25 10:13:29','2010-02-25 04:43:29','',367,'http://www.intelligrape.com/blog/?p=372',0,'revision','',0),(374,6,'2010-02-25 10:22:01','2010-02-25 04:52:01',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box. But,a better solution will be  to make the ajax call after 500ms,  after the last charecter has been typed. The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</pre>\r\n<pre lang=\"javascript\">\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId, e) {\r\n    clearTimeout(alertTimerId);\r\n    alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n  }\r\n  function sendData(objId) {\r\n    ajax call \r\n  }\r\n</pre></div></blockquote>     \r\nHere, the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction activateTimer(objId, event) {\r\n    if (event.which == 9) {\r\n    }\r\n    else {\r\n      clearTimeout(alertTimerId);\r\n      alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n    }\r\n  }\r\n</pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n  <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</pre></div></blockquote>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com\r\n','Implementing Delay In Ajax Calls',0,'','inherit','open','open','','367-revision-7','','','2010-02-25 10:22:01','2010-02-25 04:52:01','',367,'http://www.intelligrape.com/blog/?p=374',0,'revision','',0),(375,14,'2010-02-25 11:41:42','2010-02-25 06:11:42','Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first character has been typed in the text box. But,a better solution will be  to make the ajax call after 500ms,  after the last character has been typed. The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\nThis solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><input id=\"firstName\" onkeyup=\"activateTimer(this.id);\" type=\"text\" />\r\n</pre>\r\n<pre lang=\"javascript\"> var alertTimerId = 0;\r\nfunction activateTimer(objId) {\r\n    clearTimeout(alertTimerId);\r\n    alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n  }\r\n  function sendData(objId) {\r\n    ajax call\r\n  }\r\n</pre>\r\n</div></blockquote>\r\nHere, the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">function activateTimer(objId, event) {\r\n    if (event.which == 9) {\r\n    }\r\n    else {\r\n      clearTimeout(alertTimerId);\r\n      alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n    }\r\n  }\r\n</pre>\r\n</div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><input id=\"firstName\" onkeyup=\"activateTimer(this.id,event);\" type=\"text\" />\r\n</pre>\r\n</div></blockquote>\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com','Implementing Delay Between Ajax Calls',0,'','inherit','open','open','','367-autosave','','','2010-02-25 11:41:42','2010-02-25 06:11:42','',367,'http://www.intelligrape.com/blog/?p=375',0,'revision','',0),(376,6,'2010-02-25 10:23:59','2010-02-25 04:53:59',' Implementing search functionality on the keyup event using ajax has one pitfall. It can bombard our server with unnecessary ajax calls. So it becomes imperative for us to introduce some delay between the ajax calls. One way to implement it will be to make an ajax call after  some delay(say 500 ms) after the first charecter has been typed in the text box. But,a better solution will be  to make the ajax call after 500ms,  after the last charecter has been typed. The idea is to clear the timer on each key-up event till the user types in the last charecter.\r\n This solution can be implemented as given below:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n<input type=\"text\" onkeyup=\"activateTimer(this.id);\" id=\"firstName\"/>\r\n</pre>\r\n<pre lang=\"javascript\">\r\n var alertTimerId = 0;\r\nfunction activateTimer(objId, e) {\r\n    clearTimeout(alertTimerId);\r\n    alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n  }\r\n  function sendData(objId) {\r\n    ajax call \r\n  }\r\n</pre></div></blockquote>     \r\nHere, the instance or identifier of the time out call is captured in a variable and then this identifier is passed to clearTimeout function to clear the timer.\r\nAnother problem associated with ajax search on keyup event is that if we are using tab button to navigate between different search fields, unnecessary ajax calls are shooted. To prevent this we can modify our activateTimer function like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction activateTimer(objId, event) {\r\n    if (event.which == 9) {\r\n    }\r\n    else {\r\n      clearTimeout(alertTimerId);\r\n      alertTimerId = setTimeout(\'sendData(\"\' + objId + \'\")\', 500);\r\n    }\r\n  }\r\n</pre></div></blockquote>\r\nEvent argument can be passed as parameter like this :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\n  <input type=\"text\" onkeyup=\"activateTimer(this.id,event);\" id=\"firstName\"/>\r\n</pre></div></blockquote>\r\n\r\nHope you find this useful.\r\nImran Mir\r\nimran@intelligrape.com\r\n','Implementing Delay Between Ajax Calls',0,'','inherit','open','open','','367-revision-8','','','2010-02-25 10:23:59','2010-02-25 04:53:59','',367,'http://www.intelligrape.com/blog/?p=376',0,'revision','',0),(377,14,'2010-02-26 10:45:14','2010-02-26 05:15:14','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" ></pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"></pre>\r\n</div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.\r\n\r\nI think the problem can be reproduced in g:remoteField and other similar tags.\r\n\r\n\r\nSachin\r\nsachin@intelligrape.com','Migrating from grails 1.1.1 to grails 1.2.1',0,'','publish','open','open','','migrating-from-grails-1-1-1-to-grails-1-2-1','','','2010-03-02 10:11:50','2010-03-02 04:41:50','',0,'http://www.intelligrape.com/blog/?p=377',0,'post','',1),(378,14,'2010-02-25 11:19:05','2010-02-25 05:49:05','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins. just upgrading their versions took care of them. The problem came while submitting the forms we had created and a few hyper links the problem was the createLink was not functioning properly\n\nsome Link','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision','','','2010-02-25 11:19:05','2010-02-25 05:49:05','',377,'http://www.intelligrape.com/blog/?p=378',0,'revision','',0),(379,14,'2010-02-25 11:20:05','2010-02-25 05:50:05','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins. just upgrading their versions took care of them. The problem came while submitting the forms we had created and a few hyper links the problem was the createLink was not functioning properly\n','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-2','','','2010-02-25 11:20:05','2010-02-25 05:50:05','',377,'http://www.intelligrape.com/blog/?p=379',0,'revision','',0),(380,14,'2010-02-25 11:28:52','2010-02-25 05:58:52','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins. just upgrading their versions took care of them. The problem came while submitting the forms we had created and a few hyper links the problem was the createLink was not functioning properly\n\n&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;\n\nthis won\'t work with &lt;g:form&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n\n&lt;g:form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;\n\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in forms and links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-3','','','2010-02-25 11:28:52','2010-02-25 05:58:52','',377,'http://www.intelligrape.com/blog/?p=380',0,'revision','',0),(381,14,'2010-02-25 11:29:16','2010-02-25 05:59:16','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins. just upgrading their versions took care of them. The problem came while submitting the forms we had created and a few hyper links the problem was the createLink was not functioning properly\r\n\r\n&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;\r\n\r\nthis won\'t work with &lt;g:form&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n\r\n&lt;g:form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;\r\n\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in forms and links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-4','','','2010-02-25 11:29:16','2010-02-25 05:59:16','',377,'http://www.intelligrape.com/blog/?p=381',0,'revision','',0),(382,14,'2010-02-25 11:33:24','2010-02-25 06:03:24','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\n\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly\n\n&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;\n\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n\n&lt;g:form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;\n\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in forms and links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-5','','','2010-02-25 11:33:24','2010-02-25 06:03:24','',377,'http://www.intelligrape.com/blog/?p=382',0,'revision','',0),(384,14,'2010-02-25 11:35:10','2010-02-25 06:05:10','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\n\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;\n\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n\n&lt;g:form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;\n\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-7','','','2010-02-25 11:35:10','2010-02-25 06:05:10','',377,'http://www.intelligrape.com/blog/?p=384',0,'revision','',0),(383,14,'2010-02-25 11:33:56','2010-02-25 06:03:56','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly\r\n\r\n&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;\r\n\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n\r\n&lt;g:form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;\r\n\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-6','','','2010-02-25 11:33:56','2010-02-25 06:03:56','',377,'http://www.intelligrape.com/blog/?p=383',0,'revision','',0),(385,14,'2010-02-25 11:36:19','2010-02-25 06:06:19','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\n\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\n<blockquote>&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</blockquote>\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n\n&lt;g:form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;\n\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-8','','','2010-02-25 11:36:19','2010-02-25 06:06:19','',377,'http://www.intelligrape.com/blog/?p=385',0,'revision','',0),(386,14,'2010-02-25 11:36:59','2010-02-25 06:06:59','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\n\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\n<blockquote>&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</blockquote>\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n<blockquote>&lt;g: form name=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;</blockquote>\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-9','','','2010-02-25 11:36:59','2010-02-25 06:06:59','',377,'http://www.intelligrape.com/blog/?p=386',0,'revision','',0),(387,14,'2010-02-25 11:37:14','2010-02-25 06:07:14','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>&lt;g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;</blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-10','','','2010-02-25 11:37:14','2010-02-25 06:07:14','',377,'http://www.intelligrape.com/blog/?p=387',0,'revision','',0),(388,14,'2010-02-25 11:37:21','2010-02-25 06:07:21','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>&lt;g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;</blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-11','','','2010-02-25 11:37:21','2010-02-25 06:07:21','',377,'http://www.intelligrape.com/blog/?p=388',0,'revision','',0),(389,14,'2010-02-25 11:43:44','2010-02-25 06:13:44','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\n\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\n<blockquote>\n<div class=\"code\">\n<pre lang=\"html\">&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</pre>\n</div></blockquote>\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n<blockquote>\n<div class=\"code\">\n<pre lang=\"html\">&lt;g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;</pre></blockquote>\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-12','','','2010-02-25 11:43:44','2010-02-25 06:13:44','',377,'http://www.intelligrape.com/blog/?p=389',0,'revision','',0),(390,14,'2010-02-25 11:43:56','2010-02-25 06:13:56','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">&lt;g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;</pre></div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-13','','','2010-02-25 11:43:56','2010-02-25 06:13:56','',377,'http://www.intelligrape.com/blog/?p=390',0,'revision','',0),(391,14,'2010-02-25 11:44:04','2010-02-25 06:14:04','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">&lt;g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" &gt;</pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">&lt;g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"&gt;</pre>\r\n</div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-14','','','2010-02-25 11:44:04','2010-02-25 06:14:04','',377,'http://www.intelligrape.com/blog/?p=391',0,'revision','',0),(392,14,'2010-02-25 11:44:50','2010-02-25 06:14:50','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" ></pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"></pre>\r\n</div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-15','','','2010-02-25 11:44:50','2010-02-25 06:14:50','',377,'http://www.intelligrape.com/blog/?p=392',0,'revision','',0),(393,14,'2010-02-25 12:01:30','2010-02-25 06:31:30','Note: Months are from 0 to 11. Hence the 7th month is \"August\"\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nCalendar calendar = GregorianCalendar.instance\r\ncalendar.set(2009, 7, 21)\r\nprintln \"Last Day of a Month: ${calendar.getActualMaximum(GregorianCalendar.DAY_OF_MONTH)}\"\r\n</pre>\r\n<blockquote>\r\n\r\nCheers!!!\r\n~Chandan Luthra~\r\n<a href=\"mailto:chandan@intelligrape.com\">chandan@intelligrape.com</a>\r\n<a href=\"http://www.intelligrape.com\"> www.intelligrape.com</a>','Fetching the last day of the month',0,'','inherit','open','open','','212-autosave','','','2010-02-25 12:01:30','2010-02-25 06:31:30','',212,'http://www.intelligrape.com/blog/?p=393',0,'revision','',0),(394,14,'2010-02-25 11:48:53','2010-02-25 06:18:53','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" ></pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"></pre>\r\n</div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-16','','','2010-02-25 11:48:53','2010-02-25 06:18:53','',377,'http://www.intelligrape.com/blog/?p=394',0,'revision','',0),(395,16,'2010-02-25 14:55:36','2010-02-25 09:25:36','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\nBasically I found two way out this situation\r\n\r\n1) Changing permission of  usr/share/iReport/bin/ directory .\r\n\r\nThis can be done with CHMOD command\r\nsudo chmod 777 usr/share/iReport/bin\r\n\r\nor\r\n\r\n2)  change the directory where reports are compiled.\r\n\r\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\r\n\r\n\r\n\r\n________________________\r\nRegards\r\nHitesh Bhatia\r\nhttp://www.IntelliGrape.com\r\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','publish','open','open','','error-compiling-jrxml-file-with-ireport-2-0-5','','','2010-02-25 15:26:06','2010-02-25 09:56:06','',0,'http://www.intelligrape.com/blog/?p=395',0,'post','',1),(397,16,'2010-02-25 14:05:02','2010-02-25 08:35:02','Recently I encountered an error , while working  on iReports ,\n\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\n\nError :\n\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\nErrors compiling ./&lt;filename&gt;.jasper.\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\nCompilation running time: 80</code>\n\nwhat I did to make it work was  change the permission of usr/share/iReport/bin/ directory .\nGave it all permission by running command : sudo chmod 777 bin\n\nAnd voila error gone , but then it was saving .jasper file in  this directory.\n\nNext I changed directory to which file were compiled to my working directory\noption-&gt;settings-&gt;compiler\ncheck  Use Reports Directory to Compile.\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\n\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport 2',0,'','inherit','open','open','','395-revision-2','','','2010-02-25 14:05:02','2010-02-25 08:35:02','',395,'http://www.intelligrape.com/blog/?p=397',0,'revision','',0),(396,16,'2010-02-25 14:03:44','2010-02-25 08:33:44','Recently I encountered an error , while working  on iReports ,\n\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\nOn compiling it used to show error like -\n\nCompiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\nErrors compiling ./&lt;filename&gt;.jasper.\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\nCompilation running time: 80\n\nwhat I did to make it work was  change the permission of usr/share/iReport/bin/ directory .\nGave it all permission by running command : sudo chmod 777 bin\n\nAnd voila error gone , but then it was saving .jasper file in  this directory.\n\nNext I changed directory to which file were compiled to my working directory\noption-&gt;settings-&gt;compiler\ncheck  Use Reports Directory to Compile.\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\n\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport',0,'','inherit','open','open','','395-revision','','','2010-02-25 14:03:44','2010-02-25 08:33:44','',395,'http://www.intelligrape.com/blog/?p=396',0,'revision','',0),(398,16,'2010-02-25 14:05:15','2010-02-25 08:35:15','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n\r\n\r\n<blockquote>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80\r\n</blockquote>\r\n\r\n\r\nwhat I did to make it work was  change the permission of usr/share/iReport/bin/ directory .\r\nGave it all permission by running command : sudo chmod 777 bin\r\n\r\nAnd voila error gone , but then it was saving .jasper file in  this directory.\r\n\r\nNext I changed directory to which file were compiled to my working directory\r\noption-&gt;settings-&gt;compiler\r\ncheck  Use Reports Directory to Compile.\r\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\r\n\r\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-3','','','2010-02-25 14:05:15','2010-02-25 08:35:15','',395,'http://www.intelligrape.com/blog/?p=398',0,'revision','',0),(400,16,'2010-02-25 14:07:08','2010-02-25 08:37:08','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n\r\n\r\n<!--more--><Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80\r\n\r\n\r\nwhat I did to make it work was  change the permission of usr/share/iReport/bin/ directory .\r\nGave it all permission by running command : sudo chmod 777 bin\r\n\r\nAnd voila error gone , but then it was saving .jasper file in  this directory.\r\n\r\nNext I changed directory to which file were compiled to my working directory\r\noption-&gt;settings-&gt;compiler\r\ncheck  Use Reports Directory to Compile.\r\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\r\n\r\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-5','','','2010-02-25 14:07:08','2010-02-25 08:37:08','',395,'http://www.intelligrape.com/blog/?p=400',0,'revision','',0),(399,16,'2010-02-25 14:05:53','2010-02-25 08:35:53','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n\r\n\r\n<ins datetime=\"2010-02-25T08:30:38+00:00\"><Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80\r\n</ins>\r\n\r\n\r\nwhat I did to make it work was  change the permission of usr/share/iReport/bin/ directory .\r\nGave it all permission by running command : sudo chmod 777 bin\r\n\r\nAnd voila error gone , but then it was saving .jasper file in  this directory.\r\n\r\nNext I changed directory to which file were compiled to my working directory\r\noption-&gt;settings-&gt;compiler\r\ncheck  Use Reports Directory to Compile.\r\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\r\n\r\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-4','','','2010-02-25 14:05:53','2010-02-25 08:35:53','',395,'http://www.intelligrape.com/blog/?p=399',0,'revision','',0),(401,16,'2010-02-25 14:08:18','2010-02-25 08:38:18','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\n\r\nwhat I did to make it work was  change the permission of usr/share/iReport/bin/ directory .\r\nGave it all permission by running command : sudo chmod 777 bin\r\n\r\nAnd voila error gone , but then it was saving .jasper file in  this directory.\r\n\r\nNext I changed directory to which file were compiled to my working directory\r\noption-&gt;settings-&gt;compiler\r\ncheck  Use Reports Directory to Compile.\r\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\r\n\r\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-6','','','2010-02-25 14:08:18','2010-02-25 08:38:18','',395,'http://www.intelligrape.com/blog/?p=401',0,'revision','',0),(402,16,'2010-02-25 14:20:44','2010-02-25 08:50:44','','Screenshot-iReport - Options',0,'','inherit','open','open','','screenshot-ireport-options','','','2010-02-25 14:20:44','2010-02-25 08:50:44','',395,'http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png',0,'attachment','image/png',0),(403,16,'2010-02-25 14:10:33','2010-02-25 08:40:33','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n<blockquote><code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code></blockquote>\r\nBasically I found two way out this situation\r\n\r\n1)\r\nChanging permission of  usr/share/iReport/bin/ directory .\r\nGave it all permission by running command : sudo chmod 777 bin\r\n\r\nAnd voila error gone , but then it was saving .jasper file in  this directory.\r\n\r\nNext I changed directory to which file were compiled to my working directory\r\noption-&gt;settings-&gt;compiler\r\ncheck  Use Reports Directory to Compile.\r\n..and tada its started working abs fine ..with just one drawback ..now all .java (temp files) were also stored in my working directory.\r\n\r\nAnd later I found out that even if One didnt change bin permission ,and only change directory in which reports compile ( second step ) ..it\'ll still work fine.','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-7','','','2010-02-25 14:10:33','2010-02-25 08:40:33','',395,'http://www.intelligrape.com/blog/?p=403',0,'revision','',0),(404,16,'2010-02-25 14:53:25','2010-02-25 09:23:25','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\nBasically I found two way out this situation\r\n\r\n1) Changing permission of  usr/share/iReport/bin/ directory .\r\n\r\nThis can be done with CHMOD command\r\nsudo chmod 777 usr/share/iReport/bin\r\n\r\nor\r\n\r\n2)  change the directory where reports are compiled.\r\n\r\n\r\n\r\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\r\n\r\nThis has only one drawback,  all  .java (temp files) will also be stored in your working directory.\r\n\r\n________________________\r\nRegards\r\nHitesh Bhatia\r\nhttp://www.IntelliGrape.com\r\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-8','','','2010-02-25 14:53:25','2010-02-25 09:23:25','',395,'http://www.intelligrape.com/blog/?p=404',0,'revision','',0),(405,16,'2010-02-25 14:54:07','2010-02-25 09:24:07','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\nBasically I found two way out this situation\r\n\r\n1) Changing permission of  usr/share/iReport/bin/ directory .\r\n\r\nThis can be done with CHMOD command\r\nsudo chmod 777 usr/share/iReport/bin\r\n\r\nor\r\n\r\n2)  change the directory where reports are compiled.\r\n\r\n\r\n\r\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\r\n\r\nThis has only one drawback,  all  .java (temp files) will also be stored in your working directory.\r\n\r\n________________________\r\nRegards\r\nHitesh Bhatia\r\nhttp://www.IntelliGrape.com\r\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-9','','','2010-02-25 14:54:07','2010-02-25 09:24:07','',395,'http://www.intelligrape.com/blog/?p=405',0,'revision','',0),(406,16,'2010-02-25 14:55:10','2010-02-25 09:25:10','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\nBasically I found two way out this situation\r\n\r\n1) Changing permission of  usr/share/iReport/bin/ directory .\r\n\r\nThis can be done with CHMOD command\r\nsudo chmod 777 usr/share/iReport/bin\r\n\r\nor\r\n\r\n2)  change the directory where reports are compiled.\r\n\r\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\r\n\r\nThis has only one drawback,  all  .java (temp files) will also be stored in your working directory.\r\n\r\n________________________\r\nRegards\r\nHitesh Bhatia\r\nhttp://www.IntelliGrape.com\r\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-10','','','2010-02-25 14:55:10','2010-02-25 09:25:10','',395,'http://www.intelligrape.com/blog/?p=406',0,'revision','',0),(410,10,'2010-02-25 21:56:56','2010-02-25 16:26:56','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code from the link given above.\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','publish','open','open','','tracking-image-clicks-using-google-analytics','','','2010-02-26 10:39:32','2010-02-26 05:09:32','',0,'http://www.intelligrape.com/blog/?p=410',0,'post','',0),(407,16,'2010-02-25 14:57:13','2010-02-25 09:27:13','Recently I encountered an error , while working  on iReports ,\n\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\n\nError :\n\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\nErrors compiling ./&lt;filename&gt;.jasper.\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\nCompilation running time: 80</code>\n\nBasically I found two way out this situation\n\n1) Changing permission of  usr/share/iReport/bin/ directory .\n\nThis can be done with CHMOD command\nsudo chmod 777 usr/share/iReport/bin\n\nor\n\n2)  change the directory where reports are compiled.\n\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\n\nThis has only one drawback,  all  .java (temp files) will also be stored in your working directory.\n\n________________________\nRegards\nHitesh Bhatia\nhttp://www.IntelliGrape.com\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-autosave','','','2010-02-25 14:57:13','2010-02-25 09:27:13','',395,'http://www.intelligrape.com/blog/?p=407',0,'revision','',0),(408,16,'2010-02-25 14:55:36','2010-02-25 09:25:36','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\nBasically I found two way out this situation\r\n\r\n1) Changing permission of  usr/share/iReport/bin/ directory .\r\n\r\nThis can be done with CHMOD command\r\nsudo chmod 777 usr/share/iReport/bin\r\n\r\nor\r\n\r\n2)  change the directory where reports are compiled.\r\n\r\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\r\n\r\nThis has only one drawback,  all  .java (temp files) will also be stored in your working directory.\r\n\r\n________________________\r\nRegards\r\nHitesh Bhatia\r\nhttp://www.IntelliGrape.com\r\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-11','','','2010-02-25 14:55:36','2010-02-25 09:25:36','',395,'http://www.intelligrape.com/blog/?p=408',0,'revision','',0),(409,16,'2010-02-25 14:57:41','2010-02-25 09:27:41','Recently I encountered an error , while working  on iReports ,\r\n\r\niReport it was not able to compile .jrxml file to generate .jasper file , whilst  it used to show  compile time.\r\n\r\nError :\r\n\r\n<code>Compiling to file... ./&lt;filename&gt;.jasper -&gt; /usr/share/iReport/bin/&lt;filename&gt;.java\r\nErrors compiling ./&lt;filename&gt;.jasper.\r\nnet.sf.jasperreports.engine.JRException: Error saving expressions class file : /usr/share/iReport/bin/&lt;filename&gt;_1267071292035_83340.java\r\nCompilation running time: 80</code>\r\n\r\nBasically I found two way out this situation\r\n\r\n1) Changing permission of  usr/share/iReport/bin/ directory .\r\n\r\nThis can be done with CHMOD command\r\nsudo chmod 777 usr/share/iReport/bin\r\n\r\nor\r\n\r\n2)  change the directory where reports are compiled.\r\n\r\n<a href=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\"><img class=\"alignleft size-full wp-image-402\" title=\"Screenshot-iReport - Options\" src=\"http://www.intelligrape.com/blog/wp-content/uploads/2010/02/Screenshot-iReport-Options.png\" alt=\"check &quot;option -&gt; setting -&gt; compiler --&gt; Use Report Directory to Compile&quot;\" width=\"511\" height=\"466\" /></a>\r\n\r\nThis has only one drawback,  all  .java (temp files) will also be stored in your working directory.\r\n\r\n________________________\r\nRegards\r\nHitesh Bhatia\r\nhttp://www.IntelliGrape.com\r\n________________________','Error Compiling .jrxml file with iReport 2.0.5',0,'','inherit','open','open','','395-revision-12','','','2010-02-25 14:57:41','2010-02-25 09:27:41','',395,'http://www.intelligrape.com/blog/?p=409',0,'revision','',0),(411,10,'2010-02-25 21:50:01','2010-02-25 16:20:01','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\n\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\n\n<code>\nvar imgs = document.getElementsByTagName(\"img\");\nfor(var l=0; l <imgs.length; l++) {\n       try {\n               var path = imgs[l].getAttribute(\'src\');\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\n               startListening(imgs[l],\"click\", trackImageClicks);\n       }\n       catch(e){\n           continue;\n       }\n    }\n</code>\n\nAnd a method before the script provided by Google for the site\n\n<code>\nfunction trackImageClicks(evnt) {\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\n    while (e.tagName != \"A\") {\n        e = e.parentNode;\n    }\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\n}\n</code>','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision','','','2010-02-25 21:50:01','2010-02-25 16:20:01','',410,'http://www.intelligrape.com/blog/?p=411',0,'revision','',0),(412,10,'2010-02-25 21:52:34','2010-02-25 16:22:34','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\n\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\n\n<blockquote>\n<code>\nvar imgs = document.getElementsByTagName(\"img\");\nfor(var l=0; l <imgs.length; l++) {\n       try {\n               var path = imgs[l].getAttribute(\'src\');\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\n               startListening(imgs[l],\"click\", trackImageClicks);\n       }\n       catch(e){\n           continue;\n       }\n    }\n</code>\n</blockquote>\n\nAnd a method before the Analytics script provided by Google for the site\n<blockquote>\n<code>\nfunction trackImageClicks(evnt) {\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\n    while (e.tagName != \"A\") {\n        e = e.parentNode;\n    }\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\n}\n</code>\n</blockquote>\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-2','','','2010-02-25 21:52:34','2010-02-25 16:22:34','',410,'http://www.intelligrape.com/blog/?p=412',0,'revision','',0),(413,10,'2010-02-25 21:52:39','2010-02-25 16:22:39','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\r\n\r\n<blockquote>\r\n<code>\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</code>\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n<code>\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n</code>\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-3','','','2010-02-25 21:52:39','2010-02-25 16:22:39','',410,'http://www.intelligrape.com/blog/?p=413',0,'revision','',0),(414,10,'2010-02-25 21:53:29','2010-02-25 16:23:29','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\r\n\r\n<blockquote>\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-4','','','2010-02-25 21:53:29','2010-02-25 16:23:29','',410,'http://www.intelligrape.com/blog/?p=414',0,'revision','',0),(415,10,'2010-02-25 21:53:32','2010-02-25 16:23:32','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\r\n\r\n<blockquote>\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-5','','','2010-02-25 21:53:32','2010-02-25 16:23:32','',410,'http://www.intelligrape.com/blog/?p=415',0,'revision','',0),(416,10,'2010-02-25 21:55:22','2010-02-25 16:25:22','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\">\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-6','','','2010-02-25 21:55:22','2010-02-25 16:25:22','',410,'http://www.intelligrape.com/blog/?p=416',0,'revision','',0),(417,10,'2010-02-25 21:56:09','2010-02-25 16:26:09','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-7','','','2010-02-25 21:56:09','2010-02-25 16:26:09','',410,'http://www.intelligrape.com/blog/?p=417',0,'revision','',0),(418,10,'2010-02-25 21:56:22','2010-02-25 16:26:22','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code mentioned above.\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-8','','','2010-02-25 21:56:22','2010-02-25 16:26:22','',410,'http://www.intelligrape.com/blog/?p=418',0,'revision','',0),(419,10,'2010-02-25 21:56:56','2010-02-25 16:26:56','In one of the projects, it was required to track the number of times an image (which linked to another page) was clicked using Google Analytics. We found a very informative article <a href=\"http://www.goodwebpractices.com/roi/track-downloads-in-google-analytics-automatically.html\" target=\"_blank\">here</a>. It talks about tracking external links and file downloads. This wasn\'t exactly our purpose, but the <a href=\"http://www.goodwebpractices.com/downloads/gatag.js\" target=\"_blank\">javascript</a> downloaded from there acted as a very good starting point.\r\n\r\nWhat we did was to add a code block like this after line no. 13 of the javascript code from the link given above.\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nvar imgs = document.getElementsByTagName(\"img\");\r\nfor(var l=0; l <imgs.length; l++) {\r\n       try {\r\n               var path = imgs[l].getAttribute(\'src\');\r\n               var isDoc = path.match(/\\.(?:jpg|png|gif|svg)($|\\&|\\?)/);\r\n               startListening(imgs[l],\"click\", trackImageClicks);\r\n       }\r\n       catch(e){\r\n           continue;\r\n       }\r\n    }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nAnd a method before the Analytics script provided by Google for the site\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\">\r\nfunction trackImageClicks(evnt) {\r\n    var e = (evnt.srcElement) ? evnt.srcElement : this;\r\n    var lnk = (e.getAttribute(\"src\").charAt(0) == \"/\") ? e.getAttribute(\"src\") : \"/\" + e.getAttribute(\"src\");\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n    while (e.tagName != \"A\") {\r\n        e = e.parentNode;\r\n    }\r\n     lnk = (e.pathname.charAt(0) == \"/\") ? e.pathname : \"/\" + e.pathname;\r\n    if (e.search && e.pathname.indexOf(e.search) == -1) lnk += e.search;\r\n    if (e.hostname != location.host) lnk = e.hostname + lnk;\r\n    if (typeof(pageTracker) == \"object\") pageTracker._trackPageview(lnk);\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nNow, the clicks on each image were getting tracked. ','Tracking Image Clicks using Google Analytics',0,'','inherit','open','open','','410-revision-9','','','2010-02-25 21:56:56','2010-02-25 16:26:56','',410,'http://www.intelligrape.com/blog/?p=419',0,'revision','',0),(420,14,'2010-02-25 13:43:05','2010-02-25 08:13:05','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" ></pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"></pre>\r\n</div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.\r\n\r\nI think the problem can be reproduced in g:remoteField and other similar tags.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-17','','','2010-02-25 13:43:05','2010-02-25 08:13:05','',377,'http://www.intelligrape.com/blog/?p=420',0,'revision','',0),(421,19,'2010-02-26 11:17:28','0000-00-00 00:00:00','','Draft created on February 26, 2010 at 5:47 am',0,'','draft','open','open','','','','','2010-02-26 11:17:28','0000-00-00 00:00:00','',0,'http://www.intelligrape.com/blog/?p=421',0,'post','',0),(422,14,'2010-03-02 10:11:34','2010-03-02 04:41:34','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\n\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\n<blockquote>\n<div class=\"code\">\n<pre lang=\"html\"><g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" ></pre>\n</div></blockquote>\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\n<blockquote>\n<div class=\"code\">\n<pre lang=\"html\"><g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"></pre>\n</div></blockquote>\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.\n\nI think the problem can be reproduced in g:remoteField and other similar tags.\n\n\nSachin\nsachin@intelligrape.com','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-autosave','','','2010-03-02 10:11:34','2010-03-02 04:41:34','',377,'http://www.intelligrape.com/blog/?p=422',0,'revision','',0),(423,14,'2010-02-26 10:45:14','2010-02-26 05:15:14','Recently I migrated my project which is in development from grails version 1.1.1 to grails 1.2.1 using grails upgrade.. and it worked like charm, though there were some issues with a couple of plugins, just upgrading their versions took care of them. The problem came while submitting the forms.\r\n\r\nwe had created some forms and a few hyper links the problem was the createLink was not functioning properly,\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:form name=\"myForm\" action=\"${createLink(action:\'action\',controller:\'controller\')}\"  method=\"post\" ></pre>\r\n</div></blockquote>\r\nthis won\'t work with &lt;g:link&gt; either but it works with &lt;a&gt; tag and &lt;form&gt; tag. but that of course is not a good thing to do when u have &lt;g:link&gt; and &lt;g:form&gt; available. The solution was simple\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><g:formname=\"myForm\" url=\"[controller:\'controller\',action:\'action\']\" method=\"post\"></pre>\r\n</div></blockquote>\r\nso avoid using createLink if you have other options, migrating may just become a bit of a niggle if you are using createLink in g:forms and g:links.\r\n\r\nI think the problem can be reproduced in g:remoteField and other similar tags.','Migrating from grails 1.1.1 to grails 1.2.1',0,'','inherit','open','open','','377-revision-18','','','2010-02-26 10:45:14','2010-02-26 05:15:14','',377,'http://www.intelligrape.com/blog/?p=423',0,'revision','',0),(424,13,'2010-03-04 12:01:13','2010-03-04 06:31:13','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\r\n</pre>\r\n</div></blockquote>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\r\n            {\r\n                var data = jQuery.httpData(xhr,options.dataType);\r\n		/* \r\n                 Now data contains the responseText if the response type\r\n		 is text/html or text/palin otherwise it is undefined.\r\n                 */\r\n                var inputFieldIndex=-1;\r\n                try{\r\n			/* try-catch because data may be undefined as mentioned above. */\r\n			inputFieldIndex=data.indexOf(\"<input\");\r\n		}catch(err){}\r\n                if(inputFieldIndex>-1){	\r\n                   /* response contains input tag */\r\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\r\n                }\r\n            });\r\n\r\n          });</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://api.jquery.com/ajaxComplete/\" target=\"_blank\"> http://api.jquery.com/ajaxComplete/</a>\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','publish','open','open','','monitoring-ajax-call-response','','','2010-03-04 13:02:22','2010-03-04 07:32:22','',0,'http://www.intelligrape.com/blog/?p=424',0,'post','',2),(427,13,'2010-03-04 11:54:21','2010-03-04 06:24:21','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\r\n</pre>\r\n</div></blockquote>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\r\n            {\r\n                var data = jQuery.httpData(xhr,options.dataType);\r\n		/* \r\n                 Now data contains the responseText if the response type\r\n		 is text/html or text/palin otherwise it is undefined.\r\n                 */\r\n                var inputFieldIndex=-1;\r\n                try{\r\n			/* try-catch because data may be undefined as mentioned above. */\r\n			inputFieldIndex=data.indexOf(\"<input\");\r\n		}catch(err){}\r\n                if(inputFieldIndex>-1){	\r\n                   /* response contains input tag */\r\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\r\n                }\r\n            });\r\n\r\n          });</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://api.jquery.com/ajaxComplete/\" target=\"_blank\"> http://api.jquery.com/ajaxComplete/</a>\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','inherit','open','open','','424-revision-3','','','2010-03-04 11:54:21','2010-03-04 06:24:21','',424,'http://www.intelligrape.com/blog/?p=427',0,'revision','',0),(425,13,'2010-03-04 11:39:53','2010-03-04 06:09:53','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\n<blockquote>\n<div class=\"code\">\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\n</pre>\n</div></blockquote>\n\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\">\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\n            {\n                var data = jQuery.httpData(xhr,options.dataType);\n		/* \n                 Now data contains the responseText if the response type\n		 is text/html or text/palin otherwise it is undefined.\n                 */\n                var inputFieldIndex=-1;\n                try{\n			/* try-catch because data may be undefined as mentioned above.*/\n			inputFieldIndex=data.indexOf(\"<input\");\n		}catch(err){}\n                if(inputFieldIndex>-1){	\n                   /* response contains input tag */\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\n                }\n            });\n\n          });</script></pre>\n</div></blockquote>\n\n<p>The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\n\n ~~~~Bhagwat Kumar~~~\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','inherit','open','open','','424-revision','','','2010-03-04 11:39:53','2010-03-04 06:09:53','',424,'http://www.intelligrape.com/blog/?p=425',0,'revision','',0),(426,13,'2010-03-04 11:40:52','2010-03-04 06:10:52','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\n<blockquote>\n<div class=\"code\">\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\n</pre>\n</div></blockquote>\n\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\">\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\n            {\n                var data = jQuery.httpData(xhr,options.dataType);\n		/* \n                 Now data contains the responseText if the response type\n		 is text/html or text/palin otherwise it is undefined.\n                 */\n                var inputFieldIndex=-1;\n                try{\n			/* try-catch because data may be undefined as mentioned above. */\n			inputFieldIndex=data.indexOf(\"<input\");\n		}catch(err){}\n                if(inputFieldIndex>-1){	\n                   /* response contains input tag */\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\n                }\n            });\n\n          });</script></pre>\n</div></blockquote>\n\n<p>The above trick worked for me and hope it works for you guys too.</p>\n\nHelpful links :-\n<a class=\"alignleft\" href=\"http://www.prototypejs.org/api/ajax/responders\" target=\"_blank\"> http://www.prototypejs.org/api/ajax/responders</a>\n<a class=\"alignleft\" href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" target=\"_blank\">http://docs.jquery.com/Ajax/jQuery.ajax</a>\n<a class=\"alignleft\" href=\"http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications\" target=\"_blank\">http://blogs.aarohan.biz/2009/05/26/get-started-with-jquery-ajax-and-json-in-your-perl-web-applications</a> (Thanks to Amit)\n\n ~~~~Bhagwat Kumar~~~\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','inherit','open','open','','424-revision-2','','','2010-03-04 11:40:52','2010-03-04 06:10:52','',424,'http://www.intelligrape.com/blog/?p=426',0,'revision','',0),(428,13,'2010-03-04 11:54:30','2010-03-04 06:24:30','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\r\n</pre>\r\n</div></blockquote>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\r\n            {\r\n                var data = jQuery.httpData(xhr,options.dataType);\r\n		/* \r\n                 Now data contains the responseText if the response type\r\n		 is text/html or text/palin otherwise it is undefined.\r\n                 */\r\n                var inputFieldIndex=-1;\r\n                try{\r\n			/* try-catch because data may be undefined as mentioned above. */\r\n			inputFieldIndex=data.indexOf(\"<input\");\r\n		}catch(err){}\r\n                if(inputFieldIndex>-1){	\r\n                   /* response contains input tag */\r\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\r\n                }\r\n            });\r\n\r\n          });</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://api.jquery.com/ajaxComplete/\" target=\"_blank\"> http://api.jquery.com/ajaxComplete/</a>\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','inherit','open','open','','424-revision-4','','','2010-03-04 11:54:30','2010-03-04 06:24:30','',424,'http://www.intelligrape.com/blog/?p=428',0,'revision','',0),(429,13,'2010-03-04 13:04:09','2010-03-04 07:34:09','<p>In our current project we are using jsecurity plugin and some of our bootstrap code required a user to be logged in. I found a nice blog   <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\"> http://www.intelligrape.com/blog/?p=335</a>  on this topic but it was using groovy metaprogramming to override the normal behaviour of <code>SecurityUtils.getSubject()</code> which is suitable for <em>test environment</em>.</p><p> After a few minutes of digging into jsecurity plugin we found an easy solution :-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n  def jsecSecurityManager\r\n\r\n  def myAction={\r\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\r\n        jsecSecurityManager.login(authToken)\r\n	\r\n	/*\r\n	Your code here that depends on logged in user.\r\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\r\n	*/\r\n\r\n   }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Software','Programmatically logging in user in jsecurity plugin',0,'','publish','open','open','','programmatically-logging-in-user-in-jsecurity-plugin','','http://www.intelligrape.com/blog/?p=335\nhttp://www.intelligrape.com/blog/?p=335','2010-04-29 15:58:21','2010-04-29 10:28:21','',0,'http://www.intelligrape.com/blog/?p=429',0,'post','',0),(430,13,'2010-03-04 12:58:06','2010-03-04 07:28:06','','Programmatically logging in user while using jsecurity plugin',0,'','inherit','open','open','','429-revision','','','2010-03-04 12:58:06','2010-03-04 07:28:06','',429,'http://www.intelligrape.com/blog/?p=430',0,'revision','',0),(431,13,'2010-03-04 12:58:34','2010-03-04 07:28:34','','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-2','','','2010-03-04 12:58:34','2010-03-04 07:28:34','',429,'http://www.intelligrape.com/blog/?p=431',0,'revision','',0),(432,13,'2010-03-04 12:01:13','2010-03-04 06:31:13','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\r\n</pre>\r\n</div></blockquote>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\r\n            {\r\n                var data = jQuery.httpData(xhr,options.dataType);\r\n		/* \r\n                 Now data contains the responseText if the response type\r\n		 is text/html or text/palin otherwise it is undefined.\r\n                 */\r\n                var inputFieldIndex=-1;\r\n                try{\r\n			/* try-catch because data may be undefined as mentioned above. */\r\n			inputFieldIndex=data.indexOf(\"<input\");\r\n		}catch(err){}\r\n                if(inputFieldIndex>-1){	\r\n                   /* response contains input tag */\r\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\r\n                }\r\n            });\r\n\r\n          });</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://api.jquery.com/ajaxComplete/\" target=\"_blank\"> http://api.jquery.com/ajaxComplete/</a>\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','inherit','open','open','','424-revision-5','','','2010-03-04 12:01:13','2010-03-04 06:31:13','',424,'http://www.intelligrape.com/blog/?p=432',0,'revision','',0),(433,13,'2010-03-04 13:01:55','2010-03-04 07:31:55','<p>Recently I have faced a problem of monitoring all the ajax calls. Based on the response from server I have to perform some task depending on the contents of response. If the html response contains some text input field, the first text input field should be automatically focused otherwise leave the response as it is. </p><p>Here is the javascript code :</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"html\"><span id=\"ajax_spinner\" style=\"display:none;\"></span>\r\n</pre>\r\n</div></blockquote>\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n            jQuery(\"#ajax_spinner\").ajaxComplete(function(event, xhr, options)\r\n            {\r\n                var data = jQuery.httpData(xhr,options.dataType);\r\n		/* \r\n                 Now data contains the responseText if the response type\r\n		 is text/html or text/palin otherwise it is undefined.\r\n                 */\r\n                var inputFieldIndex=-1;\r\n                try{\r\n			/* try-catch because data may be undefined as mentioned above. */\r\n			inputFieldIndex=data.indexOf(\"<input\");\r\n		}catch(err){}\r\n                if(inputFieldIndex>-1){	\r\n                   /* response contains input tag */\r\n                    jQuery(\'input:text:visible[disabled=false]:first\').focus();\r\n                }\r\n            });\r\n\r\n          });</script></pre>\r\n</div></blockquote>\r\n\r\n<p>The above trick worked for me and hope it works for you guys too.</p>\r\n\r\nHelpful links :-\r\n<a class=\"alignleft\" href=\"http://api.jquery.com/ajaxComplete/\" target=\"_blank\"> http://api.jquery.com/ajaxComplete/</a>\r\n\r\n ~~~~Bhagwat Kumar~~~\r\nbhagwat@intelligrape.com','Monitoring  ajax call response',0,'','inherit','open','open','','424-revision-6','','','2010-03-04 13:01:55','2010-03-04 07:31:55','',424,'http://www.intelligrape.com/blog/?p=433',0,'revision','',0),(434,13,'2009-12-02 11:02:36','2009-12-02 05:32:36','In our current project we faced a problem  where we need to change the schedule of quartz job programmatically. The timeout value is read from the database. After doing some googling and digging mailing lists we found the following way-\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyJob{\r\n    static triggers = {\r\n        simple name: \'mySimpleTrigger\', group: \'mySimpleTriggerGroup\'\r\n        }\r\n    def execute() {\r\n        println \"${new Date()} -&gt; Job run!\"\r\n    }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\nName and group attributes helped us in retrieving the associated trigger instance with this job. Here is the code of the action that reschedules the above job.\r\n<blockquote>\r\n\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n   def quartzScheduler                // Inject the quartzScheduler bean\r\n\r\n  def reScheduleMyJob={\r\n       def trigger = quartzScheduler.getTrigger(\"mySimpleTrigger\", \"mySimpleTriggerGroup\")\r\n\r\n       trigger.repeatInterval = 5000    // in millisecods, a long value\r\n       trigger.repeatCount=10           // Optional int value, if not set it repeats indefinately.\r\n\r\n       Date nextFireTime=quartzScheduler.rescheduleJob(trigger.name, trigger.group, trigger)\r\n\r\n       println \"Next Fire Time : ${nextFireTime}\"\r\n  }\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\nSimilarly if you are using Cron expression to schedule the job then use <code>setCronExpression</code> method of the trigger instance got from <code>quartzScheduler.getTrigger()</code> to reset the cron expression.\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\nHelpful links:-\r\n<a href=\"http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021\">http://old.nabble.com/Changing-quartz-job-timeout-property-td26512630.html#a26532021</a>\r\n<a href=\"http://quartz.sourceforge.net/javadoc\">http://quartz.sourceforge.net/javadoc</a>\r\n<a href=\"http://grails.org/plugin/quartz\">http://grails.org/plugin/quartz</a>\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Rescheduling a Quartz job programatically',0,'','inherit','open','open','','318-revision-11','','','2009-12-02 11:02:36','2009-12-02 05:32:36','',318,'http://www.intelligrape.com/blog/?p=434',0,'revision','',0),(435,13,'2010-03-04 12:59:47','2010-03-04 07:29:47','','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-3','','','2010-03-04 12:59:47','2010-03-04 07:29:47','',429,'http://www.intelligrape.com/blog/?p=435',0,'revision','',0),(436,13,'2010-03-04 13:21:51','2010-03-04 07:51:51','<p>In our current project we are using jsecurity plugin and some of our bootstrap code required a user to be logged in. I found a nice blog   <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\"> http://www.intelligrape.com/blog/?p=335</a>  (thanks to Amit) on this topic but it was using groovy metaprogramming to override the normal behaviour of <code>SecurityUtils.getSubject()</code> which is suitable for <em>test environment</em>.</p><p> After a few minutes of digging into jsecurity plugin we found an easy solution :-</p>\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">class MyController{\n  def jsecSecurityManager\n\n  def myAction={\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\n        jsecSecurityManager.login(authToken)\n	\n	/*\n	Your code here that depends on logged in user.\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\n	*/\n\n   }\n}</pre>\n</div>\n</blockquote>\n\n</blockquote>\n\nIt worked for us.Hope it will save your time too.\n\n ~~~~Bhagwt Kumar~~~~\nbhagwat@intelligrape.com\nIntelliGrape Softwares','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-autosave','','','2010-03-04 13:21:51','2010-03-04 07:51:51','',429,'http://www.intelligrape.com/blog/?p=436',0,'revision','',0),(437,13,'2010-03-04 13:04:09','2010-03-04 07:34:09','','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-4','','','2010-03-04 13:04:09','2010-03-04 07:34:09','',429,'http://www.intelligrape.com/blog/?p=437',0,'revision','',0),(438,13,'2010-03-04 13:08:23','2010-03-04 07:38:23','In our current project we have to run code on bootstrap some of which requires a user to be logged in. \r\nI found a blog <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\">http://www.intelligrape.com/blog/?p=335</a> (thanks to Amit)regarding this topic but it was using metaprogramming to override the normal behaviour of SecurityUtils.getSubject() which is suitable for test environment. After a few minutes of digging into jsecurity plugin we found an easy solution :-\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n  def jsecSecurityManager\r\n\r\n  def myAction={\r\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\r\n        jsecSecurityManager.login(authToken)\r\n	\r\n	/*\r\n	Your code here that depends on logged in user.\r\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\r\n	*/\r\n\r\n   }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n</div>\r\n</blockquote>\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-5','','','2010-03-04 13:08:23','2010-03-04 07:38:23','',429,'http://www.intelligrape.com/blog/?p=438',0,'revision','',0),(439,13,'2010-03-04 13:18:37','2010-03-04 07:48:37','<p>In our current project we are using jsecurity plugin and some of our bootstrap code required a user to be logged in. I found a nice blog   <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\"> http://www.intelligrape.com/blog/?p=335</a>  (thanks to Amit) on this topic but it was using groovy metaprogramming to override the normal behaviour of <code>SecurityUtils.getSubject()</code> which is suitable for <em>test environment</em>.</p><p> After a few minutes of digging into jsecurity plugin we found an easy solution :-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n  def jsecSecurityManager\r\n\r\n  def myAction={\r\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\r\n        jsecSecurityManager.login(authToken)\r\n	\r\n	/*\r\n	Your code here that depends on logged in user.\r\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\r\n	*/\r\n\r\n   }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n</div>\r\n</blockquote>\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-6','','','2010-03-04 13:18:37','2010-03-04 07:48:37','',429,'http://www.intelligrape.com/blog/?p=439',0,'revision','',0),(440,13,'2010-03-04 13:20:44','2010-03-04 07:50:44','<p>In our current project we are using jsecurity plugin and some of our bootstrap code required a user to be logged in. I found a nice blog   <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\"> http://www.intelligrape.com/blog/?p=335</a>  (thanks to Amit) on this topic but it was using groovy metaprogramming to override the normal behaviour of <code>SecurityUtils.getSubject()</code> which is suitable for <em>test environment</em>.</p><p> After a few minutes of digging into jsecurity plugin we found an easy solution :-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n  def jsecSecurityManager\r\n\r\n  def myAction={\r\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\r\n        jsecSecurityManager.login(authToken)\r\n	\r\n	/*\r\n	Your code here that depends on logged in user.\r\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\r\n	*/\r\n\r\n   }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n</div>\r\n</blockquote>\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-7','','','2010-03-04 13:20:44','2010-03-04 07:50:44','',429,'http://www.intelligrape.com/blog/?p=440',0,'revision','',0),(441,13,'2010-03-04 13:21:58','2010-03-04 07:51:58','<p>In our current project we are using jsecurity plugin and some of our bootstrap code required a user to be logged in. I found a nice blog   <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\"> http://www.intelligrape.com/blog/?p=335</a>  (thanks to Amit) on this topic but it was using groovy metaprogramming to override the normal behaviour of <code>SecurityUtils.getSubject()</code> which is suitable for <em>test environment</em>.</p><p> After a few minutes of digging into jsecurity plugin we found an easy solution :-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n  def jsecSecurityManager\r\n\r\n  def myAction={\r\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\r\n        jsecSecurityManager.login(authToken)\r\n	\r\n	/*\r\n	Your code here that depends on logged in user.\r\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\r\n	*/\r\n\r\n   }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-8','','','2010-03-04 13:21:58','2010-03-04 07:51:58','',429,'http://www.intelligrape.com/blog/?p=441',0,'revision','',0),(442,7,'2010-03-06 00:02:48','2010-03-05 18:32:48','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" We were just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate statement doesn\'t support list as a parameter. So <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a> on the mailing list I found the solution  \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session ->\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', transactions)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	myMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a> in the mailing list \r\n\r\nHope it helped! \r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','publish','open','open','','grails-handling-staleobjectstateexception-and-making-executeupdate-transactional','','','2010-03-06 10:11:40','2010-03-06 04:41:40','',0,'http://www.intelligrape.com/blog/?p=442',0,'post','',0),(443,7,'2010-03-05 23:51:59','2010-03-05 18:21:59','Recently I encountered an  StaleObjectStateException which said Row was updated or deleted by another transaction. I was just updating multiple objects of the same domain inside a loop. We used executeUpdate statement instead of myClass.save() method to update the records, which worked.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\n</pre>\n</div></blockquote>\nLater we also needed to update multiple objects of the same domain with same values. Then since grails executeUpdate didn\'t support taking list as an parameter to the execute statement and then on mailing list I found the solution  http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\n                            t.statusFor in (:selectedList)\"\"\")\n			     .setParameterList(\'selectedList\', trans)\n			     .setParameter(\'today\', new Date()).executeUpdate()\n    }\n</pre>\n</div></blockquote>\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then We used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\"> Servicer.withTransaction {\n	amountMap.each {servicerId, amount -&gt;\n	      def servicer = Servicer.read(servicerId)\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\n	      currBalance -= amount\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\n		 servicer.reserveAccount.id])\n    }\n }\n</pre>\n</div></blockquote>\nAnd one more solution to handle this exception is given in mailing list here.http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153.\n\nHope it helped!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException/ making ',0,'','inherit','open','open','','442-revision','','','2010-03-05 23:51:59','2010-03-05 18:21:59','',442,'http://www.intelligrape.com/blog/?p=443',0,'revision','',0),(444,7,'2010-03-05 23:52:59','2010-03-05 18:22:59','Recently I encountered an  StaleObjectStateException which said Row was updated or deleted by another transaction. I was just updating multiple objects of the same domain inside a loop. We used executeUpdate statement instead of myClass.save() method to update the records, which worked.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\n</pre>\n</div></blockquote>\nLater we also needed to update multiple objects of the same domain with same values. Then since grails executeUpdate didn\'t support taking list as an parameter to the execute statement and then on mailing list I found the solution  http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\n                            t.statusFor in (:selectedList)\"\"\")\n			     .setParameterList(\'selectedList\', trans)\n			     .setParameter(\'today\', new Date()).executeUpdate()\n    }\n</pre>\n</div></blockquote>\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then We used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\"> Servicer.withTransaction {\n	amountMap.each {servicerId, amount -&gt;\n	      def servicer = Servicer.read(servicerId)\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\n	      currBalance -= amount\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\n		 servicer.reserveAccount.id])\n    }\n }\n</pre>\n</div></blockquote>\nAnd one more solution to handle this exception is given in mailing list here.http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153.\n\nHope it helped!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException/ making executeUpdate transactional',0,'','inherit','open','open','','442-revision-2','','','2010-03-05 23:52:59','2010-03-05 18:22:59','',442,'http://www.intelligrape.com/blog/?p=444',0,'revision','',0),(445,7,'2010-03-05 23:54:14','2010-03-05 18:24:14','Recently I encountered an  StaleObjectStateException which said Row was updated or deleted by another transaction. I was just updating multiple objects of the same domain inside a loop. We used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. Then since grails executeUpdate didn\'t support taking list as an parameter to the execute statement and then on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', trans)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then We used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	amountMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd one more solution to handle this exception is given in mailing list here.http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException/ making executeUpdate transactional',0,'','inherit','open','open','','442-revision-3','','','2010-03-05 23:54:14','2010-03-05 18:24:14','',442,'http://www.intelligrape.com/blog/?p=445',0,'revision','',0),(446,7,'2010-03-05 23:55:49','2010-03-05 18:25:49','Recently I encountered an  StaleObjectStateException which said Row was updated or deleted by another transaction. I was just updating multiple objects of the same domain inside a loop. We used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. Then since grails executeUpdate didn\'t support taking list as an parameter to the execute statement and then on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', trans)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then We used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	amountMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd one more solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException/ making executeUpdate transactional',0,'','inherit','open','open','','442-revision-4','','','2010-03-05 23:55:49','2010-03-05 18:25:49','',442,'http://www.intelligrape.com/blog/?p=446',0,'revision','',0),(447,7,'2010-03-05 23:58:05','2010-03-05 18:28:05','Recently I encountered an  StaleObjectStateException which said Row was updated or deleted by another transaction. I was just updating multiple objects of the same domain inside a loop. We used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. Then since grails executeUpdate didn\'t support taking list as an parameter to the execute statement and then on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', trans)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	amountMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd one more solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-5','','','2010-03-05 23:58:05','2010-03-05 18:28:05','',442,'http://www.intelligrape.com/blog/?p=447',0,'revision','',0),(448,7,'2010-03-06 00:02:23','2010-03-05 18:32:23','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" I was just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate doesn\'t support taking list as an parameter to the execute statement. So on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', trans)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	amountMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-6','','','2010-03-06 00:02:23','2010-03-05 18:32:23','',442,'http://www.intelligrape.com/blog/?p=448',0,'revision','',0),(449,7,'2010-03-06 00:02:48','2010-03-05 18:32:48','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" I was just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate doesn\'t support taking list as an parameter to the execute statement. So on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session -&gt;\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', trans)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	amountMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-7','','','2010-03-06 00:02:48','2010-03-05 18:32:48','',442,'http://www.intelligrape.com/blog/?p=449',0,'revision','',0),(450,7,'2010-03-06 09:47:01','2010-03-06 04:17:01','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" I was just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate doesn\'t support taking list as an parameter to the execute statement. So on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session ->\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', trans)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	amountMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-8','','','2010-03-06 09:47:01','2010-03-06 04:17:01','',442,'http://www.intelligrape.com/blog/?p=450',0,'revision','',0),(454,7,'2010-03-06 10:09:56','2010-03-06 04:39:56','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" We were just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate statement doesn\'t support list as a parameter. So <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a> on the mailing list I found the solution  \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session ->\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', transactions)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	myMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped! \r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-11','','','2010-03-06 10:09:56','2010-03-06 04:39:56','',442,'http://www.intelligrape.com/blog/?p=454',0,'revision','',0),(451,7,'2010-03-06 09:47:57','2010-03-06 04:17:57','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" We were just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate doesn\'t support taking list as an parameter to the execute statement. So on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session ->\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', transactions)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	myMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-9','','','2010-03-06 09:47:57','2010-03-06 04:17:57','',442,'http://www.intelligrape.com/blog/?p=451',0,'revision','',0),(452,7,'2010-03-06 10:09:16','2010-03-06 04:39:16','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" We were just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\n</pre>\n</div></blockquote>\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate statement doesn\'t support list as a parameter. So <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a> on the mailing list I found the solution  \n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session ->\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\n                            t.statusFor in (:selectedList)\"\"\")\n			     .setParameterList(\'selectedList\', transactions)\n			     .setParameter(\'today\', new Date()).executeUpdate()\n    }\n</pre>\n</div></blockquote>\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\"> Servicer.withTransaction {\n	myMap.each {servicerId, amount -&gt;\n	      def servicer = Servicer.read(servicerId)\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\n	      currBalance -= amount\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\n		 servicer.reserveAccount.id])\n    }\n }\n</pre>\n</div></blockquote>\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\n\nHope it helped!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-autosave','','','2010-03-06 10:09:16','2010-03-06 04:39:16','',442,'http://www.intelligrape.com/blog/?p=452',0,'revision','',0),(453,7,'2010-03-06 09:48:39','2010-03-06 04:18:39','Recently I encountered a  StaleObjectStateException which said \"Row was updated or deleted by another transaction.\" We were just updating multiple objects of the same domain inside a loop. So we used executeUpdate statement instead of myClass.save() method to update the records, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id: reserveAccount.id])\r\n</pre>\r\n</div></blockquote>\r\nLater we also needed to update multiple objects of the same domain with same values. But grails executeUpdate doesn\'t support taking list as an parameter to the execute statement. So on mailing list I found the solution  <a href=\"http://n4.nabble.com/There-no-way-to-pass-list-as-parameter-in-DomainClass-executeUpdate-td1391045.html#a1391045\" target=\"blank\">here</a>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">AccountTransactionStatus.withSession {session ->\r\n      session.createQuery(\"\"\"update AccountTransactionStatus t set t.thru=(:today) where\r\n                            t.statusFor in (:selectedList)\"\"\")\r\n			     .setParameterList(\'selectedList\', transactions)\r\n			     .setParameter(\'today\', new Date()).executeUpdate()\r\n    }\r\n</pre>\r\n</div></blockquote>\r\nNow the concern was to retain my service as transactional since with executeUpdate statement in there, it couldn\'t be transactional anymore.  So then we used withTransaction on the parent domain as a block to sorround the executeUpdate statement and along with other statements, which worked.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\"> Servicer.withTransaction {\r\n	myMap.each {servicerId, amount -&gt;\r\n	      def servicer = Servicer.read(servicerId)\r\n	      BigDecimal currBalance = servicer.reserveAccount.currentBalance\r\n	      currBalance -= amount\r\n	      ReserveAccount.executeUpdate(\"update ReserveAccount set currentBalance=(:balance) where id=(:id)\", [balance: currBalance, id:\r\n		 servicer.reserveAccount.id])\r\n    }\r\n }\r\n</pre>\r\n</div></blockquote>\r\nAnd other solution to handle StaleObjectStateException exception is given in a mailing list <a href=\"http://www.nabble.com/Interesting-Hibernate-Message-tf4437074.html#a12659153\" target=\"blank\">here</a>.\r\n\r\nHope it helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails: handling StaleObjectStateException and making executeUpdate transactional',0,'','inherit','open','open','','442-revision-10','','','2010-03-06 09:48:39','2010-03-06 04:18:39','',442,'http://www.intelligrape.com/blog/?p=453',0,'revision','',0),(455,19,'2010-03-12 22:58:20','2010-03-12 17:28:20','In my project we needed to generate pdf reports. The tool we used to design reports is IReport 2.0.5 &amp; the plugin used is grails jasper plugin.The plugin works fine with simple reports but fails when it come to complex report which uses subreport.The problem is that the plugin compiles .jrxml file to .jasper file upto 1 level.It do not compiles subreport﻿.\r\n\r\nWhen we compile.jrxml files using iReport, it takes the hardcoded path of the local machine &amp; hence throws an exception in other environment.\r\nSo to overcome this problem i used the following script by putting it in CompileReports.groovy file under scripts folder.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">  import org.codehaus.groovy.grails.commons.GrailsClassUtils as GCU\r\ngrailsHome = Ant.project.properties.\"environment.GRAILS_HOME\"\r\nincludeTargets &lt;&lt; new File(\"${grailsHome}/scripts/Init.groovy\")\r\ntarget(\'default\': \"Compile all Jasper Reports\") {\r\n    compileAll()\r\n}\r\ntarget(compileAll: \"Compile all *.jrxml files as *.jasper\") {\r\n    depends(classpath)\r\n    def sourceDir = (config.\'jasper.dir.reports\'?:\'reports\')\r\n    Ant.echo \"sourceDir = ${sourceDir}\"\r\n    Ant.taskdef(classpathref:\"grails.classpath\",name: \"jrc\", classname: \"net.sf.jasperreports.ant.JRAntCompileTask\")\r\n    mkdir(dir:\"~/.grails/.jasper\")\r\n    jrc(srcdir:\"${basedir}/web-app/${sourceDir}\", tempdir: \"~/.grails/.jasper\") {include(name:\"**/*.jrxml\")\r\n    }\r\n}</pre>\r\n</div></blockquote>\r\nTo compile reports use the command:\r\n\r\n<strong>grails compile-reports</strong>\r\n\r\nHelpful links:- <a href=\" http://n4.nabble.com/Jasper-Grails-Plugin-Best-place-to-store-Files-td1373864.html\">\r\n http://n4.nabble.com/Jasper-Grails-Plugin-Best-place-to-store-Files-td1373864.html</a>\r\n \r\n\r\nHope it helps.\r\n\r\nVishal Sahu\r\nvishal@intelligrape.com\r\nhttp://www.intelligrape.com','Compiling sub-reports in Jasper reports',0,'','publish','open','open','','compiling-sub-reports-in-jasper-reports','','','2010-03-13 15:03:04','2010-03-13 09:33:04','',0,'http://www.intelligrape.com/blog/?p=455',0,'post','',4),(456,19,'2010-03-12 22:44:48','2010-03-12 17:14:48','','Compiling sub-reports in Jasper reports',0,'','inherit','open','open','','455-revision','','','2010-03-12 22:44:48','2010-03-12 17:14:48','',455,'http://www.intelligrape.com/blog/?p=456',0,'revision','',0),(457,19,'2010-03-12 22:46:12','2010-03-12 17:16:12','In my project we needed to generate pdf reports. The tool we used to design reports is IReport 2.0.5 &amp; the plugin used is grails jasper plugin.The plugin works fine with simple reports but fails when it come to complex report which uses subreport.The problem is that the plugin compiles .jrxml file to .jasper file upto 1 level.It do not compiles subreport﻿.\n\nWhen we comp','Compiling sub-reports in Jasper reports',0,'','inherit','open','open','','455-revision-2','','','2010-03-12 22:46:12','2010-03-12 17:16:12','',455,'http://www.intelligrape.com/blog/?p=457',0,'revision','',0),(458,19,'2010-03-12 22:49:22','2010-03-12 17:19:22','In my project we needed to generate pdf reports. The tool we used to design reports is IReport 2.0.5 &amp; the plugin used is grails jasper plugin.The plugin works fine with simple reports but fails when it come to complex report which uses subreport.The problem is that the plugin compiles .jrxml file to .jasper file upto 1 level.It do not compiles subreport﻿.\r\n\r\nWhen we compile.jrxml files using iReport, it takes the hardcoded path of the local machine &amp; hence throws an exception in other environment.\r\n\r\nSo to overcome this problem i used the following script by putting it in CompileReports.groovy file under scripts folder','Compiling sub-reports in Jasper reports',0,'import org.codehaus.groovy.grails.commons.GrailsClassUtils as GCU\r\ngrailsHome = Ant.project.properties.\"environment.GRAILS_HOME\"\r\nincludeTargets << new File(\"${grailsHome}/scripts/Init.groovy\")\r\ntarget(\'default\': \"Compile all Jasper Reports\") {\r\n    compileAll()\r\n}\r\ntarget(compileAll: \"Compile all *.jrxml files as *.jasper\") {\r\n    depends(classpath)\r\n    def sourceDir = (config.\'jasper.dir.reports\'?:\'reports\')\r\n    Ant.echo \"sourceDir = ${sourceDir}\"\r\n    Ant.taskdef(classpathref:\"grails.classpath\",name: \"jrc\", classname: \"net.sf.jasperreports.ant.JRAntCompileTask\")\r\n    mkdir(dir:\"~/.grails/.jasper\")\r\n    jrc(srcdir:\"${basedir}/web-app/${sourceDir}\", tempdir: \"~/.grails/.jasper\") {include(name:\"**/*.jrxml\")\r\n    }\r\n}','inherit','open','open','','455-revision-3','','','2010-03-12 22:49:22','2010-03-12 17:19:22','',455,'http://www.intelligrape.com/blog/?p=458',0,'revision','',0),(459,19,'2010-03-12 22:57:14','2010-03-12 17:27:14','In my project we needed to generate pdf reports. The tool we used to design reports is IReport 2.0.5 &amp; the plugin used is grails jasper plugin.The plugin works fine with simple reports but fails when it come to complex report which uses subreport.The problem is that the plugin compiles .jrxml file to .jasper file upto 1 level.It do not compiles subreport﻿.\r\n\r\nWhen we compile.jrxml files using iReport, it takes the hardcoded path of the local machine &amp; hence throws an exception in other environment.\r\nSo to overcome this problem i used the following script by putting it in CompileReports.groovy file under scripts folder.\r\n\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n  import org.codehaus.groovy.grails.commons.GrailsClassUtils as GCU\r\ngrailsHome = Ant.project.properties.\"environment.GRAILS_HOME\"\r\nincludeTargets << new File(\"${grailsHome}/scripts/Init.groovy\")\r\ntarget(\'default\': \"Compile all Jasper Reports\") {\r\n    compileAll()\r\n}\r\ntarget(compileAll: \"Compile all *.jrxml files as *.jasper\") {\r\n    depends(classpath)\r\n    def sourceDir = (config.\'jasper.dir.reports\'?:\'reports\')\r\n    Ant.echo \"sourceDir = ${sourceDir}\"\r\n    Ant.taskdef(classpathref:\"grails.classpath\",name: \"jrc\", classname: \"net.sf.jasperreports.ant.JRAntCompileTask\")\r\n    mkdir(dir:\"~/.grails/.jasper\")\r\n    jrc(srcdir:\"${basedir}/web-app/${sourceDir}\", tempdir: \"~/.grails/.jasper\") {include(name:\"**/*.jrxml\")\r\n    }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n\r\n\r\nTo compile reports use the command:\r\n\r\ngrails compile-reports\r\n\r\n\r\n\r\nHope it helps.\r\n\r\nVishal Sahu\r\nvishal@intelligrape.com\r\nhttp://www.intelligrape.com','Compiling sub-reports in Jasper reports',0,'','inherit','open','open','','455-revision-4','','','2010-03-12 22:57:14','2010-03-12 17:27:14','',455,'http://www.intelligrape.com/blog/?p=459',0,'revision','',0),(460,19,'2010-03-13 15:01:46','2010-03-13 09:31:46','In my project we needed to generate pdf reports. The tool we used to design reports is IReport 2.0.5 &amp; the plugin used is grails jasper plugin.The plugin works fine with simple reports but fails when it come to complex report which uses subreport.The problem is that the plugin compiles .jrxml file to .jasper file upto 1 level.It do not compiles subreport﻿.\r\n\r\nWhen we compile.jrxml files using iReport, it takes the hardcoded path of the local machine &amp; hence throws an exception in other environment.\r\nSo to overcome this problem i used the following script by putting it in CompileReports.groovy file under scripts folder.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">  import org.codehaus.groovy.grails.commons.GrailsClassUtils as GCU\r\ngrailsHome = Ant.project.properties.\"environment.GRAILS_HOME\"\r\nincludeTargets &lt;&lt; new File(\"${grailsHome}/scripts/Init.groovy\")\r\ntarget(\'default\': \"Compile all Jasper Reports\") {\r\n    compileAll()\r\n}\r\ntarget(compileAll: \"Compile all *.jrxml files as *.jasper\") {\r\n    depends(classpath)\r\n    def sourceDir = (config.\'jasper.dir.reports\'?:\'reports\')\r\n    Ant.echo \"sourceDir = ${sourceDir}\"\r\n    Ant.taskdef(classpathref:\"grails.classpath\",name: \"jrc\", classname: \"net.sf.jasperreports.ant.JRAntCompileTask\")\r\n    mkdir(dir:\"~/.grails/.jasper\")\r\n    jrc(srcdir:\"${basedir}/web-app/${sourceDir}\", tempdir: \"~/.grails/.jasper\") {include(name:\"**/*.jrxml\")\r\n    }\r\n}</pre>\r\n</div></blockquote>\r\nTo compile reports use the command:\r\n\r\n<strong>grails compile-reports</strong>\r\n\r\nHelpful links:- <a href=\" http://n4.nabble.com/Jasper-Grails-Plugin-Best-place-to-store-Files-td1373864.html\">\r\n http://n4.nabble.com/Jasper-Grails-Plugin-Best-place-to-store-Files-td1373864.html</a>\r\n \r\n\r\nHope it helps.\r\n\r\nVishal Sahu\r\nvishal@intelligrape.com\r\nhttp://www.intelligrape.com','Compiling sub-reports in Jasper reports',0,'','inherit','open','open','','455-autosave','','','2010-03-13 15:01:46','2010-03-13 09:31:46','',455,'http://www.intelligrape.com/blog/?p=460',0,'revision','',0),(461,19,'2010-03-12 22:58:20','2010-03-12 17:28:20','In my project we needed to generate pdf reports. The tool we used to design reports is IReport 2.0.5 &amp; the plugin used is grails jasper plugin.The plugin works fine with simple reports but fails when it come to complex report which uses subreport.The problem is that the plugin compiles .jrxml file to .jasper file upto 1 level.It do not compiles subreport﻿.\r\n\r\nWhen we compile.jrxml files using iReport, it takes the hardcoded path of the local machine &amp; hence throws an exception in other environment.\r\nSo to overcome this problem i used the following script by putting it in CompileReports.groovy file under scripts folder.\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">  import org.codehaus.groovy.grails.commons.GrailsClassUtils as GCU\r\ngrailsHome = Ant.project.properties.\"environment.GRAILS_HOME\"\r\nincludeTargets &lt;&lt; new File(\"${grailsHome}/scripts/Init.groovy\")\r\ntarget(\'default\': \"Compile all Jasper Reports\") {\r\n    compileAll()\r\n}\r\ntarget(compileAll: \"Compile all *.jrxml files as *.jasper\") {\r\n    depends(classpath)\r\n    def sourceDir = (config.\'jasper.dir.reports\'?:\'reports\')\r\n    Ant.echo \"sourceDir = ${sourceDir}\"\r\n    Ant.taskdef(classpathref:\"grails.classpath\",name: \"jrc\", classname: \"net.sf.jasperreports.ant.JRAntCompileTask\")\r\n    mkdir(dir:\"~/.grails/.jasper\")\r\n    jrc(srcdir:\"${basedir}/web-app/${sourceDir}\", tempdir: \"~/.grails/.jasper\") {include(name:\"**/*.jrxml\")\r\n    }\r\n}</pre>\r\n</div></blockquote>\r\nTo compile reports use the command:\r\n\r\n<strong>grails compile-reports</strong>\r\n\r\nHope it helps.\r\n\r\nVishal Sahu\r\nvishal@intelligrape.com\r\nhttp://www.intelligrape.com','Compiling sub-reports in Jasper reports',0,'','inherit','open','open','','455-revision-5','','','2010-03-12 22:58:20','2010-03-12 17:28:20','',455,'http://www.intelligrape.com/blog/?p=461',0,'revision','',0),(462,6,'2010-03-16 19:24:21','0000-00-00 00:00:00',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n<strong>  org.hibernate.PropertyValueException not-null property references a null or transient value</strong> </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\n<strong>org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session or session was closed</strong></ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    class School {\r\n    static hasMany = [teachers: Teacher]\r\n  } </pre></div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">  \r\n<pre lang=\"groovy\">   \r\n if (!school.isAttached ()) {\r\n    school.attach()\r\n  }</div></blockquote>\r\n</pre>\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\n<strong>deleted object would be re-saved by cascade (remove deleted object from associations)</strong></ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n  class School {\r\n    static hasMany = [teachers, Teacher]\r\n  }\r\n class Teacher {\r\n    static belongsTo = [school: School]\r\n  }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','draft','open','open','','','','','2010-03-16 19:24:21','2010-03-16 13:54:21','',0,'http://www.intelligrape.com/blog/?p=462',0,'post','',0),(463,6,'2010-03-16 19:05:30','2010-03-16 13:35:30',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\n<ul>\n 1. org.hibernate.PropertyValueException not-null property references a null or transient value </ul>\n</ul>\n Explanation :\n<blockquote>\n<div class=\"code\">\n    Car car = new Car()\n    Engine engine = new Engine()\n    car.engine = engine\n    car.save()  \n</div></blockquote>\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\n<ul>\norg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session     or     session was closed</ul>\n\n  The default fetch mode in the domain classes is lazy e.g., \n<blockquote>\n<div class=\"code\">\n     class School{\n         static hasMany=[teachers:Teacher]\n      } </div></blockquote>\n  \n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\n\n\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\n <blockquote>\n<div class=\"code\">     \n if(!school.isAttached()) {\n         school.attach()\n         }</div></blockquote>\n\n \'if\' clause is used to make sure that school object is in a detached state.\n\n<ul>\ndeleted object would be re-saved by cascade (remove deleted object from associations</ul>\n\n\n\n Again, in the above example, \n<blockquote>\n<div class=\"code\">\nclass School{\nstatic hasMany=[teachers,Teacher]\n} \nclass Teacher{\nstatic  belongsTo=[school:School]\n}\n</div>\n</blockquote>\n\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision','','','2010-03-16 19:05:30','2010-03-16 13:35:30','',462,'http://www.intelligrape.com/blog/?p=463',0,'revision','',0),(464,6,'2010-03-16 19:05:48','2010-03-16 13:35:48',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n 1. org.hibernate.PropertyValueException not-null property references a null or transient value </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save()  \r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\norg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session     or     session was closed</ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n     class School{\r\n         static hasMany=[teachers:Teacher]\r\n      } </div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">     \r\n if(!school.isAttached()) {\r\n         school.attach()\r\n         }</div></blockquote>\r\n\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\ndeleted object would be re-saved by cascade (remove deleted object from associations</ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\nclass School{\r\nstatic hasMany=[teachers,Teacher]\r\n} \r\nclass Teacher{\r\nstatic  belongsTo=[school:School]\r\n}\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-2','','','2010-03-16 19:05:48','2010-03-16 13:35:48','',462,'http://www.intelligrape.com/blog/?p=464',0,'revision','',0),(465,6,'2010-03-16 19:08:41','2010-03-16 13:38:41',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n 1. org.hibernate.PropertyValueException not-null property references a null or transient value </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\norg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session     or     session was closed</ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n     class School{\r\n         static hasMany=[teachers:Teacher]\r\n      } </div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">     \r\n if(!school.isAttached()) {\r\n         school.attach()\r\n         }</div></blockquote>\r\n\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\ndeleted object would be re-saved by cascade (remove deleted object from associations</ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\nclass School{\r\nstatic hasMany=[teachers,Teacher]\r\n} \r\nclass Teacher{\r\nstatic  belongsTo=[school:School]\r\n}\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-3','','','2010-03-16 19:08:41','2010-03-16 13:38:41','',462,'http://www.intelligrape.com/blog/?p=465',0,'revision','',0),(466,6,'2010-03-16 19:09:57','2010-03-16 13:39:57',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n 1. org.hibernate.PropertyValueException not-null property references a null or transient value </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\norg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session     or     session was closed</ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n     class School{\r\n         static hasMany=[teachers:Teacher]\r\n      } </pre></div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">  \r\n<pre>   \r\n if(!school.isAttached()) {\r\n         school.attach()\r\n         }</div></blockquote>\r\n</pre>\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\ndeleted object would be re-saved by cascade (remove deleted object from associations</ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nclass School{\r\nstatic hasMany=[teachers,Teacher]\r\n} \r\nclass Teacher{\r\nstatic  belongsTo=[school:School]\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-4','','','2010-03-16 19:09:57','2010-03-16 13:39:57','',462,'http://www.intelligrape.com/blog/?p=466',0,'revision','',0),(467,6,'2010-03-16 19:10:42','2010-03-16 13:40:42',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n 1. org.hibernate.PropertyValueException not-null property references a null or transient value </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\norg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session     or     session was closed</ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n     class School{\r\n         static hasMany=[teachers:Teacher]\r\n      } </pre></div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">  \r\n<pre lang=\"groovy\">   \r\n if(!school.isAttached()) {\r\n         school.attach()\r\n         }</div></blockquote>\r\n</pre>\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\ndeleted object would be re-saved by cascade (remove deleted object from associations</ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nclass School{\r\nstatic hasMany=[teachers,Teacher]\r\n} \r\nclass Teacher{\r\nstatic  belongsTo=[school:School]\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-5','','','2010-03-16 19:10:42','2010-03-16 13:40:42','',462,'http://www.intelligrape.com/blog/?p=467',0,'revision','',0),(468,6,'2010-03-16 19:13:40','2010-03-16 13:43:40',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n 1. org.hibernate.PropertyValueException not-null property references a null or transient value </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\norg.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session     or     session was closed</ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    class School {\r\n    static hasMany = [teachers: Teacher]\r\n  } </pre></div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">  \r\n<pre lang=\"groovy\">   \r\n if (!school.isAttached ()) {\r\n    school.attach()\r\n  }</div></blockquote>\r\n</pre>\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\ndeleted object would be re-saved by cascade (remove deleted object from associations</ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n  class School {\r\n    static hasMany = [teachers, Teacher]\r\n  }\r\n class Teacher {\r\n    static belongsTo = [school: School]\r\n  }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-6','','','2010-03-16 19:13:40','2010-03-16 13:43:40','',462,'http://www.intelligrape.com/blog/?p=468',0,'revision','',0),(469,6,'2010-03-16 19:15:21','2010-03-16 13:45:21',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n<strong>  org.hibernate.PropertyValueException not-null property references a null or transient value</strong> </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\n<strong>org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session or session was closed</strong></ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    class School {\r\n    static hasMany = [teachers: Teacher]\r\n  } </pre></div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">  \r\n<pre lang=\"groovy\">   \r\n if (!school.isAttached ()) {\r\n    school.attach()\r\n  }</div></blockquote>\r\n</pre>\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\n<strong>deleted object would be re-saved by cascade (remove deleted object from associations</strong></ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n  class School {\r\n    static hasMany = [teachers, Teacher]\r\n  }\r\n class Teacher {\r\n    static belongsTo = [school: School]\r\n  }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-7','','','2010-03-16 19:15:21','2010-03-16 13:45:21','',462,'http://www.intelligrape.com/blog/?p=469',0,'revision','',0),(470,6,'2010-03-16 19:15:51','2010-03-16 13:45:51',' I am listing some of the common grails exceptions and their understanding from my  point of view. Hope you find it useful :\r\n<ul>\r\n<strong>  org.hibernate.PropertyValueException not-null property references a null or transient value</strong> </ul>\r\n</ul>\r\n Explanation :\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    Car car = new Car()\r\n    Engine engine = new Engine()\r\n    car.engine = engine\r\n    car.save() \r\n</pre>\r\n</div></blockquote>\r\n  The above procedure of saving \'car\' will throw this exception. Here \'engine\' is an object inside object \'car\'. So save \'engine\' before it is assigned to it \'car\'.\r\n<ul>\r\n<strong>org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: Grailer.teamMappings, no session or session was closed</strong></ul>\r\n\r\n  The default fetch mode in the domain classes is lazy e.g., \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n    class School {\r\n    static hasMany = [teachers: Teacher]\r\n  } </pre></div></blockquote>\r\n  \r\n If we fetch a School object, the teachers are not fetched at that time. They \'ll be fetched only when needed. Hibernate session takes care of that. Now the  school object can get detached from the  hibernate session. There can be many reasons for it,e.g., calling detatch() on school object, or clearing the hibernate session. But, the object may still be around.e.g., in HttpSession, though it\'s in detached state i.e., hibernate session is not managing it now. In this state of the object, if we try to access its \'teachers\', LazyInitializationException will be thrown.\r\n\r\n\r\nThe solution to the above case, will come from reattaching the detached object to the hibernate session.e.g.,\r\n <blockquote>\r\n<div class=\"code\">  \r\n<pre lang=\"groovy\">   \r\n if (!school.isAttached ()) {\r\n    school.attach()\r\n  }</div></blockquote>\r\n</pre>\r\n \'if\' clause is used to make sure that school object is in a detached state.\r\n\r\n<ul>\r\n<strong>deleted object would be re-saved by cascade (remove deleted object from associations)</strong></ul>\r\n\r\n\r\n\r\n Again, in the above example, \r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\n  class School {\r\n    static hasMany = [teachers, Teacher]\r\n  }\r\n class Teacher {\r\n    static belongsTo = [school: School]\r\n  }\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n If we delete a teacher object, we can get the above exception. Because, the object though deleted is still living in the collections, with the reference to a school object, leaving hibernate wondering if it needs to save the object again.\r\nThe solution to the above problem will be to remove the object from the collection (teachers) first and then delete the object.\r\n','Some Common Grails Exceptions',0,'','inherit','open','open','','462-revision-8','','','2010-03-16 19:15:51','2010-03-16 13:45:51','',462,'http://www.intelligrape.com/blog/?p=470',0,'revision','',0),(471,6,'2010-03-17 09:31:00','0000-00-00 00:00:00','','Tra',0,'','draft','open','open','','','','','2010-03-17 09:31:00','0000-00-00 00:00:00','',0,'http://www.intelligrape.com/blog/?p=471',0,'post','',0),(472,6,'2010-03-18 20:24:22','2010-03-18 14:54:22','If you want to keep track of the errors and exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }   \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the ajax request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&message=\" + x.statusText\r\n  }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','publish','open','open','','tracking-errorsexceptions-during-ajax-calls-in-a-view','','','2010-03-18 20:24:22','2010-03-18 14:54:22','',0,'http://www.intelligrape.com/blog/?p=472',0,'post','',1),(473,6,'2010-03-17 10:08:20','2010-03-17 04:38:20','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \n<pre lang=\"javascript\">\njQuery().ready(function(){\n	jQuery.ajaxSetup({\n		error:function(x,e){\n			if(x.status==0){\n			alert(\'You are offline!!\\n Please Check Your Network.\');\n			}else if(x.status==404){\n			alert(\'Requested URL not found.\');\n			}else if(x.status==500){\n			alert(\'Internel Server Error.\');\n			}else if(e==\'parsererror\'){\n			alert(\'Error.\\nParsing JSON Request failed.\');\n			}else if(e==\'timeout\'){\n			alert(\'Request Time out.\');\n			}\n           else if(x.status==\'401\'){\n			alert(\'My Own Exception\');\n			}\n            else {\n			    window.location=\"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\"+\"?                status=\"+x.status+\"&message=\"+x.statusText\n			}\n		}\n	});\n});\n</pre>\n\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\n<pre lang=\"groovy\">\nresponse.sendError(440,\"custom message\")\n</pre>\n\nHope you find it useful.\nImran Mir\nimran@intelligrape.com','Tracking Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision','','','2010-03-17 10:08:20','2010-03-17 04:38:20','',472,'http://www.intelligrape.com/blog/?p=473',0,'revision','',0),(474,6,'2010-03-17 10:08:33','2010-03-17 04:38:33','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function(){\r\n	jQuery.ajaxSetup({\r\n		error:function(x,e){\r\n			if(x.status==0){\r\n			alert(\'You are offline!!\\n Please Check Your Network.\');\r\n			}else if(x.status==404){\r\n			alert(\'Requested URL not found.\');\r\n			}else if(x.status==500){\r\n			alert(\'Internel Server Error.\');\r\n			}else if(e==\'parsererror\'){\r\n			alert(\'Error.\\nParsing JSON Request failed.\');\r\n			}else if(e==\'timeout\'){\r\n			alert(\'Request Time out.\');\r\n			}\r\n           else if(x.status==\'401\'){\r\n			alert(\'My Own Exception\');\r\n			}\r\n            else {\r\n			    window.location=\"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\"+\"?                status=\"+x.status+\"&message=\"+x.statusText\r\n			}\r\n		}\r\n	});\r\n});\r\n</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-2','','','2010-03-17 10:08:33','2010-03-17 04:38:33','',472,'http://www.intelligrape.com/blog/?p=474',0,'revision','',0),(475,6,'2010-03-17 10:21:48','2010-03-17 04:51:48','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function(){\r\n	jQuery.ajaxSetup({\r\n		error:function(x,e){\r\n			if(x.status==0){\r\n			alert(\'You are offline!!\\n Please Check Your Network.\');\r\n			}else if(x.status==404){\r\n			alert(\'Requested URL not found.\');\r\n			}else if(x.status==500){\r\n			alert(\'Internel Server Error.\');\r\n			}else if(e==\'parsererror\'){\r\n			alert(\'Error.\\nParsing JSON Request failed.\');\r\n			}else if(e==\'timeout\'){\r\n			alert(\'Request Time out.\');\r\n			}\r\n           else if(x.status==\'401\'){\r\n			alert(\'My Own Exception\');\r\n			}\r\n            else {\r\n			    window.location=\"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\"+\"?                status=\"+x.status+\"&message=\"+x.statusText\r\n			}\r\n		}\r\n	});\r\n});\r\n</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-3','','','2010-03-17 10:21:48','2010-03-17 04:51:48','',472,'http://www.intelligrape.com/blog/?p=475',0,'revision','',0),(476,6,'2010-03-17 10:24:17','2010-03-17 04:54:17','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }\r\n        else {\r\n          window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"?                status=\" + x.status + \"&message=\" + x.statusText\r\n        }\r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-4','','','2010-03-17 10:24:17','2010-03-17 04:54:17','',472,'http://www.intelligrape.com/blog/?p=476',0,'revision','',0),(477,10,'2010-03-18 12:04:52','2010-03-18 06:34:52','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed. The JMS Plugin version used was 0.5\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>&lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n&lt;deadLetterStrategy&gt;\r\n&lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n&lt;/deadLetterStrategy&gt;\r\n&lt;/policyEntry&gt;</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','publish','open','open','','grails-jms-plugin-and-redelivery-policy','','','2010-03-18 12:48:37','2010-03-18 07:18:37','',0,'http://www.intelligrape.com/blog/?p=477',0,'post','',0),(478,10,'2010-03-18 11:56:04','2010-03-18 06:26:04','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\n\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\n<blockquote>\n<pre lang=\"groovy\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\n    &lt;deadLetterStrategy&gt;\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\n    &lt;/deadLetterStrategy&gt;\n &lt;/policyEntry&gt;\n</pre>\n</blockquote>\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\n<blockquote>\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\n        maximumRedeliveries = 3\n        initialRedeliveryDelay = 500L\n        backOffMultiplier = 2\n        useExponentialBackOff = true\n    }\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\n        brokerURL = \'tcp://localhost:61616\'\n        redeliveryPolicy = jmsRedeliveryPolicy\n    }\n</pre>\n</blockquote>\n\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\n\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\n\n<blockquote>\n<pre lang=\"groovy\">\njms {\n    containers {\n        standard {\n            sessionTransacted = true\n        }\n    }\n}\n</pre>\n</blockquote>','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision','','','2010-03-18 11:56:04','2010-03-18 06:26:04','',477,'http://www.intelligrape.com/blog/?p=478',0,'revision','',0),(479,10,'2010-03-18 11:57:02','2010-03-18 06:27:02','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"groovy\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-2','','','2010-03-18 11:57:02','2010-03-18 06:27:02','',477,'http://www.intelligrape.com/blog/?p=479',0,'revision','',0),(480,10,'2010-03-18 11:57:08','2010-03-18 06:27:08','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"groovy\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-3','','','2010-03-18 11:57:08','2010-03-18 06:27:08','',477,'http://www.intelligrape.com/blog/?p=480',0,'revision','',0),(481,10,'2010-03-18 12:00:22','2010-03-18 06:30:22','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"groovy\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-4','','','2010-03-18 12:00:22','2010-03-18 06:30:22','',477,'http://www.intelligrape.com/blog/?p=481',0,'revision','',0),(482,10,'2010-03-18 12:00:28','2010-03-18 06:30:28','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"groovy\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-5','','','2010-03-18 12:00:28','2010-03-18 06:30:28','',477,'http://www.intelligrape.com/blog/?p=482',0,'revision','',0),(483,10,'2010-03-18 12:00:53','2010-03-18 06:30:53','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"groovy\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-6','','','2010-03-18 12:00:53','2010-03-18 06:30:53','',477,'http://www.intelligrape.com/blog/?p=483',0,'revision','',0),(484,10,'2010-03-18 12:01:20','2010-03-18 06:31:20','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"html\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-7','','','2010-03-18 12:01:20','2010-03-18 06:31:20','',477,'http://www.intelligrape.com/blog/?p=484',0,'revision','',0),(485,10,'2010-03-18 12:01:26','2010-03-18 06:31:26','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n<pre lang=\"html\"> &lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</pre>\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-8','','','2010-03-18 12:01:26','2010-03-18 06:31:26','',477,'http://www.intelligrape.com/blog/?p=485',0,'revision','',0),(486,10,'2010-03-18 12:03:37','2010-03-18 06:33:37','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n&lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-9','','','2010-03-18 12:03:37','2010-03-18 06:33:37','',477,'http://www.intelligrape.com/blog/?p=486',0,'revision','',0),(487,10,'2010-03-18 12:03:49','2010-03-18 06:33:49','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>\r\n&lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n    &lt;deadLetterStrategy&gt;\r\n      &lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n    &lt;/deadLetterStrategy&gt;\r\n &lt;/policyEntry&gt;\r\n</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-10','','','2010-03-18 12:03:49','2010-03-18 06:33:49','',477,'http://www.intelligrape.com/blog/?p=487',0,'revision','',0),(488,10,'2010-03-18 12:04:52','2010-03-18 06:34:52','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed.\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>&lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n&lt;deadLetterStrategy&gt;\r\n&lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n&lt;/deadLetterStrategy&gt;\r\n&lt;/policyEntry&gt;</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-11','','','2010-03-18 12:04:52','2010-03-18 06:34:52','',477,'http://www.intelligrape.com/blog/?p=488',0,'revision','',0),(489,10,'2010-03-18 12:05:19','2010-03-18 06:35:19','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed. The JMS Plugin version used was 0.5\r\n\r\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\r\n<blockquote>&lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\r\n&lt;deadLetterStrategy&gt;\r\n&lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\r\n&lt;/deadLetterStrategy&gt;\r\n&lt;/policyEntry&gt;</blockquote>\r\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\r\n<blockquote>\r\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\r\n        maximumRedeliveries = 3\r\n        initialRedeliveryDelay = 500L\r\n        backOffMultiplier = 2\r\n        useExponentialBackOff = true\r\n    }\r\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\r\n        brokerURL = \'tcp://localhost:61616\'\r\n        redeliveryPolicy = jmsRedeliveryPolicy\r\n    }\r\n</pre>\r\n</blockquote>\r\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\r\n\r\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\r\n<blockquote>\r\n<pre lang=\"groovy\">jms {\r\n    containers {\r\n        standard {\r\n            sessionTransacted = true\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</blockquote>\r\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\r\n\r\nHope it helps\r\n\r\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-revision-12','','','2010-03-18 12:05:19','2010-03-18 06:35:19','',477,'http://www.intelligrape.com/blog/?p=489',0,'revision','',0),(490,6,'2010-03-18 20:10:58','2010-03-18 14:40:58','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \n<pre lang=\"javascript\">\njQuery().ready(function() {\n  jQuery.ajaxSetup({\n    error: function(x, e) {\n      if (x.status == 0) {\n        alert(\'You are offline!!\\n Please Check Your Network.\');\n      } else if (x.status == 404) {\n        alert(\'Requested URL not found.\');\n      } else if (x.status == 500) {\n        alert(\'Internel Server Error.\');\n      } else if (e == \'parsererror\') {\n        alert(\'Error.\\nParsing JSON Request failed.\');\n      } else if (e == \'timeout\') {\n        alert(\'Request Time out.\');\n      }\n      else if (x.status == \'401\') {\n          alert(\'My Own Exception\');\n        }\n        \n    }\n  });\n});</pre>\n\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\n<pre lang=\"groovy\">\nresponse.sendError(440,\"custom message\")\n</pre>\n\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the request originated. So I added the following statement in the else part :\n\nHope you find it useful.\nImran Mir\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-5','','','2010-03-18 20:10:58','2010-03-18 14:40:58','',472,'http://www.intelligrape.com/blog/?p=490',0,'revision','',0),(491,6,'2010-03-18 20:11:57','2010-03-18 14:41:57','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \n<pre lang=\"javascript\">\njQuery().ready(function() {\n  jQuery.ajaxSetup({\n    error: function(x, e) {\n      if (x.status == 0) {\n        alert(\'You are offline!!\\n Please Check Your Network.\');\n      } else if (x.status == 404) {\n        alert(\'Requested URL not found.\');\n      } else if (x.status == 500) {\n        alert(\'Internel Server Error.\');\n      } else if (e == \'parsererror\') {\n        alert(\'Error.\\nParsing JSON Request failed.\');\n      } else if (e == \'timeout\') {\n        alert(\'Request Time out.\');\n      }\n      else if (x.status == \'401\') {\n          alert(\'My Own Exception\');\n        }\n        \n    }\n  });\n});</pre>\n\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\n<pre lang=\"groovy\">\nresponse.sendError(440,\"custom message\")\n</pre>\n\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the request originated. So I added the following statement in the else part :\n<pre lang=\"groovy\">\nelse {\n          window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"?                status=\" + x.status + \"&message=\" + x.statusText\n        }\n</pre>\n\nHope you find it useful.\nImran Mir\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-6','','','2010-03-18 20:11:57','2010-03-18 14:41:57','',472,'http://www.intelligrape.com/blog/?p=491',0,'revision','',0),(492,6,'2010-03-18 20:16:02','2010-03-18 14:46:02','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }\r\n        \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n          window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"?      status=\" + x.status + \"&message=\" + x.statusText\r\n        }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-7','','','2010-03-18 20:16:02','2010-03-18 14:46:02','',472,'http://www.intelligrape.com/blog/?p=492',0,'revision','',0),(493,6,'2010-03-18 20:17:00','2010-03-18 14:47:00','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }\r\n        \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&message=\" + x.statusText\r\n        }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-8','','','2010-03-18 20:17:00','2010-03-18 14:47:00','',472,'http://www.intelligrape.com/blog/?p=493',0,'revision','',0),(494,6,'2010-03-18 20:17:55','2010-03-18 14:47:55','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }\r\n        \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&message=\" + x.statusText\r\n     }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-9','','','2010-03-18 20:17:55','2010-03-18 14:47:55','',472,'http://www.intelligrape.com/blog/?p=494',0,'revision','',0),(495,6,'2010-03-18 20:18:42','2010-03-18 14:48:42','If you want to keep track of the exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }\r\n        \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&message=\" + x.statusText\r\n  }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-10','','','2010-03-18 20:18:42','2010-03-18 14:48:42','',472,'http://www.intelligrape.com/blog/?p=495',0,'revision','',0),(496,6,'2010-03-18 20:20:42','2010-03-18 14:50:42','If you want to keep track of the errors and exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }\r\n        \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the ajax request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&message=\" + x.statusText\r\n  }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-11','','','2010-03-18 20:20:42','2010-03-18 14:50:42','',472,'http://www.intelligrape.com/blog/?p=496',0,'revision','',0),(497,6,'2010-03-18 20:21:32','2010-03-18 14:51:32','If you want to keep track of the errors and exceptions on the view, after  making an ajax call, then this might be something of your interest : \r\n<pre lang=\"javascript\">\r\njQuery().ready(function() {\r\n  jQuery.ajaxSetup({\r\n    error: function(x, e) {\r\n      if (x.status == 0) {\r\n        alert(\'You are offline!!\\n Please Check Your Network.\');\r\n      } else if (x.status == 404) {\r\n        alert(\'Requested URL not found.\');\r\n      } else if (x.status == 500) {\r\n        alert(\'Internel Server Error.\');\r\n      } else if (e == \'parsererror\') {\r\n        alert(\'Error.\\nParsing JSON Request failed.\');\r\n      } else if (e == \'timeout\') {\r\n        alert(\'Request Time out.\');\r\n      }\r\n      else if (x.status == \'401\') {\r\n          alert(\'My Own Exception\');\r\n        }   \r\n    }\r\n  });\r\n});</pre>\r\n\r\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\r\n<pre lang=\"groovy\">\r\nresponse.sendError(440,\"custom message\")\r\n</pre>\r\n\r\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the ajax request originated. So I added the following statement in the else part :\r\n<pre lang=\"groovy\">\r\nelse {\r\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&message=\" + x.statusText\r\n  }\r\n</pre>\r\n\r\nHope you find it useful.\r\nImran Mir\r\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-revision-12','','','2010-03-18 20:21:32','2010-03-18 14:51:32','',472,'http://www.intelligrape.com/blog/?p=497',0,'revision','',0),(498,15,'2010-03-23 14:29:26','2010-03-23 08:59:26','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it <a href=\"http://www.grails.org/ImageTools+plugin\" target=\"_blank\"> here </a>.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">\r\nimport org.grails.plugins.imagetools.ImageTool  // Import the ImageTool class in your taglib.\r\n\r\ndef thumbnail = { attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through Grails ImageTools plugin',0,'','publish','open','open','','creating-image-thumbnails-through-imagetools-plugin','','','2010-03-23 14:49:53','2010-03-23 09:19:53','',0,'http://www.intelligrape.com/blog/?p=498',0,'post','',0),(499,15,'2010-03-23 14:15:35','2010-03-23 08:45:35','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\n\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\n\ndef thumbnail = {attrs -&gt;\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\ndef imageTool = new ImageTool()\nimageTool.load(imgSrc)\nimageTool.square()\nimageTool.thumbnail(dimension)\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\nout &lt;&lt; thumbnailLocation\n}\n\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\n\ndef thumbnail = {attrs -&gt;\ndef imgSrc = attrs[\'imgSrc\']\ndef dimension = attrs[\'dimension\'].toInteger()\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\ndef file\n\n// if thumbnail already exists, return the path to the image\nif((file =  new File(thumbLocation)).exists()){\nout &lt;&lt; thumbLocation\n}\nelse\n{\n// the code to generate the thumbnail comes here.\n}\n}','Creating thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision','','','2010-03-23 14:15:35','2010-03-23 08:45:35','',498,'http://www.intelligrape.com/blog/?p=499',0,'revision','',0),(500,15,'2010-03-23 14:16:35','2010-03-23 08:46:35','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\n\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\n\ndef thumbnail = {attrs -&gt;\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\ndef imageTool = new ImageTool()\nimageTool.load(imgSrc)\nimageTool.square()\nimageTool.thumbnail(dimension)\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\nout &lt;&lt; thumbnailLocation\n}\n\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\n\ndef thumbnail = {attrs -&gt;\ndef imgSrc = attrs[\'imgSrc\']\ndef dimension = attrs[\'dimension\'].toInteger()\ndef thumbnailLocation = \"/path/to/store/thumbnails\"  + imgSrc\ndef file\n\n// if thumbnail already exists, return the path to the image\nif((file =  new File(thumbnailLocation)).exists()){\nout &lt;&lt; thumbnailLocation\n}\nelse\n{\n// the code to generate the thumbnail comes here.\n}\n}','Creating thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-2','','','2010-03-23 14:16:35','2010-03-23 08:46:35','',498,'http://www.intelligrape.com/blog/?p=500',0,'revision','',0),(504,15,'2010-03-23 14:26:11','2010-03-23 08:56:11','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout &lt;&lt; thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout &lt;&lt; thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-6','','','2010-03-23 14:26:11','2010-03-23 08:56:11','',498,'http://www.intelligrape.com/blog/?p=504',0,'revision','',0),(502,15,'2010-03-23 14:24:06','2010-03-23 08:54:06','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\n\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\n\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\n\r\ndef imageTool = new ImageTool()\r\n\r\nimageTool.load(imgSrc)\r\n\r\nimageTool.square()\r\n\r\nimageTool.thumbnail(dimension)\r\n\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\n\r\nout &lt;&lt; thumbnailLocation\r\n\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\n\r\ndef imgSrc = attrs[\'imgSrc\']\r\n\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\n\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\n\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\n\r\nif((file =  new File(thumbLocation)).exists()){\r\n\r\nout &lt;&lt; thumbLocation\r\n\r\n}\r\n\r\nelse\r\n\r\n{\r\n\r\n// the code to generate the thumbnail comes here.\r\n\r\n}\r\n\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-4','','','2010-03-23 14:24:06','2010-03-23 08:54:06','',498,'http://www.intelligrape.com/blog/?p=502',0,'revision','',0),(501,15,'2010-03-23 14:22:11','2010-03-23 08:52:11','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n\r\n&lt;blockquote&gt;\r\n&lt;div&gt;\r\n&lt;pre lang=\"groovy\"&gt;\r\ndef thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout &lt;&lt; thumbnailLocation\r\n}\r\n&lt;/pre&gt;\r\n&lt;/div&gt;\r\n&lt;/blockquote&gt;\r\n\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n\r\n&lt;blockquote&gt;\r\n&lt;div&gt;\r\n&lt;pre lang=\"groovy\"&gt;\r\ndef thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout &lt;&lt; thumbLocation\r\n}\r\nelse\r\n{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n&lt;/pre&gt;\r\n&lt;/div&gt;\r\n&lt;/blockquote&gt;\r\n\r\n\r\n\r\n\r\n\r\n\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-3','','','2010-03-23 14:22:11','2010-03-23 08:52:11','',498,'http://www.intelligrape.com/blog/?p=501',0,'revision','',0),(503,15,'2010-03-23 14:24:51','2010-03-23 08:54:51','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\n\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\n\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\n\r\ndef imageTool = new ImageTool()\r\n\r\nimageTool.load(imgSrc)\r\n\r\nimageTool.square()\r\n\r\nimageTool.thumbnail(dimension)\r\n\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\n\r\nout &lt;&lt; thumbnailLocation\r\n\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\n\r\ndef imgSrc = attrs[\'imgSrc\']\r\n\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\n\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\n\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\n\r\nif((file =  new File(thumbLocation)).exists()){\r\n\r\nout &lt;&lt; thumbLocation\r\n\r\n}\r\n\r\nelse\r\n\r\n{\r\n\r\n// the code to generate the thumbnail comes here.\r\n\r\n}\r\n\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-5','','','2010-03-23 14:24:51','2010-03-23 08:54:51','',498,'http://www.intelligrape.com/blog/?p=503',0,'revision','',0),(505,15,'2010-03-23 14:27:20','2010-03-23 08:57:20','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout &lt;&lt; thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout &lt;&lt; thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-7','','','2010-03-23 14:27:20','2010-03-23 08:57:20','',498,'http://www.intelligrape.com/blog/?p=505',0,'revision','',0),(506,15,'2010-03-23 14:28:47','2010-03-23 08:58:47','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-8','','','2010-03-23 14:28:47','2010-03-23 08:58:47','',498,'http://www.intelligrape.com/blog/?p=506',0,'revision','',0),(507,15,'2010-03-23 14:29:04','2010-03-23 08:59:04','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-9','','','2010-03-23 14:29:04','2010-03-23 08:59:04','',498,'http://www.intelligrape.com/blog/?p=507',0,'revision','',0),(508,15,'2010-03-23 14:29:26','2010-03-23 08:59:26','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through ImageTools plugin',0,'','inherit','open','open','','498-revision-10','','','2010-03-23 14:29:26','2010-03-23 08:59:26','',498,'http://www.intelligrape.com/blog/?p=508',0,'revision','',0),(509,15,'2010-03-23 14:49:45','2010-03-23 09:19:45','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it <a href=\"http://www.grails.org/ImageTools+plugin\" target=\"_blank\"> here </a>.\n\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\n<blockquote>\n<div>\n<pre lang=\"groovy\">\nimport org.grails.plugins.imagetools.ImageTool // Don\'t forget to import the ImageTool class in your taglib.\n\ndef thumbnail = { attrs ->;\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\ndef imageTool = new ImageTool()\nimageTool.load(imgSrc)\nimageTool.square()\nimageTool.thumbnail(dimension)\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\nout << thumbnailLocation\n}\n</pre>\n</div></blockquote>\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\n<blockquote>\n<div>\n<pre lang=\"groovy\">def thumbnail = {attrs ->;\ndef imgSrc = attrs[\'imgSrc\']\ndef dimension = attrs[\'dimension\'].toInteger()\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\ndef file\n\n// if thumbnail already exists, return the path to the image\nif((file =  new File(thumbLocation)).exists()){\nout << thumbLocation\n}\nelse{\n// the code to generate the thumbnail comes here.\n}\n}\n</pre>\n</div></blockquote>\nHope this helps.\n\n-- Abhishek\n\nIntelligrape Software','Creating image thumbnails through Grails ImageTools plugin',0,'','inherit','open','open','','498-autosave','','','2010-03-23 14:49:45','2010-03-23 09:19:45','',498,'http://www.intelligrape.com/blog/?p=509',0,'revision','',0),(510,15,'2010-03-23 14:30:10','2010-03-23 09:00:10','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it here.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs -&gt;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through Grails ImageTools plugin',0,'','inherit','open','open','','498-revision-11','','','2010-03-23 14:30:10','2010-03-23 09:00:10','',498,'http://www.intelligrape.com/blog/?p=510',0,'revision','',0),(511,15,'2010-03-23 14:32:38','2010-03-23 09:02:38','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it <a href=\"http://www.grails.org/ImageTools+plugin\" target=\"_blank\"> here </a>.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through Grails ImageTools plugin',0,'','inherit','open','open','','498-revision-12','','','2010-03-23 14:32:38','2010-03-23 09:02:38','',498,'http://www.intelligrape.com/blog/?p=511',0,'revision','',0),(512,15,'2010-03-23 14:45:03','2010-03-23 09:15:03','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it <a href=\"http://www.grails.org/ImageTools+plugin\" target=\"_blank\"> here </a>.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = { attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through Grails ImageTools plugin',0,'','inherit','open','open','','498-revision-13','','','2010-03-23 14:45:03','2010-03-23 09:15:03','',498,'http://www.intelligrape.com/blog/?p=512',0,'revision','',0),(513,15,'2010-03-23 14:48:30','2010-03-23 09:18:30','In one of the projects recently, we had to generate the thumbnails dynamically from the client-provided images. We decided to use the Grails plugin named: ImageTools. This is a very basic plugin but provided very quick and stable solution to our use-case. You can read more about the plugin and how to install it <a href=\"http://www.grails.org/ImageTools+plugin\" target=\"_blank\"> here </a>.\r\n\r\nWe decided to implement the solution in the form of a tag which gave us the ease to use it directly in a .gsp file. Here is how the code looked like in a taglib:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">\r\nimport org.grails.plugins.imagetools.ImageTool \r\n\r\ndef thumbnail = { attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']  // as the name suggests - the image source\r\ndef dimension = attrs[\'dimension\'].toInteger()  //size of the image - giving 200 as a dimension gives you the thumbnail of around 200*200 in size.\r\ndef imageTool = new ImageTool()\r\nimageTool.load(imgSrc)\r\nimageTool.square()\r\nimageTool.thumbnail(dimension)\r\nimageTool.writeResult(thumbnailLocation,\"JPEG\")  //thumbnailLocation - provides the path to where you want to store the thumbnail image.\r\nout << thumbnailLocation\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThis is all you need to create the thumbnail programatically through ImageTools plugin. The code above always creates the new thumbnail; we tried to improvise the above solution by saving the thumbnail in a folder and checking for the existence of the thumbnail before actually creating the thumbnail. This is how we achieved it:\r\n<blockquote>\r\n<div>\r\n<pre lang=\"groovy\">def thumbnail = {attrs ->;\r\ndef imgSrc = attrs[\'imgSrc\']\r\ndef dimension = attrs[\'dimension\'].toInteger()\r\ndef thumbLocation = \"/path/to/store/thumbnails\"  + imgSrc\r\ndef file\r\n\r\n// if thumbnail already exists, return the path to the image\r\nif((file =  new File(thumbLocation)).exists()){\r\nout << thumbLocation\r\n}\r\nelse{\r\n// the code to generate the thumbnail comes here.\r\n}\r\n}\r\n</pre>\r\n</div></blockquote>\r\nHope this helps.\r\n\r\n-- Abhishek\r\n\r\nIntelligrape Software','Creating image thumbnails through Grails ImageTools plugin',0,'','inherit','open','open','','498-revision-14','','','2010-03-23 14:48:30','2010-03-23 09:18:30','',498,'http://www.intelligrape.com/blog/?p=513',0,'revision','',0),(514,7,'2010-03-26 11:12:12','2010-03-26 05:42:12','Hi! We had a myForm.html file (accessible only from the third party) where in we needed to update the form containing input/select/check boxes with the values we had in the request params and then render it. So we used xmlslurper for the same. Without much effort, it just worked great. Following is the code we wrote:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">import org.ccil.cowan.tagsoup.*\r\nimport groovy.xml.*\r\nimport groovy.util.XmlSlurper\r\nimport javax.xml.parsers.SAXParser\r\n\r\npublic String parseAndUpdateHtml(Map params, String htmlContent) {\r\n    htmlContent = htmlContent.replaceAll(\'selected=\"selected\"\', \"\")  //to remove already selected values in select box\r\n    htmlContent = htmlContent.replaceAll(\'checked=\"checked\"\', \"\")  //to remove already selected values in check box\r\n\r\n    @Grab(group = \'org.ccil.cowan.tagsoup\', module = \'tagsoup\', version = \'1.2\')\r\n// Define our TagSoup backed parser\r\n    def slurper = new XmlSlurper()\r\n// Parse our html\r\n    def html = slurper.parseText(htmlContent)\r\n\r\n    params.each {id, value ->\r\n      def htmlBody = html.body.\"**\"\r\n      def input = htmlBody.find { it.@id == id }   //name and id for all text boxes and select boxes were kept same\r\n      if (input) {\r\n        if (id.startsWith(\"txt\")) {   // text box names had a prefix \'txt\'\r\n          input.@value = value\r\n        } else if (id.startsWith(\"cmb\")) {     // select box names had a prefix \'cmb\'\r\n          def option = input.option.list().find {it == value}\r\n          if (option)\r\n            option.@selected = \"selected\"\r\n        }\r\n      }\r\n    }\r\n\r\n    params.each {name, value ->\r\n      if (name.startsWith(\"cb\") && value) {     // check box names had a prefix \'cb\'\r\n          def chkBoxvalues = [value].flatten()\r\n          chkBoxvalues.each {chkBoxValue ->\r\n          def htmlBody = html.body.\"**\"\r\n          def input = htmlBody.find { it.@type == \"checkbox\" && it.@name == name && it.@value == chkBoxValue }\r\n          if (input) {\r\n            input.@checked = \"checked\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n// Write it out (into a StringWriter for now)\r\n    def w = new StringWriter()\r\n    w << new StreamingMarkupBuilder().bind {\r\n      // Required to avoid the html: namespace on every node\r\n      mkp.declareNamespace \'\': \'http://www.w3.org/1999/xhtml\'\r\n      mkp.yield html\r\n    }\r\n// XmlUtil.serialize neatens up our resultant xml -- but adds an xml declaration :-(\r\n    return new XmlUtil().serialize(w.toString())\r\n  }\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThanks to  <a href=\"http://stackoverflow.com/questions/2510536/html-parsing-fetch-and-update-data-from-the-html-file\">tim_yates</a> and others who helped me with this.\r\n\r\nHope this helped!\r\n\r\nRegards,\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Software','XmlSlurper made it simple',0,'','publish','open','open','','xmlslurper-made-it-simple','','','2010-03-26 11:12:12','2010-03-26 05:42:12','',0,'http://www.intelligrape.com/blog/?p=514',0,'post','',0),(515,7,'2010-03-26 11:02:32','2010-03-26 05:32:32','Hi! We had a myForm.html file (accessible only from the third party) where in we needed to update the form containing input/select/check boxes with the values we had in the request params and render it. So we used xmlslurper for the same. Without much effort, it just worked great. Following is the code we wrote:\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">import org.ccil.cowan.tagsoup.*\nimport groovy.xml.*\nimport groovy.util.XmlSlurper\nimport javax.xml.parsers.SAXParser\n\npublic String parseAndUpdateHtml(Map params, String htmlContent) {\n    htmlContent = htmlContent.replaceAll(\'selected=\"selected\"\', \"\")  //to remove already selected values in select box\n    htmlContent = htmlContent.replaceAll(\'checked=\"checked\"\', \"\")  //to remove already selected values in check box\n\n    @Grab(group = \'org.ccil.cowan.tagsoup\', module = \'tagsoup\', version = \'1.2\')\n// Define our TagSoup backed parser\n    def slurper = new XmlSlurper()\n// Parse our html\n    def html = slurper.parseText(htmlContent)\n\n    params.each {id, value -&gt;\n      def htmlBody = html.body.\"**\"\n      def input = htmlBody.find { it.@id == id }   //name and id for all text boxes and select boxes were kept same\n      if (input) {\n        if (id.startsWith(\"txt\")) {   // text box names had a prefix \'txt\'\n          input.@value = value\n        } else if (id.startsWith(\"cmb\")) {     // select box names had a prefix \'cmb\'\n          def option = input.option.list().find {it == value}\n          if (option)\n            option.@selected = \"selected\"\n        }\n      }\n    }\n\n    params.each {name, value -&gt;\n      if (name.startsWith(\"cb\") &amp;&amp; value) {     // check box names had a prefix \'cb\'\n          def chkBoxvalues = [value].flatten()\n          chkBoxvalues.each {chkBoxValue -&gt;\n          def htmlBody = html.body.\"**\"\n          def input = htmlBody.find { it.@type == \"checkbox\" &amp;&amp; it.@name == name &amp;&amp; it.@value == chkBoxValue }\n          if (input) {\n            input.@checked = \"checked\"\n          }\n        }\n      }\n    }\n\n// Write it out (into a StringWriter for now)\n    def w = new StringWriter()\n    w &lt;&lt; new StreamingMarkupBuilder().bind {\n      // Required to avoid the html: namespace on every node\n      mkp.declareNamespace \'\': \'http://www.w3.org/1999/xhtml\'\n      mkp.yield html\n    }\n// XmlUtil.serialize neatens up our resultant xml -- but adds an xml declaration :-(\n    return new XmlUtil().serialize(w.toString())\n  }\n}\n</pre>\n</div></blockquote>\nThanks to  <a href=\"http://stackoverflow.com/questions/2510536/html-parsing-fetch-and-update-data-from-the-html-file\">t</a>\n\nand others who helped me with this.\n\nHope this helped!\n\nRegards,\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Software','XmlSlurper made it simple',0,'','inherit','open','open','','514-revision','','','2010-03-26 11:02:32','2010-03-26 05:32:32','',514,'http://www.intelligrape.com/blog/?p=515',0,'revision','',0),(516,7,'2010-03-26 11:03:32','2010-03-26 05:33:32','Hi! We had a myForm.html file (accessible only from the third party) where in we needed to update the form containing input/select/check boxes with the values we had in the request params and render it. So we used xmlslurper for the same. Without much effort, it just worked great. Following is the code we wrote:\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">import org.ccil.cowan.tagsoup.*\nimport groovy.xml.*\nimport groovy.util.XmlSlurper\nimport javax.xml.parsers.SAXParser\n\npublic String parseAndUpdateHtml(Map params, String htmlContent) {\n    htmlContent = htmlContent.replaceAll(\'selected=\"selected\"\', \"\")  //to remove already selected values in select box\n    htmlContent = htmlContent.replaceAll(\'checked=\"checked\"\', \"\")  //to remove already selected values in check box\n\n    @Grab(group = \'org.ccil.cowan.tagsoup\', module = \'tagsoup\', version = \'1.2\')\n// Define our TagSoup backed parser\n    def slurper = new XmlSlurper()\n// Parse our html\n    def html = slurper.parseText(htmlContent)\n\n    params.each {id, value -&gt;\n      def htmlBody = html.body.\"**\"\n      def input = htmlBody.find { it.@id == id }   //name and id for all text boxes and select boxes were kept same\n      if (input) {\n        if (id.startsWith(\"txt\")) {   // text box names had a prefix \'txt\'\n          input.@value = value\n        } else if (id.startsWith(\"cmb\")) {     // select box names had a prefix \'cmb\'\n          def option = input.option.list().find {it == value}\n          if (option)\n            option.@selected = \"selected\"\n        }\n      }\n    }\n\n    params.each {name, value -&gt;\n      if (name.startsWith(\"cb\") &amp;&amp; value) {     // check box names had a prefix \'cb\'\n          def chkBoxvalues = [value].flatten()\n          chkBoxvalues.each {chkBoxValue -&gt;\n          def htmlBody = html.body.\"**\"\n          def input = htmlBody.find { it.@type == \"checkbox\" &amp;&amp; it.@name == name &amp;&amp; it.@value == chkBoxValue }\n          if (input) {\n            input.@checked = \"checked\"\n          }\n        }\n      }\n    }\n\n// Write it out (into a StringWriter for now)\n    def w = new StringWriter()\n    w &lt;&lt; new StreamingMarkupBuilder().bind {\n      // Required to avoid the html: namespace on every node\n      mkp.declareNamespace \'\': \'http://www.w3.org/1999/xhtml\'\n      mkp.yield html\n    }\n// XmlUtil.serialize neatens up our resultant xml -- but adds an xml declaration :-(\n    return new XmlUtil().serialize(w.toString())\n  }\n}\n</pre>\n</div></blockquote>\nThanks to  <a href=\"http://stackoverflow.com/questions/2510536/html-parsing-fetch-and-update-data-from-the-html-file\">tim_yates</a> and others who helped me with this.\n\nHope this helped!\n\nRegards,\n~~Amit Jain~~\namit@intelligrape.com\nIntelliGrape Software','XmlSlurper made it simple',0,'','inherit','open','open','','514-revision-2','','','2010-03-26 11:03:32','2010-03-26 05:33:32','',514,'http://www.intelligrape.com/blog/?p=516',0,'revision','',0),(517,7,'2010-03-26 11:04:43','2010-03-26 05:34:43','Hi! We had a myForm.html file (accessible only from the third party) where in we needed to update the form containing input/select/check boxes with the values we had in the request params and render it. So we used xmlslurper for the same. Without much effort, it just worked great. Following is the code we wrote:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">import org.ccil.cowan.tagsoup.*\r\nimport groovy.xml.*\r\nimport groovy.util.XmlSlurper\r\nimport javax.xml.parsers.SAXParser\r\n\r\npublic String parseAndUpdateHtml(Map params, String htmlContent) {\r\n    htmlContent = htmlContent.replaceAll(\'selected=\"selected\"\', \"\")  //to remove already selected values in select box\r\n    htmlContent = htmlContent.replaceAll(\'checked=\"checked\"\', \"\")  //to remove already selected values in check box\r\n\r\n    @Grab(group = \'org.ccil.cowan.tagsoup\', module = \'tagsoup\', version = \'1.2\')\r\n// Define our TagSoup backed parser\r\n    def slurper = new XmlSlurper()\r\n// Parse our html\r\n    def html = slurper.parseText(htmlContent)\r\n\r\n    params.each {id, value ->\r\n      def htmlBody = html.body.\"**\"\r\n      def input = htmlBody.find { it.@id == id }   //name and id for all text boxes and select boxes were kept same\r\n      if (input) {\r\n        if (id.startsWith(\"txt\")) {   // text box names had a prefix \'txt\'\r\n          input.@value = value\r\n        } else if (id.startsWith(\"cmb\")) {     // select box names had a prefix \'cmb\'\r\n          def option = input.option.list().find {it == value}\r\n          if (option)\r\n            option.@selected = \"selected\"\r\n        }\r\n      }\r\n    }\r\n\r\n    params.each {name, value ->\r\n      if (name.startsWith(\"cb\") &amp;&amp; value) {     // check box names had a prefix \'cb\'\r\n          def chkBoxvalues = [value].flatten()\r\n          chkBoxvalues.each {chkBoxValue -&gt;\r\n          def htmlBody = html.body.\"**\"\r\n          def input = htmlBody.find { it.@type == \"checkbox\" &amp;&amp; it.@name == name &amp;&amp; it.@value == chkBoxValue }\r\n          if (input) {\r\n            input.@checked = \"checked\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n// Write it out (into a StringWriter for now)\r\n    def w = new StringWriter()\r\n    w &lt;&lt; new StreamingMarkupBuilder().bind {\r\n      // Required to avoid the html: namespace on every node\r\n      mkp.declareNamespace \'\': \'http://www.w3.org/1999/xhtml\'\r\n      mkp.yield html\r\n    }\r\n// XmlUtil.serialize neatens up our resultant xml -- but adds an xml declaration :-(\r\n    return new XmlUtil().serialize(w.toString())\r\n  }\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThanks to  <a href=\"http://stackoverflow.com/questions/2510536/html-parsing-fetch-and-update-data-from-the-html-file\">tim_yates</a> and others who helped me with this.\r\n\r\nHope this helped!\r\n\r\nRegards,\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Software','XmlSlurper made it simple',0,'','inherit','open','open','','514-revision-3','','','2010-03-26 11:04:43','2010-03-26 05:34:43','',514,'http://www.intelligrape.com/blog/?p=517',0,'revision','',0),(518,7,'2010-03-26 11:07:32','2010-03-26 05:37:32','Hi! We had a myForm.html file (accessible only from the third party) where in we needed to update the form containing input/select/check boxes with the values we had in the request params and render it. So we used xmlslurper for the same. Without much effort, it just worked great. Following is the code we wrote:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">import org.ccil.cowan.tagsoup.*\r\nimport groovy.xml.*\r\nimport groovy.util.XmlSlurper\r\nimport javax.xml.parsers.SAXParser\r\n\r\npublic String parseAndUpdateHtml(Map params, String htmlContent) {\r\n    htmlContent = htmlContent.replaceAll(\'selected=\"selected\"\', \"\")  //to remove already selected values in select box\r\n    htmlContent = htmlContent.replaceAll(\'checked=\"checked\"\', \"\")  //to remove already selected values in check box\r\n\r\n    @Grab(group = \'org.ccil.cowan.tagsoup\', module = \'tagsoup\', version = \'1.2\')\r\n// Define our TagSoup backed parser\r\n    def slurper = new XmlSlurper()\r\n// Parse our html\r\n    def html = slurper.parseText(htmlContent)\r\n\r\n    params.each {id, value ->\r\n      def htmlBody = html.body.\"**\"\r\n      def input = htmlBody.find { it.@id == id }   //name and id for all text boxes and select boxes were kept same\r\n      if (input) {\r\n        if (id.startsWith(\"txt\")) {   // text box names had a prefix \'txt\'\r\n          input.@value = value\r\n        } else if (id.startsWith(\"cmb\")) {     // select box names had a prefix \'cmb\'\r\n          def option = input.option.list().find {it == value}\r\n          if (option)\r\n            option.@selected = \"selected\"\r\n        }\r\n      }\r\n    }\r\n\r\n    params.each {name, value ->\r\n      if (name.startsWith(\"cb\") && value) {     // check box names had a prefix \'cb\'\r\n          def chkBoxvalues = [value].flatten()\r\n          chkBoxvalues.each {chkBoxValue ->\r\n          def htmlBody = html.body.\"**\"\r\n          def input = htmlBody.find { it.@type == \"checkbox\" && it.@name == name && it.@value == chkBoxValue }\r\n          if (input) {\r\n            input.@checked = \"checked\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n// Write it out (into a StringWriter for now)\r\n    def w = new StringWriter()\r\n    w << new StreamingMarkupBuilder().bind {\r\n      // Required to avoid the html: namespace on every node\r\n      mkp.declareNamespace \'\': \'http://www.w3.org/1999/xhtml\'\r\n      mkp.yield html\r\n    }\r\n// XmlUtil.serialize neatens up our resultant xml -- but adds an xml declaration :-(\r\n    return new XmlUtil().serialize(w.toString())\r\n  }\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThanks to  <a href=\"http://stackoverflow.com/questions/2510536/html-parsing-fetch-and-update-data-from-the-html-file\">tim_yates</a> and others who helped me with this.\r\n\r\nHope this helped!\r\n\r\nRegards,\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Software','XmlSlurper made it simple',0,'','inherit','open','open','','514-revision-4','','','2010-03-26 11:07:32','2010-03-26 05:37:32','',514,'http://www.intelligrape.com/blog/?p=518',0,'revision','',0),(519,7,'2010-03-26 11:09:19','2010-03-26 05:39:19','Hi! We had a myForm.html file (accessible only from the third party) where in we needed to update the form containing input/select/check boxes with the values we had in the request params and render it. So we used xmlslurper for the same. Without much effort, it just worked great. Following is the code we wrote:\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">import org.ccil.cowan.tagsoup.*\r\nimport groovy.xml.*\r\nimport groovy.util.XmlSlurper\r\nimport javax.xml.parsers.SAXParser\r\n\r\npublic String parseAndUpdateHtml(Map params, String htmlContent) {\r\n    htmlContent = htmlContent.replaceAll(\'selected=\"selected\"\', \"\")  //to remove already selected values in select box\r\n    htmlContent = htmlContent.replaceAll(\'checked=\"checked\"\', \"\")  //to remove already selected values in check box\r\n\r\n    @Grab(group = \'org.ccil.cowan.tagsoup\', module = \'tagsoup\', version = \'1.2\')\r\n// Define our TagSoup backed parser\r\n    def slurper = new XmlSlurper()\r\n// Parse our html\r\n    def html = slurper.parseText(htmlContent)\r\n\r\n    params.each {id, value ->\r\n      def htmlBody = html.body.\"**\"\r\n      def input = htmlBody.find { it.@id == id }   //name and id for all text boxes and select boxes were kept same\r\n      if (input) {\r\n        if (id.startsWith(\"txt\")) {   // text box names had a prefix \'txt\'\r\n          input.@value = value\r\n        } else if (id.startsWith(\"cmb\")) {     // select box names had a prefix \'cmb\'\r\n          def option = input.option.list().find {it == value}\r\n          if (option)\r\n            option.@selected = \"selected\"\r\n        }\r\n      }\r\n    }\r\n\r\n    params.each {name, value ->\r\n      if (name.startsWith(\"cb\") && value) {     // check box names had a prefix \'cb\'\r\n          def chkBoxvalues = [value].flatten()\r\n          chkBoxvalues.each {chkBoxValue ->\r\n          def htmlBody = html.body.\"**\"\r\n          def input = htmlBody.find { it.@type == \"checkbox\" && it.@name == name && it.@value == chkBoxValue }\r\n          if (input) {\r\n            input.@checked = \"checked\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n// Write it out (into a StringWriter for now)\r\n    def w = new StringWriter()\r\n    w << new StreamingMarkupBuilder().bind {\r\n      // Required to avoid the html: namespace on every node\r\n      mkp.declareNamespace \'\': \'http://www.w3.org/1999/xhtml\'\r\n      mkp.yield html\r\n    }\r\n// XmlUtil.serialize neatens up our resultant xml -- but adds an xml declaration :-(\r\n    return new XmlUtil().serialize(w.toString())\r\n  }\r\n}\r\n</pre>\r\n</div></blockquote>\r\nThanks to  <a href=\"http://stackoverflow.com/questions/2510536/html-parsing-fetch-and-update-data-from-the-html-file\">tim_yates</a> and others who helped me with this.\r\n\r\nHope this helped!\r\n\r\nRegards,\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nIntelliGrape Software','XmlSlurper made it simple',0,'','inherit','open','open','','514-revision-5','','','2010-03-26 11:09:19','2010-03-26 05:39:19','',514,'http://www.intelligrape.com/blog/?p=519',0,'revision','',0),(520,13,'2010-03-31 15:51:06','2010-03-31 10:21:06','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins : <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\r\n\r\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\r\n\r\nThe solution I got is to define custom validator for date as shown below :\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n         jQuery.validator.addMethod(\r\n               \"customDateValidator\",\r\n                function(value, element) {\r\n			// parseDate throws exception if the value is invalid\r\n                     try{jQuery.datepicker.parseDate( \'m/dd/yy\', value);return true;}\r\n                     catch(e){return false;}\r\n                    },\r\n                    \"Please enter a valid date\"\r\n                );\r\n</script>\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nNow I am able to use this custom validator as :\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n	// myDateInputField is the id of text input field\r\n        // apply the custom validator\r\n        jQuery(\"#myDateInputField\").rules(\"add\", {customDateValidator:true});\r\n        // apply the date picker\r\n        jQuery(\"#myDateInputField\").datepicker();\r\n</script>\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n\r\nHope it helps you.\r\n\r\n~~~ Bhagwat Kumar ~~~~\r\nbhagwat@intelligrape.com','Client side date validation using jQuery plugins',0,'','publish','open','open','','client-side-date-validation-using-jquery-plugins','','','2010-03-31 15:51:06','2010-03-31 10:21:06','',0,'http://www.intelligrape.com/blog/?p=520',0,'post','',0),(521,13,'2010-03-31 15:31:45','2010-03-31 10:01:45','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins viz. jQuery validation(http://docs.jquery.com/Plugins/Validation) and jQuery UI datepicker(http://jqueryui.com/demos/datepicker) for client side validation.\n\n\nAfter googling I found a solution(http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin) but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\n\nThe solution i got is to define custom validator for date as shown below :\n','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-revision','','','2010-03-31 15:31:45','2010-03-31 10:01:45','',520,'http://www.intelligrape.com/blog/?p=521',0,'revision','',0),(522,13,'2010-03-31 15:36:02','2010-03-31 10:06:02','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins viz. <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\n\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\n\nThe solution I got is to define custom validator for date as shown below :\n\n\n','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-revision-2','','','2010-03-31 15:36:02','2010-03-31 10:06:02','',520,'http://www.intelligrape.com/blog/?p=522',0,'revision','',0),(523,13,'2010-03-31 15:41:14','2010-03-31 10:11:14','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins viz. <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\n\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\n\nThe solution I got is to define custom validator for date as shown below :\n\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\">\n         jQuery.validator.addMethod(\n               \"customDateValidator\",\n                function(value, element) {\n			// parseDate throws exception if the value is invalid\n                     try{jQuery.datepicker.parseDate( \'m/dd/yy\', value);return true;}\n                     catch(e){return false;}\n                    },\n                    \"Please enter a valid date\"\n                );\n</script>\n</pre>\n</div>\n</blockquote>\n','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-revision-3','','','2010-03-31 15:41:14','2010-03-31 10:11:14','',520,'http://www.intelligrape.com/blog/?p=523',0,'revision','',0),(524,13,'2010-03-31 15:42:14','2010-03-31 10:12:14','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins viz. <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\n\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\n\nThe solution I got is to define custom validator for date as shown below :\n\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\">\n         jQuery.validator.addMethod(\n               \"customDateValidator\",\n                function(value, element) {\n			// parseDate throws exception if the value is invalid\n                     try{jQuery.datepicker.parseDate( \'m/dd/yy\', value);return true;}\n                     catch(e){return false;}\n                    },\n                    \"Please enter a valid date\"\n                );\n</script>\n</pre>\n</div>\n</blockquote>\n\nNow i am able to use this custom validator as :\n\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\">\n         jQuery.validator.addMethod(\n               \"customDateValidator\",\n                function(value, element) {\n			// parseDate throws exception if the value is invalid\n                     try{jQuery.datepicker.parseDate( \'m/dd/yy\', value);return true;}\n                     catch(e){return false;}\n                    },\n                    \"Please enter a valid date\"\n                );\n</script>\n</pre>\n</div>\n</blockquote>\n','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-revision-4','','','2010-03-31 15:42:14','2010-03-31 10:12:14','',520,'http://www.intelligrape.com/blog/?p=524',0,'revision','',0),(525,13,'2010-03-31 15:43:52','2010-03-31 10:13:52','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins viz. <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\r\n\r\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\r\n\r\nThe solution I got is to define custom validator for date as shown below :\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n         jQuery.validator.addMethod(\r\n               \"customDateValidator\",\r\n                function(value, element) {\r\n			// parseDate throws exception if the value is invalid\r\n                     try{jQuery.datepicker.parseDate( \'m/dd/yy\', value);return true;}\r\n                     catch(e){return false;}\r\n                    },\r\n                    \"Please enter a valid date\"\r\n                );\r\n</script>\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nNow i am able to use this custom validator as :\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n	// myDateInputField is the id of text input field\r\n        // apply the custom validator\r\n        jQuery(\"#myDateInputField\").rules(\"add\", {customDateValidator:true});\r\n        // apply the date picker\r\n        jQuery(\"#myDateInputField\").datepicker();\r\n</script>\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n\r\nHope it helps you.\r\n\r\n~~~ Bhagwat Kumar ~~~~\r\nbhagwat@intelligrape.com','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-revision-5','','','2010-03-31 15:43:52','2010-03-31 10:13:52','',520,'http://www.intelligrape.com/blog/?p=525',0,'revision','',0),(526,13,'2010-03-31 15:50:22','2010-03-31 10:20:22','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins : <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\r\n\r\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\r\n\r\nThe solution I got is to define custom validator for date as shown below :\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n         jQuery.validator.addMethod(\r\n               \"customDateValidator\",\r\n                function(value, element) {\r\n			// parseDate throws exception if the value is invalid\r\n                     try{jQuery.datepicker.parseDate( \'m/dd/yy\', value);return true;}\r\n                     catch(e){return false;}\r\n                    },\r\n                    \"Please enter a valid date\"\r\n                );\r\n</script>\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nNow I am able to use this custom validator as :\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"javascript\"><script type=\"text/javascript\">\r\n	// myDateInputField is the id of text input field\r\n        // apply the custom validator\r\n        jQuery(\"#myDateInputField\").rules(\"add\", {customDateValidator:true});\r\n        // apply the date picker\r\n        jQuery(\"#myDateInputField\").datepicker();\r\n</script>\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\n\r\nHope it helps you.\r\n\r\n~~~ Bhagwat Kumar ~~~~\r\nbhagwat@intelligrape.com','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-revision-6','','','2010-03-31 15:50:22','2010-03-31 10:20:22','',520,'http://www.intelligrape.com/blog/?p=526',0,'revision','',0),(527,19,'2010-03-31 21:21:03','2010-03-31 15:51:03','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\r\n1. Use Google charts API\r\n2. Use Grails Eastwood Chart plugins.\r\n3. Use jFreeChart API.\r\n\r\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\r\n\r\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\r\nLike , in case of pie chart , it doesn\'t provide Legends.\r\n\r\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\r\n\r\nFor generating Charts in Jfree , just download the jfreechart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\r\nThe list we are passing contains the labels(keys)  &  their values. Height and width are for size of chart.\r\n<pre lang=\"groovy\">\r\n\r\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\r\n\r\nDefaultPieDataset pieDataset = new DefaultPieDataset();\r\n\r\nkeys.eachWithIndex {String data, Integer index -&gt;\r\npieDataset.setValue(data, values[index]);\r\n}\r\n\r\nPiePlot3D plot = new PiePlot3D(pieDataset);\r\n\r\nplot.setDirection(Rotation.CLOCKWISE)\r\nplot.setStartAngle(90)\r\nplot.setBackgroundPaint(Color.white)\r\nplot.setLabelGenerator(new CustomLabelGenerator())  // this class is used for generation of customized labels\r\nplot.setLabelOutlinePaint(Color.WHITE)\r\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\r\n\r\nJFreeChart chart = new JFreeChart(plot)\r\nchart.setBorderVisible(false)\r\nchart.setBackgroundPaint(Color.white)\r\nchart.legend.setPosition(RectangleEdge.TOP)\r\n\r\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\r\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\r\nChartUtilities.saveChartAsPNG(file1, chart, width, height, info);\r\n}\r\n</pre>\r\n\r\nAnd the class used for generation of custom labels is:-\r\n<pre  lang=\"groovy\" >\r\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\r\n\r\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\r\n        String temp = null\r\n        if (dataset != null) {\r\n            temp = dataset.getValue(key).toString() + \"%\"\r\n        }\r\n        return temp\r\n    }\r\n\r\n</pre>\r\nIt will generate the labels as percentage(%) values.\r\n\r\nThis method will generate the pie chart png image at the given path.\r\n\r\nUseful links:-\r\n         <a href=\"http://jfree.org/\">http://jfree.org/</a>\r\n         <a href=\"http://grails.org/plugin/eastwood-chart\">http://grails.org/plugin/eastwood-chart</a>\r\n         \r\n\r\nHope you find this useful.\r\n\r\nVishal\r\nvishal@intelligrape.com','Generating Dynamic charts in Grails',0,'','publish','open','open','','generating-dyanmic-charts-in-grails','','','2010-04-01 11:21:04','2010-04-01 05:51:04','',0,'http://www.intelligrape.com/blog/?p=527',0,'post','',4),(528,19,'2010-03-31 21:05:43','2010-03-31 15:35:43','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\n1. Use Google charts API\n2. Use Grails Eastwood Chart plugins.\n3. Use jFreeChart API.\n\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\n\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\nLike , in case of pie chart , it doesn\'t provide Legends.\n\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\n\nFor generating Charts in Jfree , just download the jfreeChart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\n\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\n\nDefaultPieDataset pieDataset = new DefaultPieDataset();\n\nkeys.eachWithIndex {String data, Integer index -&gt;\npieDataset.setValue(data, values[index]);\n}\n\nPiePlot3D plot = new PiePlot3D(pieDataset);\n\nplot.setDirection(Rotation.CLOCKWISE)\nplot.setStartAngle(90)\nplot.setDepthFactor(0.09)\nplot.setBackgroundPaint(Color.white)\nplot.setLabelLinksVisible(true)\nplot.setLabelGenerator(new CustomLabelGenerator())\nplot.setLabelOutlinePaint(Color.WHITE)\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\nplot.setSectionOutlinesVisible(false)\n\nJFreeChart chart = new JFreeChart(plot)\nchart.setBorderVisible(false)\nchart.setBackgroundPaint(Color.white)\nchart.legend.setPosition(RectangleEdge.TOP)\n\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\n\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\n\n}\n\nThis method will generate the pie chart','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision','','','2010-03-31 21:05:43','2010-03-31 15:35:43','',527,'http://www.intelligrape.com/blog/?p=528',0,'revision','',0),(529,19,'2010-03-31 21:07:55','2010-03-31 15:37:55','If you want to keep track of the errors and exceptions on the view, after  making an ajax call, then this might be something of your interest :\n<pre lang=\"javascript\">jQuery().ready(function() {\n  jQuery.ajaxSetup({\n    error: function(x, e) {\n      if (x.status == 0) {\n        alert(\'You are offline!!\\n Please Check Your Network.\');\n      } else if (x.status == 404) {\n        alert(\'Requested URL not found.\');\n      } else if (x.status == 500) {\n        alert(\'Internel Server Error.\');\n      } else if (e == \'parsererror\') {\n        alert(\'Error.\\nParsing JSON Request failed.\');\n      } else if (e == \'timeout\') {\n        alert(\'Request Time out.\');\n      }\n      else if (x.status == \'401\') {\n          alert(\'My Own Exception\');\n        }\n    }\n  });\n});</pre>\nAnd in your action, you can use the following code to send a custom exception code along with a custome message:\n<pre lang=\"groovy\">response.sendError(440,\"custom message\")\n</pre>\nIn my project I need the errors and exceptions to be shown on a page which is different from the one from which the ajax request originated. So I added the following statement in the else part :\n<pre lang=\"groovy\">else {\n         window.location = \"${createLink(controller: \'apgException\', action: \'somethingWrong\')}\" + \"? status=\" + x.status +\"&amp;message=\" + x.statusText\n  }\n</pre>\nHope you find it useful.\nImran Mir\nimran@intelligrape.com','Tracking Errors/Exceptions during ajax calls in a view',0,'','inherit','open','open','','472-autosave','','','2010-03-31 21:07:55','2010-03-31 15:37:55','',472,'http://www.intelligrape.com/blog/?p=529',0,'revision','',0),(530,19,'2010-03-31 21:09:29','2010-03-31 15:39:29','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\n1. Use Google charts API\n2. Use Grails Eastwood Chart plugins.\n3. Use jFreeChart API.\n\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\n\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\nLike , in case of pie chart , it doesn\'t provide Legends.\n\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\n\nFor generating Charts in Jfree , just download the jfreeChart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\n<pre lang=\"groovy\">\n\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\n\nDefaultPieDataset pieDataset = new DefaultPieDataset();\n\nkeys.eachWithIndex {String data, Integer index -&gt;\npieDataset.setValue(data, values[index]);\n}\n\nPiePlot3D plot = new PiePlot3D(pieDataset);\n\nplot.setDirection(Rotation.CLOCKWISE)\nplot.setStartAngle(90)\nplot.setDepthFactor(0.09)\nplot.setBackgroundPaint(Color.white)\nplot.setLabelLinksVisible(true)\nplot.setLabelGenerator(new CustomLabelGenerator())\nplot.setLabelOutlinePaint(Color.WHITE)\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\nplot.setSectionOutlinesVisible(false)\n\nJFreeChart chart = new JFreeChart(plot)\nchart.setBorderVisible(false)\nchart.setBackgroundPaint(Color.white)\nchart.legend.setPosition(RectangleEdge.TOP)\n\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\n\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\n\n}\n</pre>\n\nThis method will generate the pie chart png image at the given path.\n\nHope you find this useful.\n\nVishal\n','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-2','','','2010-03-31 21:09:29','2010-03-31 15:39:29','',527,'http://www.intelligrape.com/blog/?p=530',0,'revision','',0),(531,19,'2010-03-31 21:10:31','2010-03-31 15:40:31','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\n1. Use Google charts API\n2. Use Grails Eastwood Chart plugins.\n3. Use jFreeChart API.\n\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\n\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\nLike , in case of pie chart , it doesn\'t provide Legends.\n\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\n\nFor generating Charts in Jfree , just download the jfreeChart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\n<pre lang=\"groovy\">\n\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\n\nDefaultPieDataset pieDataset = new DefaultPieDataset();\n\nkeys.eachWithIndex {String data, Integer index -&gt;\npieDataset.setValue(data, values[index]);\n}\n\nPiePlot3D plot = new PiePlot3D(pieDataset);\n\nplot.setDirection(Rotation.CLOCKWISE)\nplot.setStartAngle(90)\nplot.setDepthFactor(0.09)\nplot.setBackgroundPaint(Color.white)\nplot.setLabelLinksVisible(true)\nplot.setLabelGenerator(new CustomLabelGenerator())\nplot.setLabelOutlinePaint(Color.WHITE)\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\nplot.setSectionOutlinesVisible(false)\n\nJFreeChart chart = new JFreeChart(plot)\nchart.setBorderVisible(false)\nchart.setBackgroundPaint(Color.white)\nchart.legend.setPosition(RectangleEdge.TOP)\n\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\n\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\n\n}\n</pre>\n\nThis method will generate the pie chart png image at the given path.\n\nHope you find this useful.\n\nVishal\nvishal@intelligrape.com','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-3','','','2010-03-31 21:10:31','2010-03-31 15:40:31','',527,'http://www.intelligrape.com/blog/?p=531',0,'revision','',0),(532,19,'2010-03-31 21:12:48','2010-03-31 15:42:48','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\r\n1. Use Google charts API\r\n2. Use Grails Eastwood Chart plugins.\r\n3. Use jFreeChart API.\r\n\r\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\r\n\r\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\r\nLike , in case of pie chart , it doesn\'t provide Legends.\r\n\r\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\r\n\r\nFor generating Charts in Jfree , just download the jfreeChart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\r\n<pre lang=\"groovy\">\r\n\r\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\r\n\r\nDefaultPieDataset pieDataset = new DefaultPieDataset();\r\n\r\nkeys.eachWithIndex {String data, Integer index -&gt;\r\npieDataset.setValue(data, values[index]);\r\n}\r\n\r\nPiePlot3D plot = new PiePlot3D(pieDataset);\r\n\r\nplot.setDirection(Rotation.CLOCKWISE)\r\nplot.setStartAngle(90)\r\nplot.setDepthFactor(0.09)\r\nplot.setBackgroundPaint(Color.white)\r\nplot.setLabelLinksVisible(true)\r\nplot.setLabelGenerator(new CustomLabelGenerator())\r\nplot.setLabelOutlinePaint(Color.WHITE)\r\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\r\nplot.setSectionOutlinesVisible(false)\r\n\r\nJFreeChart chart = new JFreeChart(plot)\r\nchart.setBorderVisible(false)\r\nchart.setBackgroundPaint(Color.white)\r\nchart.legend.setPosition(RectangleEdge.TOP)\r\n\r\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\r\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\r\n\r\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\r\n\r\n}\r\n</pre>\r\n\r\nAnd the class used fro generation of custom labels is:-\r\n<pre >\r\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\r\n\r\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\r\n        String temp = null\r\n        if (dataset != null) {\r\n            temp = dataset.getValue(key).toString() + \"%\"\r\n        }\r\n        return temp\r\n    }\r\n\r\n</pre>\r\nIt will generate the labels as percentage(%) values.\r\n\r\nThis method will generate the pie chart png image at the given path.\r\n\r\nHope you find this useful.\r\n\r\nVishal\r\nvishal@intelligrape.com','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-4','','','2010-03-31 21:12:48','2010-03-31 15:42:48','',527,'http://www.intelligrape.com/blog/?p=532',0,'revision','',0),(533,19,'2010-03-31 21:16:34','2010-03-31 15:46:34','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\r\n1. Use Google charts API\r\n2. Use Grails Eastwood Chart plugins.\r\n3. Use jFreeChart API.\r\n\r\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\r\n\r\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\r\nLike , in case of pie chart , it doesn\'t provide Legends.\r\n\r\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\r\n\r\nFor generating Charts in Jfree , just download the jfreeChart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\r\nThe list we are passing contains the labels(keys)  &  their values. Height and width are for size of chart.\r\n<pre lang=\"groovy\">\r\n\r\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\r\n\r\nDefaultPieDataset pieDataset = new DefaultPieDataset();\r\n\r\nkeys.eachWithIndex {String data, Integer index -&gt;\r\npieDataset.setValue(data, values[index]);\r\n}\r\n\r\nPiePlot3D plot = new PiePlot3D(pieDataset);\r\n\r\nplot.setDirection(Rotation.CLOCKWISE)\r\nplot.setStartAngle(90)\r\nplot.setBackgroundPaint(Color.white)\r\nplot.setLabelGenerator(new CustomLabelGenerator())  // this class is used for generation of customized labels\r\nplot.setLabelOutlinePaint(Color.WHITE)\r\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\r\n\r\nJFreeChart chart = new JFreeChart(plot)\r\nchart.setBorderVisible(false)\r\nchart.setBackgroundPaint(Color.white)\r\nchart.legend.setPosition(RectangleEdge.TOP)\r\n\r\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\r\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\r\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\r\n}\r\n</pre>\r\n\r\nAnd the class used for generation of custom labels is:-\r\n<pre >\r\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\r\n\r\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\r\n        String temp = null\r\n        if (dataset != null) {\r\n            temp = dataset.getValue(key).toString() + \"%\"\r\n        }\r\n        return temp\r\n    }\r\n\r\n</pre>\r\nIt will generate the labels as percentage(%) values.\r\n\r\nThis method will generate the pie chart png image at the given path.\r\n\r\nHope you find this useful.\r\n\r\nVishal\r\nvishal@intelligrape.com','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-5','','','2010-03-31 21:16:34','2010-03-31 15:46:34','',527,'http://www.intelligrape.com/blog/?p=533',0,'revision','',0),(534,19,'2010-03-31 21:20:46','2010-03-31 15:50:46','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\r\n1. Use Google charts API\r\n2. Use Grails Eastwood Chart plugins.\r\n3. Use jFreeChart API.\r\n\r\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\r\n\r\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\r\nLike , in case of pie chart , it doesn\'t provide Legends.\r\n\r\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\r\n\r\nFor generating Charts in Jfree , just download the jfreechart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\r\nThe list we are passing contains the labels(keys)  &  their values. Height and width are for size of chart.\r\n<pre lang=\"groovy\">\r\n\r\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\r\n\r\nDefaultPieDataset pieDataset = new DefaultPieDataset();\r\n\r\nkeys.eachWithIndex {String data, Integer index -&gt;\r\npieDataset.setValue(data, values[index]);\r\n}\r\n\r\nPiePlot3D plot = new PiePlot3D(pieDataset);\r\n\r\nplot.setDirection(Rotation.CLOCKWISE)\r\nplot.setStartAngle(90)\r\nplot.setBackgroundPaint(Color.white)\r\nplot.setLabelGenerator(new CustomLabelGenerator())  // this class is used for generation of customized labels\r\nplot.setLabelOutlinePaint(Color.WHITE)\r\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\r\n\r\nJFreeChart chart = new JFreeChart(plot)\r\nchart.setBorderVisible(false)\r\nchart.setBackgroundPaint(Color.white)\r\nchart.legend.setPosition(RectangleEdge.TOP)\r\n\r\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\r\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\r\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\r\n}\r\n</pre>\r\n\r\nAnd the class used for generation of custom labels is:-\r\n<pre  lang=\"groovy\" >\r\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\r\n\r\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\r\n        String temp = null\r\n        if (dataset != null) {\r\n            temp = dataset.getValue(key).toString() + \"%\"\r\n        }\r\n        return temp\r\n    }\r\n\r\n</pre>\r\nIt will generate the labels as percentage(%) values.\r\n\r\nThis method will generate the pie chart png image at the given path.\r\n\r\nUseful links:-\r\n         <a href=\"http://jfree.org/\">http://jfree.org/</a>\r\n         <a href=\"http://grails.org/plugin/eastwood-chart\">http://grails.org/plugin/eastwood-chart</a>\r\n         \r\n\r\nHope you find this useful.\r\n\r\nVishal\r\nvishal@intelligrape.com','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-6','','','2010-03-31 21:20:46','2010-03-31 15:50:46','',527,'http://www.intelligrape.com/blog/?p=534',0,'revision','',0),(535,19,'2010-03-31 21:21:03','2010-03-31 15:51:03','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\r\n1. Use Google charts API\r\n2. Use Grails Eastwood Chart plugins.\r\n3. Use jFreeChart API.\r\n\r\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\r\n\r\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\r\nLike , in case of pie chart , it doesn\'t provide Legends.\r\n\r\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\r\n\r\nFor generating Charts in Jfree , just download the jfreechart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\r\nThe list we are passing contains the labels(keys)  &  their values. Height and width are for size of chart.\r\n<pre lang=\"groovy\">\r\n\r\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\r\n\r\nDefaultPieDataset pieDataset = new DefaultPieDataset();\r\n\r\nkeys.eachWithIndex {String data, Integer index -&gt;\r\npieDataset.setValue(data, values[index]);\r\n}\r\n\r\nPiePlot3D plot = new PiePlot3D(pieDataset);\r\n\r\nplot.setDirection(Rotation.CLOCKWISE)\r\nplot.setStartAngle(90)\r\nplot.setBackgroundPaint(Color.white)\r\nplot.setLabelGenerator(new CustomLabelGenerator())  // this class is used for generation of customized labels\r\nplot.setLabelOutlinePaint(Color.WHITE)\r\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\r\n\r\nJFreeChart chart = new JFreeChart(plot)\r\nchart.setBorderVisible(false)\r\nchart.setBackgroundPaint(Color.white)\r\nchart.legend.setPosition(RectangleEdge.TOP)\r\n\r\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\r\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\r\nChartUtilities.saveChartAsPNG(file1, chart, 800, 200, info);\r\n}\r\n</pre>\r\n\r\nAnd the class used for generation of custom labels is:-\r\n<pre  lang=\"groovy\" >\r\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\r\n\r\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\r\n        String temp = null\r\n        if (dataset != null) {\r\n            temp = dataset.getValue(key).toString() + \"%\"\r\n        }\r\n        return temp\r\n    }\r\n\r\n</pre>\r\nIt will generate the labels as percentage(%) values.\r\n\r\nThis method will generate the pie chart png image at the given path.\r\n\r\nUseful links:-\r\n         <a href=\"http://jfree.org/\">http://jfree.org/</a>\r\n         <a href=\"http://grails.org/plugin/eastwood-chart\">http://grails.org/plugin/eastwood-chart</a>\r\n         \r\n\r\nHope you find this useful.\r\n\r\nVishal\r\nvishal@intelligrape.com','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-7','','','2010-03-31 21:21:03','2010-03-31 15:51:03','',527,'http://www.intelligrape.com/blog/?p=535',0,'revision','',0),(536,19,'2010-04-01 11:20:35','2010-04-01 05:50:35','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\n1. Use Google charts API\n2. Use Grails Eastwood Chart plugins.\n3. Use jFreeChart API.\n\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\n\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\nLike , in case of pie chart , it doesn\'t provide Legends.\n\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\n\nFor generating Charts in Jfree , just download the jfreechart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\nThe list we are passing contains the labels(keys)  &  their values. Height and width are for size of chart.\n<pre lang=\"groovy\">\n\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\n\nDefaultPieDataset pieDataset = new DefaultPieDataset();\n\nkeys.eachWithIndex {String data, Integer index -&gt;\npieDataset.setValue(data, values[index]);\n}\n\nPiePlot3D plot = new PiePlot3D(pieDataset);\n\nplot.setDirection(Rotation.CLOCKWISE)\nplot.setStartAngle(90)\nplot.setBackgroundPaint(Color.white)\nplot.setLabelGenerator(new CustomLabelGenerator())  // this class is used for generation of customized labels\nplot.setLabelOutlinePaint(Color.WHITE)\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\n\nJFreeChart chart = new JFreeChart(plot)\nchart.setBorderVisible(false)\nchart.setBackgroundPaint(Color.white)\nchart.legend.setPosition(RectangleEdge.TOP)\n\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\nChartUtilities.saveChartAsPNG(file1, chart, width, height, info);\n}\n</pre>\n\nAnd the class used for generation of custom labels is:-\n<pre  lang=\"groovy\" >\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\n\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\n        String temp = null\n        if (dataset != null) {\n            temp = dataset.getValue(key).toString() + \"%\"\n        }\n        return temp\n    }\n\n</pre>\nIt will generate the labels as percentage(%) values.\n\nThis method will generate the pie chart png image at the given path.\n\nUseful links:-\n         <a href=\"http://jfree.org/\">http://jfree.org/</a>\n         <a href=\"http://grails.org/plugin/eastwood-chart\">http://grails.org/plugin/eastwood-chart</a>\n         \n\nHope you find this useful.\n\nVishal\nvishal@intelligrape.com','Generating Dynamic charts in Grails',0,'','inherit','open','open','','527-autosave','','','2010-04-01 11:20:35','2010-04-01 05:50:35','',527,'http://www.intelligrape.com/blog/?p=536',0,'revision','',0),(537,19,'2010-03-31 21:22:03','2010-03-31 15:52:03','In my project we need to generate dynamic Pie charts &amp; Area charts. I had various options to do so.\r\n1. Use Google charts API\r\n2. Use Grails Eastwood Chart plugins.\r\n3. Use jFreeChart API.\r\n\r\nIn case of Google charts, the application only generates the required URL &amp; get the chart from google server , which is unacceptable if we are developing intranet application.\r\n\r\nIn case of Grails Eastwood Chart plugin,  it is good when we talk about simple charts (as it generates them quickly with only single line of code), but it does not provide vast functionality &amp; doesn\'t have full control over the chart.\r\nLike , in case of pie chart , it doesn\'t provide Legends.\r\n\r\nSo, finally i used the JfreeChart API for our project. It is free Java chart library. JFreeChart supports pie charts (2D and 3D), bar charts (horizontal and vertical, regular and stacked), line charts, scatter plots, time series charts, high-low-open-close charts, candlestick plots, Gantt charts, combined plots, thermometers, dials and more.\r\n\r\nFor generating Charts in Jfree , just download the jfreechart-1.0.10.jar &amp; jcommon-1.0.13.jar  and place them in lib folder.\r\nThe list we are passing contains the labels(keys)  &  their values. Height and width are for size of chart.\r\n<pre lang=\"groovy\">\r\n\r\nvoid drawPieChart(List keys, List values, Integer width, Integer height) {\r\n\r\nDefaultPieDataset pieDataset = new DefaultPieDataset();\r\n\r\nkeys.eachWithIndex {String data, Integer index -&gt;\r\npieDataset.setValue(data, values[index]);\r\n}\r\n\r\nPiePlot3D plot = new PiePlot3D(pieDataset);\r\n\r\nplot.setDirection(Rotation.CLOCKWISE)\r\nplot.setStartAngle(90)\r\nplot.setBackgroundPaint(Color.white)\r\nplot.setLabelGenerator(new CustomLabelGenerator())  // this class is used for generation of customized labels\r\nplot.setLabelOutlinePaint(Color.WHITE)\r\nplot.setLabelFont(new Font(\"SansSerif\", Font.PLAIN, 10))\r\n\r\nJFreeChart chart = new JFreeChart(plot)\r\nchart.setBorderVisible(false)\r\nchart.setBackgroundPaint(Color.white)\r\nchart.legend.setPosition(RectangleEdge.TOP)\r\n\r\nfinal ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());\r\nfinal File file1 = new File(\"//project/web-app/images/piechart.png\");\r\nChartUtilities.saveChartAsPNG(file1, chart, width, height, info);\r\n}\r\n</pre>\r\n\r\nAnd the class used for generation of custom labels is:-\r\n<pre  lang=\"groovy\" >\r\nstatic class CustomLabelGenerator implements PieSectionLabelGenerator {\r\n\r\n    public String generateSectionLabel(final PieDataset dataset, final Comparable key) {\r\n        String temp = null\r\n        if (dataset != null) {\r\n            temp = dataset.getValue(key).toString() + \"%\"\r\n        }\r\n        return temp\r\n    }\r\n\r\n</pre>\r\nIt will generate the labels as percentage(%) values.\r\n\r\nThis method will generate the pie chart png image at the given path.\r\n\r\nUseful links:-\r\n         <a href=\"http://jfree.org/\">http://jfree.org/</a>\r\n         <a href=\"http://grails.org/plugin/eastwood-chart\">http://grails.org/plugin/eastwood-chart</a>\r\n         \r\n\r\nHope you find this useful.\r\n\r\nVishal\r\nvishal@intelligrape.com','Generating Dyanmic charts in Grails',0,'','inherit','open','open','','527-revision-8','','','2010-03-31 21:22:03','2010-03-31 15:52:03','',527,'http://www.intelligrape.com/blog/?p=537',0,'revision','',0),(538,10,'2010-04-15 13:59:42','2010-04-15 08:29:42','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example resource.groovy similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'\r\n                     //app.sample.value is a property in the config.groovy file\r\n                     //If no config property is specified, set to \'defaultValue\'\r\n  }\r\n}</pre>\r\n</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','publish','open','open','','injecting-spring-beans-with-data-from-config','','','2010-04-15 13:59:42','2010-04-15 08:29:42','',0,'http://www.intelligrape.com/blog/?p=538',0,'post','',2),(539,10,'2010-04-15 13:42:47','2010-04-15 08:12:47','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision','','','2010-04-15 13:42:47','2010-04-15 08:12:47','',538,'http://www.intelligrape.com/blog/?p=539',0,'revision','',0),(540,9,'2010-04-15 16:55:51','2010-04-15 11:25:51','On a project, we needed to configure the redelivery mechanism for the JMS queue. That is, a poisonous message was to be sent to a Dead Letter Queue if a set number of attempts failed, so that the other messages in the queue could be processed. The JMS Plugin version used was 0.5\n\nMerely configuring ActiveMQ for setting up a Dead Letter Queue like :\n<blockquote>&lt;policyEntry queue=\"&gt;\" memoryLimit=\"5mb\"&gt;\n&lt;deadLetterStrategy&gt;\n&lt;individualDeadLetterStrategy queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" /&gt;\n&lt;/deadLetterStrategy&gt;\n&lt;/policyEntry&gt;</blockquote>\nAnd injecting the bean redeliveryPolicy into jmsConnectionFactory bean inside resources.groovy like this:\n<blockquote>\n<pre lang=\"groovy\">jmsRedeliveryPolicy(org.apache.activemq.RedeliveryPolicy){\n        maximumRedeliveries = 3\n        initialRedeliveryDelay = 500L\n        backOffMultiplier = 2\n        useExponentialBackOff = true\n    }\n    jmsConnectionFactory(org.apache.activemq.ActiveMQConnectionFactory) {\n        brokerURL = \'tcp://localhost:61616\'\n        redeliveryPolicy = jmsRedeliveryPolicy\n    }</pre>\n</blockquote>\ndid not do the trick. When an exception was thrown in the listener method in any service exposed to JMS, the message was staying in the queue and halting processing of subsequent messages.\n\nA change in the configuration of the \"standard\" container was required and this was done in Config.groovy as :\n<blockquote>\n<pre lang=\"groovy\">jms {\n    containers {\n        standard {\n            sessionTransacted = true\n        }\n    }\n}</pre>\n</blockquote>\nThis did the trick and the redelivery policy and dead letter queue mechanism started working the way we wanted it to.\n\nHope it helps\n\nVivek','Grails JMS Plugin and Redelivery Policy',0,'','inherit','open','open','','477-autosave','','','2010-04-15 16:55:51','2010-04-15 11:25:51','',477,'http://www.intelligrape.com/blog/?p=540',0,'revision','',0),(541,10,'2010-04-15 13:51:41','2010-04-15 08:21:41','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\n\nAn example similar to that would be\n<blockquote>\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\nbeans={\n   sampleBean(com.intelligrape.Sample){//Sample is a bean with a property value</pre>\n<pre lang=\"groovy\">      value = CH.config.app.sample.value?:\'defaultValue\'//app.sample.value is a property in the config.groovy file</pre>\n<pre lang=\"groovy\">                                                        //If no config property is specified, set to \'defaultValue\'</pre>\n<pre lang=\"groovy\">   }\n}</pre>\n</blockquote>\nHope this helps\n\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-2','','','2010-04-15 13:51:41','2010-04-15 08:21:41','',538,'http://www.intelligrape.com/blog/?p=541',0,'revision','',0),(543,10,'2010-04-15 13:54:12','2010-04-15 08:24:12','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'//app.sample.value is a property in the config.groovy file\r\n                                                     //If no config property is specified, set to \'defaultValue\'</pre>\r\n}\r\n}</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-4','','','2010-04-15 13:54:12','2010-04-15 08:24:12','',538,'http://www.intelligrape.com/blog/?p=543',0,'revision','',0),(542,10,'2010-04-15 13:52:24','2010-04-15 08:22:24','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){//Sample is a bean with a property value</pre>\r\n<pre lang=\"groovy\">      value = CH.config.app.sample.value?:\'defaultValue\'//app.sample.value is a property in the config.groovy file</pre>\r\n<pre lang=\"groovy\">                                                        //If no config property is specified, set to \'defaultValue\'</pre>\r\n<pre lang=\"groovy\">   }\r\n}</pre>\r\n</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-3','','','2010-04-15 13:52:24','2010-04-15 08:22:24','',538,'http://www.intelligrape.com/blog/?p=542',0,'revision','',0),(544,10,'2010-04-15 13:54:53','2010-04-15 08:24:53','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'\r\n                     //app.sample.value is a property in the config.groovy file\r\n                     //If no config property is specified, set to \'defaultValue\'</pre>\r\n}\r\n}</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-5','','','2010-04-15 13:54:53','2010-04-15 08:24:53','',538,'http://www.intelligrape.com/blog/?p=544',0,'revision','',0),(545,10,'2010-04-15 13:55:00','2010-04-15 08:25:00','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'\r\n                     //app.sample.value is a property in the config.groovy file\r\n                     //If no config property is specified, set to \'defaultValue\'</pre>\r\n}\r\n}</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-6','','','2010-04-15 13:55:00','2010-04-15 08:25:00','',538,'http://www.intelligrape.com/blog/?p=545',0,'revision','',0),(546,10,'2010-04-15 13:55:37','2010-04-15 08:25:37','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'\r\n                     //app.sample.value is a property in the config.groovy file\r\n                     //If no config property is specified, set to \'defaultValue\'\r\n  }\r\n}</pre>\r\n</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-7','','','2010-04-15 13:55:37','2010-04-15 08:25:37','',538,'http://www.intelligrape.com/blog/?p=546',0,'revision','',0),(547,10,'2010-04-15 13:55:45','2010-04-15 08:25:45','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'\r\n                     //app.sample.value is a property in the config.groovy file\r\n                     //If no config property is specified, set to \'defaultValue\'\r\n  }\r\n}</pre>\r\n</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-8','','','2010-04-15 13:55:45','2010-04-15 08:25:45','',538,'http://www.intelligrape.com/blog/?p=547',0,'revision','',0),(548,10,'2010-04-15 13:59:36','2010-04-15 08:29:36','In one of the projects, we had to externalize the Config file to be in a <em>properties</em> file. All configurations related to the application were to be stored in that file. We had a few spring beans, like the JMS connection factory, which needs the brokerURL which should ideally be an external configuration as it is will be environment specific. An excellent approach to this issue could be seen in the mail plugin, wherein the bean is injected from config values.\r\n\r\nAn example resource.groovy similar to that would be\r\n<blockquote>\r\n<pre lang=\"groovy\">import org.codehaus.groovy.grails.commons.ConfigurationHolder as CH\r\nbeans={\r\n   sampleBean(com.intelligrape.Sample){        //Sample is a bean with a property value\r\n        value = CH.config.app.sample.value?:\'defaultValue\'\r\n                     //app.sample.value is a property in the config.groovy file\r\n                     //If no config property is specified, set to \'defaultValue\'\r\n  }\r\n}</pre>\r\n</blockquote>\r\nHope this helps\r\n\r\n--Vivek','Injecting Spring Beans with data from Config',0,'','inherit','open','open','','538-revision-9','','','2010-04-15 13:59:36','2010-04-15 08:29:36','',538,'http://www.intelligrape.com/blog/?p=548',0,'revision','',0),(549,5,'2010-04-15 14:55:03','2010-04-15 09:25:03','In one of my project I need to generate GSP (groovy server pages) on the fly and write them on the file system. There was a quartz job that updates the GSP page on regular intervals. \r\n\r\nThe problem was, this functionality worked flawless in the development environment but fails in test and production environment. In test and production environment you can force and reload the GSP in order to see the latest one.\r\n\r\nYou can force the GSP to reload by writing this following code in your Config.groovy file:\r\n<block>\r\n<pre lang=\"groovy\">\r\ngrails.gsp.reload.enable = true\r\n</pre>\r\n</block>\r\n\r\nAny suggestions and comments are welcome.\r\n\r\nCheers\r\n~Chandan Luthra~','Reloading a GSP in test & production environment.',0,'','publish','open','open','','reloading-a-gsp-in-test-production-environment','','','2010-04-15 14:55:34','2010-04-15 09:25:35','',0,'http://www.intelligrape.com/blog/?p=549',0,'post','',0),(550,5,'2010-04-15 14:53:07','2010-04-15 09:23:07','In one of my project I need to generate GSP (groovy server pages) on the fly and write them on the file system. There was a quartz job that updates the GSP page on regular intervals. \n\nThe problem was, this functionality worked flawless in the development environment but fails in test and production environment. In test and production environment you can force and reload the GSP in order to see the latest one.\n\nYou can force the GSP to reload by writing this following code in your Config.groovy file:\n<block>\n<pre lang=\"groovy\">\n\n</pre>\n</block>','Reloading a GSP in production environment.',0,'','inherit','open','open','','549-revision','','','2010-04-15 14:53:07','2010-04-15 09:23:07','',549,'http://www.intelligrape.com/blog/?p=550',0,'revision','',0),(551,5,'2010-04-15 14:54:07','2010-04-15 09:24:07','In one of my project I need to generate GSP (groovy server pages) on the fly and write them on the file system. There was a quartz job that updates the GSP page on regular intervals. \n\nThe problem was, this functionality worked flawless in the development environment but fails in test and production environment. In test and production environment you can force and reload the GSP in order to see the latest one.\n\nYou can force the GSP to reload by writing this following code in your Config.groovy file:\n<block>\n<pre lang=\"groovy\">\ngrails.gsp.reload.enable = true\n</pre>\n</block>\n\n~Chandan Luthra~','Reloading a GSP in test & production environment.',0,'','inherit','open','open','','549-revision-2','','','2010-04-15 14:54:07','2010-04-15 09:24:07','',549,'http://www.intelligrape.com/blog/?p=551',0,'revision','',0),(552,5,'2010-04-15 14:55:03','2010-04-15 09:25:03','In one of my project I need to generate GSP (groovy server pages) on the fly and write them on the file system. There was a quartz job that updates the GSP page on regular intervals. \r\n\r\nThe problem was, this functionality worked flawless in the development environment but fails in test and production environment. In test and production environment you can force and reload the GSP in order to see the latest one.\r\n\r\nYou can force the GSP to reload by writing this following code in your Config.groovy file:\r\n<block>\r\n<pre lang=\"groovy\">\r\ngrails.gsp.reload.enable = true\r\n</pre>\r\n</block>\r\n\r\nAny suggestions and comments are welcome.\r\n\r\nCheers\r\n~Chandan Luthra~','Reloading a GSP in test & production environment.',0,'','inherit','open','open','','549-revision-3','','','2010-04-15 14:55:03','2010-04-15 09:25:03','',549,'http://www.intelligrape.com/blog/?p=552',0,'revision','',0),(553,9,'2010-04-15 16:52:28','2010-04-15 11:22:28','I have been facing problem of validating a text input field for a valid date. We are using two popular jquery plugins : <a href=\"http://docs.jquery.com/Plugins/Validation\" target=\"_blank\">jQuery validation</a> and <a href=\"http://jqueryui.com/demos/datepicker\" target=\"_blank\">jQuery UI datepicker</a> for client side validation.\n\nI googled it and found a good solution here <a href=\"http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin\" target=\"_blank\">http://stackoverflow.com/questions/511439/custom-date-format-with-jquery-validation-plugin</a> but it was validating only the formatting i.e. 30-Feb-2010 is a valid date if the formating string was dd-MMM-yyyy. In our case 30-Feb-2010 should be invalid date.\n\nThe solution I got is to define custom validator for date as shown below :\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\"><!--mce:0--></script>\n</pre>\n</div></blockquote>\nNow I am able to use this custom validator as :\n<blockquote>\n<div class=\"code\">\n<pre lang=\"javascript\"><script type=\"text/javascript\"><!--mce:1--></script>\n</pre>\n</div></blockquote>\nHope it helps you.\n\n~~~ Bhagwat Kumar ~~~~\nbhagwat@intelligrape.com','Client side date validation using jQuery plugins',0,'','inherit','open','open','','520-autosave','','','2010-04-15 16:52:28','2010-04-15 11:22:28','',520,'http://www.intelligrape.com/blog/?p=553',0,'revision','',0),(554,9,'2010-04-15 17:11:26','2010-04-15 11:41:26','In my project, there was a requirement to set the session time out interval and i had no idea about how to implement it. Then my colleague Himanshu Seth came to rescue. This guy has already done it. All you have to do is to set the maximum time out interval in the session. Here is the sample code.\r\n\r\ndeclare a SESSION_TIMEOUT constant in your application constants file (AppConstants.groovy).\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\npublic static final Integer SESSION_TIMEOUT = 3600	// This time is set in seconds. 3600 = 1 hour\r\n</pre>\r\n</blockquote>\r\n\r\nNow set the maximum inactive interval of session. You need to write this line of code in your controller.\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nsession.setMaxInactiveInterval(AppConstants.SESSION_TIMEOUT);\r\n</pre>\r\n</blockquote>\r\n\r\nHope it helps.\r\n\r\nGaurav Chauhan\r\ngaurav@intelligrape.com','Setting the timeout interval of a HttpSession',0,'','publish','open','open','','setting-the-timeout-interval-of-a-httpsession','','','2010-04-15 17:12:11','2010-04-15 11:42:11','',0,'http://www.intelligrape.com/blog/?p=554',0,'post','',1),(555,9,'2010-04-15 17:08:06','2010-04-15 11:38:06','In my project, there was a requirement to set the session time out interval and i had no idea about how to implement it. Then my colleague Himanshu Seth came to rescue. This guy has already done it. All you have to do is to set the maximum time out interval in the session. Here is the sample code.\n\ndeclare a SESSION_TIMEOUT constant in your application constants file (AppConstants.groovy).\n\n<blockquote>\n<pre lang=\"groovy\">\npublic static final Integer SESSION_TIMEOUT = 3600	// This time is set in seconds. 3600 = 1 hour\n</pre>\n</blockquote>\n\nNow set the maximum inactive interval of session. You need write this line of code in your controller.\n\n<blockquote>\n<pre lang=\"groovy\">\n\nsession.setMaxInactiveInterval(AppConstants.SESSION_TIMEOUT);\n\n</pre>\n</blockquote>\n\nHope it helps.\n\nGaurav Chauhan\ngaurav@intelligrape.com','Setting the timeout interval of a HttpSession',0,'','inherit','open','open','','554-revision','','','2010-04-15 17:08:06','2010-04-15 11:38:06','',554,'http://www.intelligrape.com/blog/?p=555',0,'revision','',0),(556,9,'2010-04-15 17:10:06','2010-04-15 11:40:06','In my project, there was a requirement to set the session time out interval and i had no idea about how to implement it. Then my colleague Himanshu Seth came to rescue. This guy has already done it. All you have to do is to set the maximum time out interval in the session. Here is the sample code.\n\ndeclare a SESSION_TIMEOUT constant in your application constants file (AppConstants.groovy).\n\n<blockquote>\n<pre lang=\"groovy\">\npublic static final Integer SESSION_TIMEOUT = 3600	// This time is set in seconds. 3600 = 1 hour\n</pre>\n</blockquote>\n\nNow set the maximum inactive interval of session. You need write this line of code in your controller.\n\n<blockquote>\n<pre lang=\"groovy\">\nsession.setMaxInactiveInterval(AppConstants.SESSION_TIMEOUT);\n</pre>\n</blockquote>\n\nHope it helps.\n\nGaurav Chauhan\ngaurav@intelligrape.com','Setting the timeout interval of a HttpSession',0,'','inherit','open','open','','554-revision-2','','','2010-04-15 17:10:06','2010-04-15 11:40:06','',554,'http://www.intelligrape.com/blog/?p=556',0,'revision','',0),(557,9,'2010-04-15 17:11:26','2010-04-15 11:41:26','In my project, there was a requirement to set the session time out interval and i had no idea about how to implement it. Then my colleague Himanshu Seth came to rescue. This guy has already done it. All you have to do is to set the maximum time out interval in the session. Here is the sample code.\r\n\r\ndeclare a SESSION_TIMEOUT constant in your application constants file (AppConstants.groovy).\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\npublic static final Integer SESSION_TIMEOUT = 3600	// This time is set in seconds. 3600 = 1 hour\r\n</pre>\r\n</blockquote>\r\n\r\nNow set the maximum inactive interval of session. You need write this line of code in your controller.\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nsession.setMaxInactiveInterval(AppConstants.SESSION_TIMEOUT);\r\n</pre>\r\n</blockquote>\r\n\r\nHope it helps.\r\n\r\nGaurav Chauhan\r\ngaurav@intelligrape.com','Setting the timeout interval of a HttpSession',0,'','inherit','open','open','','554-revision-3','','','2010-04-15 17:11:26','2010-04-15 11:41:26','',554,'http://www.intelligrape.com/blog/?p=557',0,'revision','',0),(558,16,'2010-04-19 11:51:56','2010-04-19 06:21:56','<a href=\"http://fbflex.wordpress.com/2010/03/24/gtruthlink-taglib-for-optionally-rendering-a-link-based-on-groovy-truth/\"><strong>(based on Tomás Lin’s truthlink)</strong></a>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition> \r\n    <g:link controller:\'controllerName\' action:\'actionName\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTagLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n           if (attrs.keySet().contains(\"action\") || attrs.keySet().contains(\"controller\")) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'controllerName\' action:\'actionName\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','publish','open','open','','test-link','','\nhttp://fbflex.wordpress.com/2010/03/24/gtruthlink-taglib-for-optionally-rendering-a-link-based-on-groovy-truth/','2010-04-19 12:03:31','2010-04-19 06:33:31','',0,'http://www.intelligrape.com/blog/?p=558',0,'post','',1),(559,16,'2010-04-19 10:55:45','2010-04-19 05:25:45','<strong>Test Link </strong>\n(based on Tomás Lin’s truthlink)\n\nThis is useful when one requires link on certain condition.\nInstead of first using condition tag and then tag for link these can be combined into onwe using taglib.\n\n<code>\n\n\ntext\n\n\nor\n\n<a class=\"abc\" style=\"color: #90b8ff;\" href=\"#\">\nText\n</a>\n\n</code>\n\nclass AbcTabLib {\nnamespaces \"abc\";\n\ndef testLink = {attrs, body -&gt;\nString attributes = \'\'\nif (attrs[\'test\']) {\nattrs.remove(\'test\')\nif ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\nout &lt;&lt; g.link(attrs, body)             } else {                 attributes = \"${attrs.collect {k, v -&gt; \" $k=\\\"$v\\\"\" }.join(\'\')}&gt;\"\nout &lt;&lt; \"<a></a>\"\n}\n\n} else {\nout &lt;&lt; body()\n}\n}\n\n}\n\nNow sice the Tag is created condition test and and link can be combined into one\n\n<em>controllerName</em>\'  action:\' <em>actionName</em>\'&gt;\ntext\n\nor\nText','',0,'','inherit','open','open','','558-revision','','','2010-04-19 10:55:45','2010-04-19 05:25:45','',558,'http://www.intelligrape.com/blog/?p=559',0,'revision','',0),(560,11,'2010-04-19 11:37:38','2010-04-19 06:07:38','Recently in one of my project user have the requirement where he can upload the pdf file and its get converted into the image file, that can be used by the user for manipulations.\r\n\r\nAfter looking at here and there finally we find out the imagemagick tool which converts pdf file to image file. Its very easy to use this tool, all you need to do is\r\n\r\nsudo apt-get install imagemagick\r\n\r\nThis tool gives you so many commands that can be used for image manipulation as well.\r\n\r\nFor converting the pdf into image first we stored the file uploaded by the user on the predefined location of file system and then use the simple imagemagick command.\r\n<pre lang=\"groovy\">String command = \"convert ${sourcePath} -resize 2000x2000 ${destinationPath}/${fileName}\"\r\ndef proc = command.execute()\r\nproc.waitFor()\r\n</pre>\r\nAs you can see we make a simple command of imagemagick that takes the path of pdf file i.e; sourcePath and the size of the image file which we need to be in 2000x2000 in our case. The other argument needed was the destinationPath and fileName where the image file would be stored.\r\n\r\nNow use execute() method which will execute the command for you and make the images out of pdf files. Remember you need to use the waitFor() method as well as it make sure the next command after the execute will not get executed until the file are properly stored on the file system because sometimes the file system takes few seconds to convert the file.\r\n\r\nIt also takes care about the multi page pdf files. It will create image for each page.\r\n\r\nI hope my learning in this project will help somebody.\r\n\r\n## Uday Pratap Singh ##\r\n\r\nuday@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Converting pdf file to image file using imagemagick and groovy',0,'','publish','open','open','','converting-pdf-file-to-image-file-using-imagemagick-and-groovy','','','2010-04-19 12:01:37','2010-04-19 06:31:37','',0,'http://www.intelligrape.com/blog/?p=560',0,'post','',0),(561,11,'2010-04-19 11:36:13','2010-04-19 06:06:13','I have recently started using the marvelous plugin Grails function Testing by Marc Palmer (http://www.grails.org/Grails+Functional+Testing).I would like to share few things with you about this plugin.\nThe purpose of testing get defeated if we keep on doing for the same values. The method below let you to do it for the different values each time.\n\n<code>def countryList = byName(’country’)\nint randomIndex=new Random().nextInt(</code><code>countryList.getOptionSize()</code><code>)\nselects[’country’].select countryList.getOption(randomIndex).getValueAttribute()</code>\n\nbyName() retrieve the element from the current page by its name attribute. Throws exception if multiple elements found with same name and null if no element found\nIn above example I am retrieving the select element of current page which has the name attribute ‘country’.\ngetOption() takes the integer as a parameter and return the option element of the current page at index 2\ngetValueAttribute() useful to get what the value need to be passed as params to the server. This method assures that value is passed rather than the name displyed in the list.\n\nI hope this would help some of you.\n\n## Uday Pratap Singh ##\n\nuday@intelligrape.com\n\nhttp://www.IntelliGrape.com/','Retrieving a random Option from HTML DropDown using Grails Functional Testing ',0,'','inherit','open','open','','44-autosave','','','2010-04-19 11:36:13','2010-04-19 06:06:13','',44,'http://www.intelligrape.com/blog/?p=561',0,'revision','',0),(562,11,'2010-04-19 11:36:30','2010-04-19 06:06:30','Recently in one of my project user have the requirement where he can upload the pdf file and its get converted into the image file, that can be used by the user for manipulations.\n\nAfter looking at here and there finally we find out the imagemagick tool which converts pdf file to image file. Its very easy to use this tool, all you need to do is\n\nsudo apt-get install imagemagick\n\nThis tool gives you so many commands that can be used for image manipulation as well.\n\nFor converting the pdf into image first we stored the file uploaded by the user on the predefined location of file system and then use the simple imagemagick command.\n\n<pre>\nString command = \"convert ${sourcePath} -resize 2000x2000 ${destinationPath}/${fileName}\"\ndef proc = command.execute()\nproc.waitFor()\n<pre>\nAs you can see we make a simple command of imagemagick that takes the path of pdf file i.e; sourcePath and the size of the image file which we need to be in 2000x2000 in our case. The other argument needed was the destinationPath and fileName where the image file would be stored.\n\nNow use execute() method which will execute the command for you and make the images out of pdf files. Remember you need to use the waitFor() method as well as it make sure the next command after the execute will not get executed until the file are properly stored on the file system because sometimes the file system takes few seconds to convert the file.\n\nIt also takes care about the multi page pdf files. It will create image for each page.\n\nI hope my learning in this project will somebody.\n\n## Uday Pratap Singh ##\n\nuday@intelligrape.com\n\nhttp://www.IntelliGrape.com/','Converting pdf file to image file using imagemagick and groovy',0,'','inherit','open','open','','560-revision','','','2010-04-19 11:36:30','2010-04-19 06:06:30','',560,'http://www.intelligrape.com/blog/?p=562',0,'revision','',0),(563,11,'2010-04-19 11:37:31','2010-04-19 06:07:31','Recently in one of my project user have the requirement where he can upload the pdf file and its get converted into the image file, that can be used by the user for manipulations.\n\nAfter looking at here and there finally we find out the imagemagick tool which converts pdf file to image file. Its very easy to use this tool, all you need to do is\n\nsudo apt-get install imagemagick\n\nThis tool gives you so many commands that can be used for image manipulation as well.\n\nFor converting the pdf into image first we stored the file uploaded by the user on the predefined location of file system and then use the simple imagemagick command.\n<pre lang=\"groovy\">String command = \"convert ${sourcePath} -resize 2000x2000 ${destinationPath}/${fileName}\"\ndef proc = command.execute()\nproc.waitFor()\n</pre>\nAs you can see we make a simple command of imagemagick that takes the path of pdf file i.e; sourcePath and the size of the image file which we need to be in 2000x2000 in our case. The other argument needed was the destinationPath and fileName where the image file would be stored.\n\nNow use execute() method which will execute the command for you and make the images out of pdf files. Remember you need to use the waitFor() method as well as it make sure the next command after the execute will not get executed until the file are properly stored on the file system because sometimes the file system takes few seconds to convert the file.\n\nIt also takes care about the multi page pdf files. It will create image for each page.\n\nI hope my learning in this project will somebody.\n\n## Uday Pratap Singh ##\n\nuday@intelligrape.com\n\nhttp://www.IntelliGrape.com/','Converting pdf file to image file using imagemagick and groovy',0,'','inherit','open','open','','560-revision-2','','','2010-04-19 11:37:31','2010-04-19 06:07:31','',560,'http://www.intelligrape.com/blog/?p=563',0,'revision','',0),(564,11,'2010-04-19 11:37:38','2010-04-19 06:07:38','Recently in one of my project user have the requirement where he can upload the pdf file and its get converted into the image file, that can be used by the user for manipulations.\r\n\r\nAfter looking at here and there finally we find out the imagemagick tool which converts pdf file to image file. Its very easy to use this tool, all you need to do is\r\n\r\nsudo apt-get install imagemagick\r\n\r\nThis tool gives you so many commands that can be used for image manipulation as well.\r\n\r\nFor converting the pdf into image first we stored the file uploaded by the user on the predefined location of file system and then use the simple imagemagick command.\r\n<pre lang=\"groovy\">String command = \"convert ${sourcePath} -resize 2000x2000 ${destinationPath}/${fileName}\"\r\ndef proc = command.execute()\r\nproc.waitFor()\r\n</pre>\r\nAs you can see we make a simple command of imagemagick that takes the path of pdf file i.e; sourcePath and the size of the image file which we need to be in 2000x2000 in our case. The other argument needed was the destinationPath and fileName where the image file would be stored.\r\n\r\nNow use execute() method which will execute the command for you and make the images out of pdf files. Remember you need to use the waitFor() method as well as it make sure the next command after the execute will not get executed until the file are properly stored on the file system because sometimes the file system takes few seconds to convert the file.\r\n\r\nIt also takes care about the multi page pdf files. It will create image for each page.\r\n\r\nI hope my learning in this project will somebody.\r\n\r\n## Uday Pratap Singh ##\r\n\r\nuday@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Converting pdf file to image file using imagemagick and groovy',0,'','inherit','open','open','','560-revision-3','','','2010-04-19 11:37:38','2010-04-19 06:07:38','',560,'http://www.intelligrape.com/blog/?p=564',0,'revision','',0),(565,16,'2010-04-19 10:56:45','2010-04-19 05:26:45','Test Link \n(based on Tomás Lin’s truthlink)\n\nThis is useful when one requires link on certain condition.\nInstead of first using condition tag and then tag for link these can be combined into onwe using taglib.\n\n<g:if test=${condition}> \n    <g:link controller:\'\' action:\'\'> \n	text \n    </g:link> \n<g:if>\nor\n<g:if test=${condition}>   \n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \n     Text \n   </a> \n<g:if>\n\n\n\nclass AbcTabLib {\nnamespaces \"abc\";\n\n    def testLink = {attrs, body ->\n        String attributes = \'\'\n        if (attrs[\'test\']) {\n            attrs.remove(\'test\')\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\n                out << g.link(attrs, body)\n            } else {\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\n                out << \"<a \" + attributes + body() + \"</a>\"\n            }\n\n        } else {\n            out << body()\n        }\n    }\n\n}\n\n\nNow sice the Tag is created condition test and and link can be combined into one\n\n<abc:testLink test=\"${condition}\" controller:\'\' action:\'\'>\ntext                                        \n</abc:testLink>\n\nor\n\n<g:if test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \n     Text \n<g:if>\n\n\n','',0,'','inherit','open','open','','558-revision-2','','','2010-04-19 10:56:45','2010-04-19 05:26:45','',558,'http://www.intelligrape.com/blog/?p=565',0,'revision','',0),(566,16,'2010-04-19 11:40:48','2010-04-19 06:10:48','(based on Tomás Lin’s truthlink)\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into onwe using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}> \r\n    <g:link controller:\'\' action:\'\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTabLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'\' action:\'\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n<g:if>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-3','','','2010-04-19 11:40:48','2010-04-19 06:10:48','',558,'http://www.intelligrape.com/blog/?p=566',0,'revision','',0),(567,16,'2010-04-19 11:42:52','2010-04-19 06:12:52','<strong>(based on Tomás Lin’s truthlink)</strong>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}> \r\n    <g:link controller:\'\' action:\'\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTabLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'\' action:\'\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n<g:if>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-4','','','2010-04-19 11:42:52','2010-04-19 06:12:52','',558,'http://www.intelligrape.com/blog/?p=567',0,'revision','',0),(568,16,'2010-04-19 11:44:55','2010-04-19 06:14:55','<strong>(based on Tomás Lin’s truthlink)</strong>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}> \r\n    <g:link controller:\'\' action:\'\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTabLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'\' action:\'\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-5','','','2010-04-19 11:44:55','2010-04-19 06:14:55','',558,'http://www.intelligrape.com/blog/?p=568',0,'revision','',0),(569,16,'2010-04-19 11:46:23','2010-04-19 06:16:23','<strong>(based on Tomás Lin’s truthlink)</strong>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}> \r\n    <g:link controller:\'\' action:\'\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTagLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'\' action:\'\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-6','','','2010-04-19 11:46:23','2010-04-19 06:16:23','',558,'http://www.intelligrape.com/blog/?p=569',0,'revision','',0),(570,16,'2010-04-19 11:47:57','2010-04-19 06:17:57','<strong>(based on Tomás Lin’s truthlink)</strong>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${<em>condition</em>}> \r\n    <g:link controller:\'<em>controllerName</em>\' action:\'<em>actionName</em>\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${c<em>ondition</em>}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTagLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${<em>condition</em>}\" controller:\'<em>controllerName</em>\' action:\'<em>actionName</em>\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${<em>condition</em>} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-7','','','2010-04-19 11:47:57','2010-04-19 06:17:57','',558,'http://www.intelligrape.com/blog/?p=570',0,'revision','',0),(571,16,'2010-04-19 11:48:52','2010-04-19 06:18:52','<strong>(based on Tomás Lin’s truthlink)</strong>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${<em>condition</em>}> \r\n    <g:link controller:\'<em>controllerName</em>\' action:\'<em>actionName</em>\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${c<em>ondition</em>}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTagLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n            if ([\"action\",\"controller\",\"url\"] in attrs.keySet()) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${<em>condition</em>}\" controller:\'<em>controllerName</em>\' action:\'<em>actionName</em>\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${<em>condition</em>} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-8','','','2010-04-19 11:48:52','2010-04-19 06:18:52','',558,'http://www.intelligrape.com/blog/?p=571',0,'revision','',0),(572,16,'2010-04-19 11:51:09','2010-04-19 06:21:09','<a href=\"http://fbflex.wordpress.com/2010/03/24/gtruthlink-taglib-for-optionally-rendering-a-link-based-on-groovy-truth/\"><strong>(based on Tomás Lin’s truthlink)</strong></a>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition> \r\n    <g:link controller:\'controllerName\' action:\'actionName\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTagLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n           if (attrs.keySet().contains(\"action\") || attrs.keySet().contains(\"controller\")) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'controllerName\' action:\'actionName\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-9','','','2010-04-19 11:51:09','2010-04-19 06:21:09','',558,'http://www.intelligrape.com/blog/?p=572',0,'revision','',0),(573,20,'2010-04-19 13:28:48','2010-04-19 07:58:48','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form :\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n\r\n<label for=\"firstName\">First Name</label>\r\n<input id=\"firstName\" name=\"entry.0.single\" type=\"text\" />\r\n\r\n<label for=\"lastName\">Last Name</label>\r\n<input id=\"lastName\" name=\"entry.1.single\" type=\"text\" />\r\n\r\n<label for=\"email\">E-mail</label>\r\n<input id=\"email\" name=\"entry.2.single\" type=\"text\" />\r\n\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" />\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','publish','open','open','','google-form-submission','','','2010-04-19 14:18:01','2010-04-19 08:48:01','',0,'http://www.intelligrape.com/blog/?p=573',0,'post','',0),(574,11,'2010-04-19 11:40:25','2010-04-19 06:10:25','Recently in one of my project user have the requirement where he can upload the pdf file and its get converted into the image file, that can be used by the user for manipulations.\r\n\r\nAfter looking at here and there finally we find out the imagemagick tool which converts pdf file to image file. Its very easy to use this tool, all you need to do is\r\n\r\nsudo apt-get install imagemagick\r\n\r\nThis tool gives you so many commands that can be used for image manipulation as well.\r\n\r\nFor converting the pdf into image first we stored the file uploaded by the user on the predefined location of file system and then use the simple imagemagick command.\r\n<pre lang=\"groovy\">String command = \"convert ${sourcePath} -resize 2000x2000 ${destinationPath}/${fileName}\"\r\ndef proc = command.execute()\r\nproc.waitFor()\r\n</pre>\r\nAs you can see we make a simple command of imagemagick that takes the path of pdf file i.e; sourcePath and the size of the image file which we need to be in 2000x2000 in our case. The other argument needed was the destinationPath and fileName where the image file would be stored.\r\n\r\nNow use execute() method which will execute the command for you and make the images out of pdf files. Remember you need to use the waitFor() method as well as it make sure the next command after the execute will not get executed until the file are properly stored on the file system because sometimes the file system takes few seconds to convert the file.\r\n\r\nIt also takes care about the multi page pdf files. It will create image for each page.\r\n\r\nI hope my learning in this project will somebody.\r\n\r\n## Uday Pratap Singh ##\r\n\r\nuday@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Converting pdf file to image file using imagemagick and groovy',0,'','inherit','open','open','','560-revision-4','','','2010-04-19 11:40:25','2010-04-19 06:10:25','',560,'http://www.intelligrape.com/blog/?p=574',0,'revision','',0),(575,11,'2010-04-19 11:51:56','2010-04-19 06:21:56','<a href=\"http://fbflex.wordpress.com/2010/03/24/gtruthlink-taglib-for-optionally-rendering-a-link-based-on-groovy-truth/\"><strong>(based on Tomás Lin’s truthlink)</strong></a>\r\n\r\nThis is useful when one requires link on certain condition.\r\nInstead of first using condition tag and then tag for link these can be combined into one using taglib.\r\n\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition> \r\n    <g:link controller:\'controllerName\' action:\'actionName\'> \r\n	text \r\n    </g:link> \r\n<g:if>\r\n</pre>\r\nor\r\n<pre lang=\"groovy\">\r\n<g:if test=${condition}>   \r\n   <a href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n   </a> \r\n<g:if>\r\n</pre>\r\n\r\nOther way of doing this is by using taglib.\r\n\r\n<pre lang=\"groovy\">\r\nclass AbcTagLib {\r\nnamespaces \"abc\";\r\n\r\n    def testLink = {attrs, body ->\r\n        String attributes = \'\'\r\n        if (attrs[\'test\']) {\r\n            attrs.remove(\'test\')\r\n           if (attrs.keySet().contains(\"action\") || attrs.keySet().contains(\"controller\")) {\r\n                out << g.link(attrs, body)\r\n            } else {\r\n                attributes = \"${attrs.collect {k, v -> \" $k=\\\"$v\\\"\" }.join(\'\')}>\"\r\n                out << \"<a \" + attributes + body() + \"</a>\"\r\n            }\r\n\r\n        } else {\r\n            out << body()\r\n        }\r\n    }\r\n}\r\n</pre>\r\n\r\nNow since the Tag is created condition test and and link can be combined into one\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=\"${condition}\" controller:\'controllerName\' action:\'actionName\'>\r\ntext                                        \r\n</abc:testLink>\r\n</pre>\r\n\r\nor\r\n\r\n<pre lang=\"groovy\">\r\n<abc:testLink test=${condition} href=\"#\" class=\"abc\" style=\"color:#90B8FF;\"> \r\n     Text \r\n</abc:testLink>\r\n</pre>\r\n\r\n_____________________\r\nHitesh Bhatia\r\nhitesh@intelligrape.com\r\n_____________________\r\n','Test Link ',0,'','inherit','open','open','','558-revision-10','','','2010-04-19 11:51:56','2010-04-19 06:21:56','',558,'http://www.intelligrape.com/blog/?p=575',0,'revision','',0),(576,20,'2010-04-19 13:22:50','2010-04-19 07:52:50','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\n\nSteps to create google form and embed your own form and submit to google form by simply following these step:\n<ol>\n	<li> go to google docs, click create new -&gt; form</li>\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\n</ol>\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\n\nSteps to submit your form to google into your project :\n<ol>\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\n	<li>We can also use iframe by setting the target attribute of the form</li>\n</ol>\nExample :\n\n&lt;pre lang=\"groovy\"&gt;\n\n&lt;/pre&gt;','Google Form Submission',0,'','inherit','open','open','','573-revision','','','2010-04-19 13:22:50','2010-04-19 07:52:50','',573,'http://www.intelligrape.com/blog/?p=576',0,'revision','',0),(591,20,'2010-04-19 13:51:35','2010-04-19 08:21:35','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form :\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n\r\n<label for=\"firstName\">First Name</label>\r\n<input id=\"firstName\" name=\"entry.0.single\" type=\"text\" />\r\n\r\n<label for=\"lastName\">Last Name</label>\r\n<input id=\"lastName\" name=\"entry.1.single\" type=\"text\" />\r\n\r\n<label for=\"email\">E-mail</label>\r\n<input id=\"email\" name=\"entry.2.single\" type=\"text\" />\r\n\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" />\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-15','','','2010-04-19 13:51:35','2010-04-19 08:21:35','',573,'http://www.intelligrape.com/blog/?p=591',0,'revision','',0),(581,20,'2010-04-19 13:28:19','2010-04-19 07:58:19','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<script type=\"text/javascript\">var submitted_email=false;</script>\r\n<iframe onload=\"if(submitted_email){alert(\'submitted successfully\')}\" style=\"display: none;\" id=\"hidden_iframe_payment\" name=\"hidden_iframe_payment\"></iframe>\r\n<form method=\"post\" name=\"detailForm\" id=\"detailForm\" onsubmit=\"submitted_email = true;\" target=\"hidden_iframe_payment\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&ifq\"  style=\"display: block; float: left; width: 440px;\">\r\n      <input type=\"hidden\" value=\"0\" name=\"pageNumber\">\r\n      <input type=\"hidden\" value=\"\" name=\"backupCache\">\r\n      <table>\r\n      <tr>\r\n      <td><label for=\"firstName\">First Name</label></td>\r\n      <td colspan=\"2\"><input type=\"text\" name=\"entry.0.single\" class=\"required email\" id=\"firstName\"/></td>\r\n      </tr>\r\n      <tr>\r\n      <td><label for=\"lastName\">First Name</label></td>\r\n      <td colspan=\"2\"><input type=\"text\" name=\"entry.1.single\" class=\"required email\" id=\"lastName\"/></td>\r\n      </tr>\r\n      <tr>\r\n      <td><label for=\"email\">E-mail</label></td>\r\n      <td colspan=\"2\"><input type=\"text\" name=\"entry.2.single\" class=\"required email\" id=\"email\"/></td>\r\n      </tr>\r\n      <tr>\r\n      <td colspan=\"3\"><input type=\"submit\" border=\"0\" id=\"detailsSubmit\" name=\"submit\" value=\"Submit\"></td>\r\n      </tr>\r\n      </table>\r\n</form>\r\n</pre>\r\n</blockquote>\r\n','Google Form Submission',0,'','inherit','open','open','','573-revision-6','','','2010-04-19 13:28:19','2010-04-19 07:58:19','',573,'http://www.intelligrape.com/blog/?p=581',0,'revision','',0),(578,20,'2010-04-19 13:25:19','2010-04-19 07:55:19','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<script type=\"text/javascript\">var submitted_email=false;</script>\r\n            <iframe onload=\"if(submitted_email){alert(\'submitted successfully\')}\" style=\"display: none;\" id=\"hidden_iframe_payment\" name=\"hidden_iframe_payment\"></iframe>\r\n			<form method=\"post\" name=\"detailForm\" id=\"detailForm\" onsubmit=\"submitted_email = true;\" target=\"hidden_iframe_payment\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&ifq\"  style=\"display: block; float: left; width: 440px;\">\r\n                <input type=\"hidden\" value=\"0\" name=\"pageNumber\">\r\n                <input type=\"hidden\" value=\"\" name=\"backupCache\">\r\n                <table>\r\n                  <tr>\r\n                  <td><label for=\"firstName\">First Name</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.0.single\" class=\"required email\" id=\"firstName\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td><label for=\"lastName\">First Name</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.1.single\" class=\"required email\" id=\"lastName\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td><label for=\"email\">E-mail</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.2.single\" class=\"required email\" id=\"email\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td colspan=\"3\"><input type=\"submit\" border=\"0\" id=\"detailsSubmit\" name=\"submit\" value=\"Submit\"></td>\r\n                  </tr>\r\n                </table>\r\n            </form>\r\n</pre>\r\n</blockquote>\r\n','Google Form Submission',0,'','inherit','open','open','','573-revision-3','','','2010-04-19 13:25:19','2010-04-19 07:55:19','',573,'http://www.intelligrape.com/blog/?p=578',0,'revision','',0),(577,20,'2010-04-19 13:23:50','2010-04-19 07:53:50','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\n\nSteps to create google form and embed your own form and submit to google form by simply following these step:\n<ol>\n	<li> go to google docs, click create new -&gt; form</li>\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\n</ol>\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\n\nSteps to submit your form to google into your project :\n<ol>\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\n	<li>We can also use iframe by setting the target attribute of the form</li>\n</ol>\nExample :\n\ne lang=\"groovy\"&gt;\n<div id=\"_mcePaste\"></div>\n&lt;/pre&gt;','Google Form Submission',0,'','inherit','open','open','','573-revision-2','','','2010-04-19 13:23:50','2010-04-19 07:53:50','',573,'http://www.intelligrape.com/blog/?p=577',0,'revision','',0),(579,20,'2010-04-19 13:26:40','2010-04-19 07:56:40','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<script type=\"text/javascript\">var submitted_email=false;</script>\r\n    <iframe onload=\"if(submitted_email){alert(\'submitted successfully\')}\" style=\"display: none;\" id=\"hidden_iframe_payment\" name=\"hidden_iframe_payment\"></iframe>\r\n	<form method=\"post\" name=\"detailForm\" id=\"detailForm\" onsubmit=\"submitted_email = true;\" target=\"hidden_iframe_payment\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&ifq\"  style=\"display: block; float: left; width: 440px;\">\r\n                <input type=\"hidden\" value=\"0\" name=\"pageNumber\">\r\n                <input type=\"hidden\" value=\"\" name=\"backupCache\">\r\n                <table>\r\n                  <tr>\r\n                  <td><label for=\"firstName\">First Name</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.0.single\" class=\"required email\" id=\"firstName\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td><label for=\"lastName\">First Name</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.1.single\" class=\"required email\" id=\"lastName\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td><label for=\"email\">E-mail</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.2.single\" class=\"required email\" id=\"email\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td colspan=\"3\"><input type=\"submit\" border=\"0\" id=\"detailsSubmit\" name=\"submit\" value=\"Submit\"></td>\r\n                  </tr>\r\n                </table>\r\n</form>\r\n</pre>\r\n</blockquote>\r\n','Google Form Submission',0,'','inherit','open','open','','573-revision-4','','','2010-04-19 13:26:40','2010-04-19 07:56:40','',573,'http://www.intelligrape.com/blog/?p=579',0,'revision','',0),(580,20,'2010-04-19 13:26:43','2010-04-19 07:56:43','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<script type=\"text/javascript\">var submitted_email=false;</script>\r\n    <iframe onload=\"if(submitted_email){alert(\'submitted successfully\')}\" style=\"display: none;\" id=\"hidden_iframe_payment\" name=\"hidden_iframe_payment\"></iframe>\r\n	<form method=\"post\" name=\"detailForm\" id=\"detailForm\" onsubmit=\"submitted_email = true;\" target=\"hidden_iframe_payment\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&ifq\"  style=\"display: block; float: left; width: 440px;\">\r\n                <input type=\"hidden\" value=\"0\" name=\"pageNumber\">\r\n                <input type=\"hidden\" value=\"\" name=\"backupCache\">\r\n                <table>\r\n                  <tr>\r\n                  <td><label for=\"firstName\">First Name</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.0.single\" class=\"required email\" id=\"firstName\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td><label for=\"lastName\">First Name</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.1.single\" class=\"required email\" id=\"lastName\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td><label for=\"email\">E-mail</label></td>\r\n				  <td colspan=\"2\"><input type=\"text\" name=\"entry.2.single\" class=\"required email\" id=\"email\"/></td>\r\n                  </tr>\r\n                  <tr>\r\n                  <td colspan=\"3\"><input type=\"submit\" border=\"0\" id=\"detailsSubmit\" name=\"submit\" value=\"Submit\"></td>\r\n                  </tr>\r\n                </table>\r\n</form>\r\n</pre>\r\n</blockquote>\r\n','Google Form Submission',0,'','inherit','open','open','','573-revision-5','','','2010-04-19 13:26:43','2010-04-19 07:56:43','',573,'http://www.intelligrape.com/blog/?p=580',0,'revision','',0),(583,20,'2010-04-19 13:30:10','2010-04-19 08:00:10','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n      <input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n      <input name=\"backupCache\" type=\"hidden\" />\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td><label for=\"firstName\">First Name</label></td>\r\n<td colspan=\"2\"><input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"lastName\">First Name</label></td>\r\n<td colspan=\"2\"><input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"email\">E-mail</label></td>\r\n<td colspan=\"2\"><input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"3\"><input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n~Tarun~</form></pre>\r\n</blockquote>','Google Form Submission',0,'','inherit','open','open','','573-revision-8','','','2010-04-19 13:30:10','2010-04-19 08:00:10','',573,'http://www.intelligrape.com/blog/?p=583',0,'revision','',0),(582,20,'2010-04-19 13:28:48','2010-04-19 07:58:48','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<script type=\"text/javascript\">var submitted_email=false;</script>\r\n<iframe onload=\"if(submitted_email){alert(\'submitted successfully\')}\" style=\"display: none;\" id=\"hidden_iframe_payment\" name=\"hidden_iframe_payment\"></iframe>\r\n<form method=\"post\" name=\"detailForm\" id=\"detailForm\" onsubmit=\"submitted_email = true;\" target=\"hidden_iframe_payment\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&ifq\"  style=\"display: block; float: left; width: 440px;\">\r\n      <input type=\"hidden\" value=\"0\" name=\"pageNumber\">\r\n      <input type=\"hidden\" value=\"\" name=\"backupCache\">\r\n      <table>\r\n      <tr>\r\n      <td><label for=\"firstName\">First Name</label></td>\r\n      <td colspan=\"2\"><input type=\"text\" name=\"entry.0.single\" class=\"required email\" id=\"firstName\"/></td>\r\n      </tr>\r\n      <tr>\r\n      <td><label for=\"lastName\">First Name</label></td>\r\n      <td colspan=\"2\"><input type=\"text\" name=\"entry.1.single\" class=\"required email\" id=\"lastName\"/></td>\r\n      </tr>\r\n      <tr>\r\n      <td><label for=\"email\">E-mail</label></td>\r\n      <td colspan=\"2\"><input type=\"text\" name=\"entry.2.single\" class=\"required email\" id=\"email\"/></td>\r\n      </tr>\r\n      <tr>\r\n      <td colspan=\"3\"><input type=\"submit\" border=\"0\" id=\"detailsSubmit\" name=\"submit\" value=\"Submit\"></td>\r\n      </tr>\r\n      </table>\r\n</form>\r\n</pre>\r\n</blockquote>\r\n','Google Form Submission',0,'','inherit','open','open','','573-revision-7','','','2010-04-19 13:28:48','2010-04-19 07:58:48','',573,'http://www.intelligrape.com/blog/?p=582',0,'revision','',0),(584,20,'2010-04-19 13:48:36','2010-04-19 08:18:36','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\n\nSteps to create google form :\n<ol>\n	<li> go to google docs, click create new -&gt; form</li>\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\n</ol>\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\n\nSteps to submit your form to google into your project :\n<ol>\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\n	<li>We can also use iframe by setting the target attribute of the form</li>\n</ol>\nExample:\n<blockquote>\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\n<input name=\"backupCache\" type=\"hidden\" />\n\n<label for=\"firstName\">First Name</label>\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" /></td>\n\n<label for=\"lastName\">First Name</label></td>\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" /></td>\n\n<label for=\"email\">E-mail</label>\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" /></td>\n\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" /></td>\n</form></pre>\n</blockquote>\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-autosave','','','2010-04-19 13:48:36','2010-04-19 08:18:36','',573,'http://www.intelligrape.com/blog/?p=584',0,'revision','',0),(587,20,'2010-04-19 13:44:24','2010-04-19 08:14:24','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form :\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td><label for=\"firstName\">First Name</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"lastName\">First Name</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"email\">E-mail</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"3\">\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-11','','','2010-04-19 13:44:24','2010-04-19 08:14:24','',573,'http://www.intelligrape.com/blog/?p=587',0,'revision','',0),(586,20,'2010-04-19 13:42:34','2010-04-19 08:12:34','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td><label for=\"firstName\">First Name</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"lastName\">First Name</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"email\">E-mail</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"3\">\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-10','','','2010-04-19 13:42:34','2010-04-19 08:12:34','',573,'http://www.intelligrape.com/blog/?p=586',0,'revision','',0),(585,20,'2010-04-19 13:31:08','2010-04-19 08:01:08','Recently in my project i used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form and embed your own form and submit to google form by simply following these step:\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td><label for=\"firstName\">First Name</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"lastName\">First Name</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td><label for=\"email\">E-mail</label></td>\r\n<td colspan=\"2\">\r\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" /></td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"3\">\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n</form></pre>\r\n</blockquote>\r\n\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-9','','','2010-04-19 13:31:08','2010-04-19 08:01:08','',573,'http://www.intelligrape.com/blog/?p=585',0,'revision','',0),(588,20,'2010-04-19 13:49:18','2010-04-19 08:19:18','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form :\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n\r\n<label for=\"firstName\">First Name</label>\r\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" />\r\n\r\n<label for=\"lastName\">First Name</label>\r\n\r\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" />\r\n\r\n<label for=\"email\">E-mail</label>\r\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" />\r\n\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" />\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-12','','','2010-04-19 13:49:18','2010-04-19 08:19:18','',573,'http://www.intelligrape.com/blog/?p=588',0,'revision','',0),(589,20,'2010-04-19 13:49:19','2010-04-19 08:19:19','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form :\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n\r\n<label for=\"firstName\">First Name</label>\r\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" />\r\n\r\n<label for=\"lastName\">First Name</label>\r\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" />\r\n\r\n<label for=\"email\">E-mail</label>\r\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" />\r\n\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" />\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-13','','','2010-04-19 13:49:19','2010-04-19 08:19:19','',573,'http://www.intelligrape.com/blog/?p=589',0,'revision','',0),(590,20,'2010-04-19 13:50:16','2010-04-19 08:20:16','Recently in my project I used google form submission for the email subscription\'s and find it very handy for various purpose.\r\n\r\nSteps to create google form :\r\n<ol>\r\n	<li> go to google docs, click create new -&gt; form</li>\r\n	<li>Here you can additem/field like text, paragraphtext, multi-select etc as per your project need.</li>\r\n	<li>Save that form by clicking save now, it will generate the spreadsheet where data is being submitted by form.</li>\r\n</ol>\r\nAfter performing above 3 steps your form is ready to use and integrate/embed into your project.\r\n\r\nSteps to submit your form to google into your project :\r\n<ol>\r\n	<li>In form edit window, below you can see a view form link. click on it to view form.</li>\r\n	<li>Now from the souce code of the form simply copy url from action attribute of form tag and paste it in your form action attribute.</li>\r\n	<li>The url look like this action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\"</li>\r\n	<li>and set the field\'s name into your form to the entry.0.single or entry.1.single etc. respective to the form name in google form.</li>\r\n	<li>We can also use iframe by setting the target attribute of the form</li>\r\n</ol>\r\nExample:\r\n<blockquote>\r\n<pre lang=\"groovy\"><script type=\"text/javascript\"><!--mce:0--></script>\r\n<form id=\"detailForm\" style=\"display: block; float: left; width: 440px;\" action=\"http://spreadsheets.google.com/formResponse?formkey=dHFBbWdtRTRXb0tyMlJyTERteVFwemc6MQ&amp;ifq\" method=\"post\">\r\n<input name=\"pageNumber\" type=\"hidden\" value=\"0\" />\r\n<input name=\"backupCache\" type=\"hidden\" />\r\n\r\n<label for=\"firstName\">First Name</label>\r\n<input id=\"firstName\" class=\"required email\" name=\"entry.0.single\" type=\"text\" />\r\n\r\n<label for=\"lastName\">Last Name</label>\r\n<input id=\"lastName\" class=\"required email\" name=\"entry.1.single\" type=\"text\" />\r\n\r\n<label for=\"email\">E-mail</label>\r\n<input id=\"email\" class=\"required email\" name=\"entry.2.single\" type=\"text\" />\r\n\r\n<input id=\"detailsSubmit\" name=\"submit\" type=\"submit\" value=\"Submit\" />\r\n</form></pre>\r\n</blockquote>\r\n~Tarun Pareek~','Google Form Submission',0,'','inherit','open','open','','573-revision-14','','','2010-04-19 13:50:16','2010-04-19 08:20:16','',573,'http://www.intelligrape.com/blog/?p=590',0,'revision','',0),(592,7,'2010-04-23 13:51:15','2010-04-23 08:21:15','Hi Friends,\r\n\r\nI needed to take the backup and restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands but with table names passed as parameters and that worked.\r\n<blockquote>\r\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 > /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\r\n\r\nTo restore the table(s) back, we used the following command\r\n<blockquote>\r\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\r\n\r\nmysql> source /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nBoth tables were created in my_database_2.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Backup & Restore MySql Database Table(s)',0,'','publish','open','open','','592','','\nhttp://www.intelligrape.com/blog/?p=46','2010-04-23 14:36:04','2010-04-23 09:06:04','',0,'http://www.intelligrape.com/blog/?p=592',0,'post','',1),(593,7,'2010-04-23 13:45:13','2010-04-23 08:15:13','Hi Friends,\n\nI needed take the backup and to restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking dump of the database and to restore the database http://www.intelligrape.com/blog/?p=46. So I tried with the same commands with table names passed as parameters and it worked.\n<blockquote>\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 &gt; /home/amit/tablesDump.sql;</pre>\n</blockquote>\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\n\nTo restore the table(s) back, we used the following command\n<blockquote>\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\n\nmysql&gt; source /home/amit/tablesDump.sql;</pre>\n</blockquote>\nBoth tables were created in my_database_2.\n\nHope this helped.\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','',0,'','inherit','open','open','','592-revision','','','2010-04-23 13:45:13','2010-04-23 08:15:13','',592,'http://www.intelligrape.com/blog/?p=593',0,'revision','',0),(594,7,'2010-04-23 13:46:14','2010-04-23 08:16:14','Hi Friends,\n\nI needed take the backup and to restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands with table names passed as parameters and it worked.\n<blockquote>\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 &gt; /home/amit/tablesDump.sql;</pre>\n</blockquote>\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\n\nTo restore the table(s) back, we used the following command\n<blockquote>\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\n\nmysql&gt; source /home/amit/tablesDump.sql;</pre>\n</blockquote>\nBoth tables were created in my_database_2.\n\nHope this helped.\n\nCheers!\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','',0,'','inherit','open','open','','592-revision-2','','','2010-04-23 13:46:14','2010-04-23 08:16:14','',592,'http://www.intelligrape.com/blog/?p=594',0,'revision','',0),(595,7,'2010-04-23 13:47:05','2010-04-23 08:17:05','Hi Friends,\r\n\r\nI needed to take the backup and to restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands with table names passed as parameters and it worked.\r\n<blockquote>\r\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 > /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\r\n\r\nTo restore the table(s) back, we used the following command\r\n<blockquote>\r\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\r\n\r\nmysql> source /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nBoth tables were created in my_database_2.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','',0,'','inherit','open','open','','592-revision-3','','','2010-04-23 13:47:05','2010-04-23 08:17:05','',592,'http://www.intelligrape.com/blog/?p=595',0,'revision','',0),(597,7,'2010-04-23 13:49:40','2010-04-23 08:19:40','Hi Friends,\r\n\r\nI needed to take the backup and to restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands with table names passed as parameters and it worked.\r\n<blockquote>\r\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 > /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\r\n\r\nTo restore the table(s) back, we used the following command\r\n<blockquote>\r\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\r\n\r\nmysql> source /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nBoth tables were created in my_database_2.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','',0,'','inherit','open','open','','592-revision-5','','','2010-04-23 13:49:40','2010-04-23 08:19:40','',592,'http://www.intelligrape.com/blog/?p=597',0,'revision','',0),(596,7,'2010-04-23 13:48:36','2010-04-23 08:18:36','Hi Friends,\r\n\r\nI needed to take the backup and to restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands with table names passed as parameters and it worked.\r\n<blockquote>\r\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 > /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\r\n\r\nTo restore the table(s) back, we used the following command\r\n<blockquote>\r\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\r\nEnter password: \r\nReading table information for completion of table and column names\r\nYou can turn off this feature to get a quicker startup with -A\r\n\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 92\r\nServer version: 5.1.37-1ubuntu5.1 (Ubuntu)\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current input statement.\r\n\r\nmysql> source /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nBoth tables were created in my_database_2.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','',0,'','inherit','open','open','','592-revision-4','','','2010-04-23 13:48:36','2010-04-23 08:18:36','',592,'http://www.intelligrape.com/blog/?p=596',0,'revision','',0),(598,14,'2010-04-28 18:21:45','2010-04-28 12:51:45','Hi Friends,\r\n\r\nI needed to take the backup and restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands but with table names passed as parameters and that worked.\r\n<blockquote>\r\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 > /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\r\n\r\nTo restore the table(s) back, we used the following command\r\n<blockquote>\r\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\r\n\r\nmysql> source /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nBoth tables were created in my_database_2.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Backup & Restore MySql Database Table(s)',0,'','inherit','open','open','','592-autosave','','','2010-04-28 18:21:45','2010-04-28 12:51:45','',592,'http://www.intelligrape.com/blog/?p=598',0,'revision','',0),(599,7,'2010-04-23 13:51:15','2010-04-23 08:21:15','Hi Friends,\r\n\r\nI needed to take the backup and restore the selected table(s) of mysql database. And I found Gaurav Chauhan\'s blog on taking <a title=\"dump\" href=\"http://www.intelligrape.com/blog/?tag=dumping-mysql-database\">dump</a> of the database and to<a title=\"restore\" href=\"http://www.intelligrape.com/blog/?p=46\"> restore</a> the database. So I tried with the same commands but with table names passed as parameters and that worked.\r\n<blockquote>\r\n<pre lang=\"groovy\">mysqldump -u root -p my_database Table1 Table2 > /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nAnd the file the dump of Table1 and Table2 got created at /home/amit/tablesDump.sql.\r\n\r\nTo restore the table(s) back, we used the following command\r\n<blockquote>\r\n<pre lang=\"groovy\">mysql -u root -p my_database_2  //First we need to login to mysql\r\n\r\nmysql> source /home/amit/tablesDump.sql;</pre>\r\n</blockquote>\r\nBoth tables were created in my_database_2.\r\n\r\nHope this helped.\r\n\r\nCheers!\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','',0,'','inherit','open','open','','592-revision-6','','','2010-04-23 13:51:15','2010-04-23 08:21:15','',592,'http://www.intelligrape.com/blog/?p=599',0,'revision','',0),(600,19,'2010-04-27 13:01:11','2010-04-27 07:31:11','Hi,\r\nIn one of my project i need to read message from message bundle in functional test cases. Such that whenever the message or label changes, we can just change it in message.properties and hence avoiding the test to fail.\r\n\r\nTo achieve so, i wrote the following code in my test file and it worked for me.\r\n <pre lang=\"groovy\"> \r\n    // to get the message source bean\r\n    def messageSource = ConfigurationHolder.config.applicationContext.getBean(\"messageSource\")   \r\n    Locale locale = new Locale(\'en\', \'US\')\r\n    Object[]  ARGS_EMPTY = [].toArray()       // empty array -- when we don\'t want to pass any arguments to message\r\n    Object[]  ARGS_WITH_VALUES = [].toArray()  // array of arguments\r\n\r\n\r\n// method to get message from message bean\r\n\r\nString getMessage(String key, def targetArgs = ARGS_EMPTY) {\r\n        def keyValue = messageSource.resolveCode(key, locale)\r\n        return keyValue?.format(targetArgs)\r\n    }\r\n\r\n</pre> \r\n\r\nSo wherever i needed the message for assertion , i simply called the method getMessage(), which i have defined above.\r\n\r\neg:-\r\n<pre lang=\"groovy\">\r\n\r\n// message with arguments\r\n ARGS_WITH_VALUES = [\"${value1}\",\"${value2}\"]\r\n assertContentContains getMessage(\'default.create.message\', ARGS_WITH_VALUES)\r\n         \r\n// message withour arguments\r\n assertContentContains getMessage(\'default.create.message\')\r\n\r\n</pre>\r\n\r\nHope you find it useful.\r\n\r\n\r\n-- \r\nRegards\r\nVishal \r\nvishal [at] intelligrape.com','Reading messages from message bean in functional tests',0,'','publish','open','open','','reading-messages-from-message-bean-in-functional-tests','','','2010-04-27 13:01:11','2010-04-27 07:31:11','',0,'http://www.intelligrape.com/blog/?p=600',0,'post','',0),(601,19,'2010-04-27 12:56:49','2010-04-27 07:26:49','Hi,\nIn one of my project i need to read message from message bundle in functional test cases. Such that whenever the message or label changes, we can just change it in message.properties and hence avoiding the test to fail.\n\nTo achieve so, i wrote the following code in my test file and it worked for me.\n <pre lang=\"groovy\"> \n    // to get the message source bean\n    def messageSource = ConfigurationHolder.config.applicationContext.getBean(\"messageSource\")   \n    Locale locale = new Locale(\'en\', \'US\')\n    Object[]  ARGS_EMPTY = [].toArray()                // empty array -- when we don\'t want to pass any arguments to message\n    Object[]  ARGS_WITH_VALUES = [].toArray()  // array of arguments\n\n\n// method to get message from message bean\n\nString getMessage(String key, def targetArgs = ARGS_EMPTY) {\n        def keyValue = messageSource.resolveCode(key, locale)\n        return keyValue?.format(targetArgs)\n    }\n\n</pre> \n\nSo wherever i needed the message for assertion , i simply called the method getMessage(), which i have defined below.\n\neg:-\n<pre lang=\"groovy\">\n\n// message with arguments\n ARGS_WITH_VALUES = [\"${value1}\",\"${value2}\"]\n assertContentContains getMessage(\'default.create.message\', ARGS_WITH_VALUES)\n         \n// message withour arguments\n assertContentContains getMessage(\'default.create.message\')\n\n</pre>\n\nHope you find it useful.\n\n\n-- \nRegards\nVishal \nvishal[at]','',0,'','inherit','open','open','','600-revision','','','2010-04-27 12:56:49','2010-04-27 07:26:49','',600,'http://www.intelligrape.com/blog/?p=601',0,'revision','',0),(602,19,'2010-04-27 12:57:49','2010-04-27 07:27:49','Hi,\nIn one of my project i need to read message from message bundle in functional test cases. Such that whenever the message or label changes, we can just change it in message.properties and hence avoiding the test to fail.\n\nTo achieve so, i wrote the following code in my test file and it worked for me.\n <pre lang=\"groovy\"> \n    // to get the message source bean\n    def messageSource = ConfigurationHolder.config.applicationContext.getBean(\"messageSource\")   \n    Locale locale = new Locale(\'en\', \'US\')\n    Object[]  ARGS_EMPTY = [].toArray()                // empty array -- when we don\'t want to pass any arguments to message\n    Object[]  ARGS_WITH_VALUES = [].toArray()  // array of arguments\n\n\n// method to get message from message bean\n\nString getMessage(String key, def targetArgs = ARGS_EMPTY) {\n        def keyValue = messageSource.resolveCode(key, locale)\n        return keyValue?.format(targetArgs)\n    }\n\n</pre> \n\nSo wherever i needed the message for assertion , i simply called the method getMessage(), which i have defined below.\n\neg:-\n<pre lang=\"groovy\">\n\n// message with arguments\n ARGS_WITH_VALUES = [\"${value1}\",\"${value2}\"]\n assertContentContains getMessage(\'default.create.message\', ARGS_WITH_VALUES)\n         \n// message withour arguments\n assertContentContains getMessage(\'default.create.message\')\n\n</pre>\n\nHope you find it useful.\n\n\n-- \nRegards\nVishal \nvishal [at] intelligrape.com','Reading messages from message bean in functional tests',0,'','inherit','open','open','','600-revision-2','','','2010-04-27 12:57:49','2010-04-27 07:27:49','',600,'http://www.intelligrape.com/blog/?p=602',0,'revision','',0),(603,19,'2010-04-27 12:58:56','2010-04-27 07:28:56','Hi,\r\nIn one of my project i need to read message from message bundle in functional test cases. Such that whenever the message or label changes, we can just change it in message.properties and hence avoiding the test to fail.\r\n\r\nTo achieve so, i wrote the following code in my test file and it worked for me.\r\n <pre lang=\"groovy\"> \r\n    // to get the message source bean\r\n    def messageSource = ConfigurationHolder.config.applicationContext.getBean(\"messageSource\")   \r\n    Locale locale = new Locale(\'en\', \'US\')\r\n    Object[]  ARGS_EMPTY = [].toArray()       // empty array -- when we don\'t want to pass any arguments to message\r\n    Object[]  ARGS_WITH_VALUES = [].toArray()  // array of arguments\r\n\r\n\r\n// method to get message from message bean\r\n\r\nString getMessage(String key, def targetArgs = ARGS_EMPTY) {\r\n        def keyValue = messageSource.resolveCode(key, locale)\r\n        return keyValue?.format(targetArgs)\r\n    }\r\n\r\n</pre> \r\n\r\nSo wherever i needed the message for assertion , i simply called the method getMessage(), which i have defined above.\r\n\r\neg:-\r\n<pre lang=\"groovy\">\r\n\r\n// message with arguments\r\n ARGS_WITH_VALUES = [\"${value1}\",\"${value2}\"]\r\n assertContentContains getMessage(\'default.create.message\', ARGS_WITH_VALUES)\r\n         \r\n// message withour arguments\r\n assertContentContains getMessage(\'default.create.message\')\r\n\r\n</pre>\r\n\r\nHope you find it useful.\r\n\r\n\r\n-- \r\nRegards\r\nVishal \r\nvishal [at] intelligrape.com','Reading messages from message bean in functional tests',0,'','inherit','open','open','','600-revision-3','','','2010-04-27 12:58:56','2010-04-27 07:28:56','',600,'http://www.intelligrape.com/blog/?p=603',0,'revision','',0),(604,14,'2010-04-28 16:44:50','2010-04-28 11:14:50','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\r\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\r\n\r\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\r\n\r\nTo generate XML corresponding to a domain object use\r\n<blockquote>\r\n<pre lang=\"groovy\">render \"object\" as XML</pre>\r\n</blockquote>\r\n\r\nTo get a customized XML from an object or multiple object we need to use the groovy markup builder\r\n\r\n<blockquote><pre lang=\"groovy\">render(contentType:\"text/xml\"){\r\n                 bookId(id:book?.id){\r\n                     bookNumber(book?.bookNumber)\r\n                     chapters(){\r\n                         for(chapterInstance in book?.chapters) {\r\n                             chapter(id:chapterInstance?.id){\r\n                                 title(chapterInstance?.title)\r\n                                }\r\n                             }\r\n                         }\r\n                   }\r\n             }\r\n</pre></blockquote>\r\nThis will generate the following XML\r\n<blockquote><pre lang=\"groovy\">\r\n<book id=\"1\">\r\n     <bookNumber>1001</bookNumber>\r\n  <chapters>\r\n        <chapter id=\"1\">\r\n                <title>Groovy</title>\r\n           </chapter>\r\n            <chapter id=\"2\">\r\n                <title>Grails</title>\r\n           </chapter>\r\n       .\r\n       .\r\n       .\r\n      </chapters>\r\n  </book>\r\n</pre></blockquote>\r\n\r\nNow to send data to server using XML we use post or put method. We generally use POST to post new data and PUT to update existing data on the server. \r\nTo post data to the server I am  simulating a client outside a browser (its a REST call we need to send just XML, so we must not need a browser), also to access secured services on  the server(here security is provided by HTTP basic authorization) we must send authorization in the header of the HTTP request. Following groovy code simulates a very basic client sending data to server using POST.\r\n<blockquote><pre lang=\"groovy\">\r\n\r\ndef xml = \"\"\"<chapter>\r\n<title>Java</title>\r\n</chapter>\"\"\"\r\n                    def url = new URL(\"url\")  // URL location of your application(controller/action)\r\n                    def connection = url.openConnection()\r\n                    connection.setRequestProperty(\"Method\",\"POST\")\r\n                    connection.setRequestProperty(\"Content-Type\" ,\"application/xml\" )\r\n                   // Set your username and password and pass authorization detail in header\r\n		    String authorizationString = \"Basic \" + \'username:password\'.bytes.encodeBase64().toString()\r\n	            connection.setRequestProperty(\"authorization\",authorizationString)\r\n		    connection.doOutput = true\r\n                    Writer writer = new OutputStreamWriter(connection.outputStream)\r\n                    writer.write(xml)\r\n                    writer.flush()\r\n                    writer.close()\r\n                    connection.connect()\r\n		    </pre></blockquote>\r\nThis hits at the url specified and posts the data(xml string) to the application. at server you need to parse the data (data there is a MAP not xml. cheers..!!!), do some typecasting if required and save it to your database.\r\n\r\nYou may also need to configure  your application to give a 401 Unauthorized response in case username and password are not provided. If it is not done grails will give a 302 response and redirect to login page.\r\n(if you are using spring security acegi plugin. As was the case with me). To change to the strict HTTP Basic mechanism, you\'ll need to rewire the AuthenticationEntryPoint Grails is using by adding the following to your resources.groovy file: \r\n\r\n<blockquote><pre lang=\"groovy\">\r\nbasicAuthenticationEntryPoint(org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint) {\r\n        realmName = \'Grails Realm\'\r\n    }\r\n</pre></blockquote>\r\n\r\nFor further details on securing an application you can refer<a href=\"http://johnnywey.wordpress.com/2009/10/29/grails-acegi-plugin-and-securing-multiple-resources-using-basic-authentication/\"> here </a>.\r\n\r\nHope this helps.\r\n\r\n~~Regards~~\r\nSachin Anand\r\nsachin@intelligrape.com\r\n\r\n','Working With REST Call...',0,'','publish','open','open','','working-with-rest-call','','','2010-04-28 19:20:56','2010-04-28 13:50:56','',0,'http://www.intelligrape.com/blog/?p=604',0,'post','',0),(605,14,'2010-04-28 16:44:50','2010-04-28 11:14:50','','Working With REST Call...',0,'','inherit','open','open','','604-revision','','','2010-04-28 16:44:50','2010-04-28 11:14:50','',604,'http://www.intelligrape.com/blog/?p=605',0,'revision','',0),(606,14,'2010-04-28 16:51:48','2010-04-28 11:21:48','','Working With REST Call...',0,'','inherit','open','open','','604-revision-2','','','2010-04-28 16:51:48','2010-04-28 11:21:48','',604,'http://www.intelligrape.com/blog/?p=606',0,'revision','',0),(607,14,'2010-04-28 18:20:41','2010-04-28 12:50:41','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\n\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\n\nTo generate XML corresponding to a domain object is to use \n\nrender \"object\" as XML','Working With REST Call...',0,'','inherit','open','open','','604-revision-3','','','2010-04-28 18:20:41','2010-04-28 12:50:41','',604,'http://www.intelligrape.com/blog/?p=607',0,'revision','',0),(608,14,'2010-04-28 18:25:26','2010-04-28 12:55:26','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\n\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\n\nTo generate XML corresponding to a domain object use\n<blockquote>\n<pre lang=\"groovy\">render \"object\" as XML</pre>\n</blockquote>','Working With REST Call...',0,'','inherit','open','open','','604-revision-4','','','2010-04-28 18:25:26','2010-04-28 12:55:26','',604,'http://www.intelligrape.com/blog/?p=608',0,'revision','',0),(609,14,'2010-04-28 18:26:26','2010-04-28 12:56:26','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\n\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\n\nTo generate XML corresponding to a domain object use\n<blockquote>\n<pre lang=\"groovy\">render \"object\" as XML</pre>\n</blockquote>\n\nTo get a detailed Idea on generating XML from an object or multiple object','Working With REST Call...',0,'','inherit','open','open','','604-revision-5','','','2010-04-28 18:26:26','2010-04-28 12:56:26','',604,'http://www.intelligrape.com/blog/?p=609',0,'revision','',0),(612,14,'2010-04-28 19:09:14','2010-04-28 13:39:14','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\n\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\n\nTo generate XML corresponding to a domain object use\n<blockquote>\n<pre lang=\"groovy\">render \"object\" as XML</pre>\n</blockquote>\n\nTo get a cusXML from an object or multiple object we need to use the groovy markup builder\n\n<blockquote><pre lang=\"groovy\">render(contentType:\"text/xml\"){\n                 bookId(id:book?.id){\n                     bookNumber(book?.bookNumber)\n                     chapters(){\n                         for(chapterInstance in book?.chapters) {\n                             chapter(id:chapterInstance?.id){\n                                 title(chapterInstance?.title)\n                                }\n                             }\n                         }\n                   }\n             }\n</pre></blockquote>\nThis will generate the following XML\n<blockquote><pre lang=\"groovy\">\n<book id=\"1\">\n     <bookNumber>1001</bookNumber>\n  <chapters>\n        <chapter id=\"1\">\n                <title>Groovy</title>\n           </chapter>\n            <chapter id=\"2\">\n                <title>Grails</title>\n           </chapter>\n       .\n       .\n       .\n      </chapters>\n  </book>\n</pre></blockquote>\n\nNow to send data to server using XML we use post or put method. We generally use POST to post new data and PUT to update existing data on the server. \nTo post data to the server I am  simulating a client outside a browser (its a REST call we need to send just XML, so we must not need a browser), also to access secured services on  the server(here security is provided by HTTP basic authorization) we must send authorization in the header of the HTTP request. Following groovy code simulates a very basic client sending data to server using POST.\n<blockquote><pre lang=\"groovy\">\n\ndef xml = \"\"\"<chapter>\n<title>Java</title>\n</chapter>\"\"\"\n                    def url = new URL(\"url\")  // URL location of your application(controller/action)\n                    def connection = url.openConnection()\n                    connection.setRequestProperty(\"Method\",\"POST\")\n                    connection.setRequestProperty(\"Content-Type\" ,\"application/xml\" )\n                   // Set your username and password and pass authorization detail in header\n		    String authorizationString = \"Basic \" + \'username:password\'.bytes.encodeBase64().toString()\n	            connection.setRequestProperty(\"authorization\",authorizationString)\n		    connection.doOutput = true\n                    Writer writer = new OutputStreamWriter(connection.outputStream)\n                    writer.write(xml)\n                    writer.flush()\n                    writer.close()\n                    connection.connect()\n		    </pre></blockquote>\nThis hits at the url specified and posts the data(xml string) to the application. at server you need to parse the data (data there is a MAP not xml. cheers..!!!), do some typecasting if required and save it to your database.\n\nYou may also need to configure  your application to give a 401 Unauthorized response in case username and password are not provided. If it is not done grails will give a 302 response and redirect to login page.\n(if you are using spring security acegi plugin. As was the case with me). To change to the strict HTTP Basic mechanism, you\'ll need to rewire the AuthenticationEntryPoint Grails is using by adding the following to your resources.groovy file: \n\n<blockquote><pre lang=\"groovy\">\nbasicAuthenticationEntryPoint(org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint) {\n        realmName = \'Grails Realm\'\n    }\n</pre></blockquote>\n\nFor further details on securing an application you can refer\n<a href=\"http://johnnywey.wordpress.com/2009/10/29/grails-acegi-plugin-and-securing-multiple-resources-using-basic-authentication/\"> here </a>.\n\nHope this will help someone.\n\n~~Regards~~\nSachin Anand\nsachin@intelligrape.com\n\n','Working With REST Call...',0,'','inherit','open','open','','604-revision-8','','','2010-04-28 19:09:14','2010-04-28 13:39:14','',604,'http://www.intelligrape.com/blog/?p=612',0,'revision','',0),(610,14,'2010-04-28 19:04:57','2010-04-28 13:34:57','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\r\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\r\n\r\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\r\n\r\nTo generate XML corresponding to a domain object use\r\n<blockquote>\r\n<pre lang=\"groovy\">render \"object\" as XML</pre>\r\n</blockquote>\r\n\r\nTo get a detailed Idea on generating XML from an object or multiple object we need to use the groovy markup builder\r\n\r\n<blockquote><pre lang=\"groovy\">render(contentType:\"text/xml\"){\r\n                 bookId(id:book?.id){\r\n                     bookNumber(book?.bookNumber)\r\n                     chapters(){\r\n                         for(chapterInstance in book?.chapters) {\r\n                             chapter(id:chapterInstance?.id){\r\n                                 title(chapterInstance?.title)\r\n                                }\r\n                             }\r\n                         }\r\n                   }\r\n             }\r\n</pre></blockquote>\r\nThis will generate the following XML\r\n<blockquote><pre lang=\"groovy\">\r\n<book id=\"1\">\r\n     <bookNumber>1001</bookNumber>\r\n  <chapters>\r\n        <chapter id=\"1\">\r\n                <title>Groovy</title>\r\n           </chapter>\r\n            <chapter id=\"2\">\r\n                <title>Grails</title>\r\n           </chapter>\r\n       .\r\n       .\r\n       .\r\n      </chapters>\r\n  </book>\r\n</pre></blockquote>\r\n\r\nNow to send data to server using XML we use post or put method. We generally use POST to post new data and PUT to update existing data on the server. \r\nTo post data to the server I am  simulating a client outside a browser (its a REST call we need to send just XML, so we must not need a browser), also to access secured services on  the server(here security is provided by HTTP basic authorization) we must send authorization in the header of the HTTP request. Following groovy code simulates a very basic client sending data to server using POST.\r\n<blockquote><pre lang=\"groovy\">\r\n\r\ndef xml = \"\"\"<chapter>\r\n<title>Java</title>\r\n</chapter>\"\"\"\r\n                    def url = new URL(\"url\")  // URL location of your application(controller/action)\r\n                    def connection = url.openConnection()\r\n                    connection.setRequestProperty(\"Method\",\"POST\")\r\n                    connection.setRequestProperty(\"Content-Type\" ,\"application/xml\" )\r\n                   // Set your username and password and pass authorization detail in header\r\n		    String authorizationString = \"Basic \" + \'username:password\'.bytes.encodeBase64().toString()\r\n	            connection.setRequestProperty(\"authorization\",authorizationString)\r\n		    connection.doOutput = true\r\n                    Writer writer = new OutputStreamWriter(connection.outputStream)\r\n                    writer.write(xml)\r\n                    writer.flush()\r\n                    writer.close()\r\n                    connection.connect()\r\n		    </pre></blockquote>\r\nThis hits at the url specified and posts the data(xml string) to the application. at server you need to parse the data (data there is a MAP not xml. cheers..!!!), do some typecasting if required and save it to your database.\r\n\r\nYou may also need to configure  your application to give a 401 Unauthorized response in case username and password are not provided. If it is not done grails will give a 302 response and redirect to login page.\r\n(if you are using spring security acegi plugin. As was the case with me). To change to the strict HTTP Basic mechanism, you\'ll need to rewire the AuthenticationEntryPoint Grails is using by adding the following to your resources.groovy file: \r\n\r\n<blockquote><pre lang=\"groovy\">\r\nbasicAuthenticationEntryPoint(org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint) {\r\n        realmName = \'Grails Realm\'\r\n    }\r\n</pre></blockquote>\r\n\r\nFor further details on securing an application you can refer\r\n<a href=\"http://johnnywey.wordpress.com/2009/10/29/grails-acegi-plugin-and-securing-multiple-resources-using-basic-authentication/\"> here </a>.\r\n\r\nHope this will help someone.\r\n\r\nRegards\r\nSachin Anand\r\nIntelligrape Software Pvt. Ltd.\r\n\r\n','Working With REST Call...',0,'','inherit','open','open','','604-revision-6','','','2010-04-28 19:04:57','2010-04-28 13:34:57','',604,'http://www.intelligrape.com/blog/?p=610',0,'revision','',0),(611,14,'2010-04-28 19:05:01','2010-04-28 13:35:01','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\r\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\r\n\r\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\r\n\r\nTo generate XML corresponding to a domain object use\r\n<blockquote>\r\n<pre lang=\"groovy\">render \"object\" as XML</pre>\r\n</blockquote>\r\n\r\nTo get a detailed Idea on generating XML from an object or multiple object we need to use the groovy markup builder\r\n\r\n<blockquote><pre lang=\"groovy\">render(contentType:\"text/xml\"){\r\n                 bookId(id:book?.id){\r\n                     bookNumber(book?.bookNumber)\r\n                     chapters(){\r\n                         for(chapterInstance in book?.chapters) {\r\n                             chapter(id:chapterInstance?.id){\r\n                                 title(chapterInstance?.title)\r\n                                }\r\n                             }\r\n                         }\r\n                   }\r\n             }\r\n</pre></blockquote>\r\nThis will generate the following XML\r\n<blockquote><pre lang=\"groovy\">\r\n<book id=\"1\">\r\n     <bookNumber>1001</bookNumber>\r\n  <chapters>\r\n        <chapter id=\"1\">\r\n                <title>Groovy</title>\r\n           </chapter>\r\n            <chapter id=\"2\">\r\n                <title>Grails</title>\r\n           </chapter>\r\n       .\r\n       .\r\n       .\r\n      </chapters>\r\n  </book>\r\n</pre></blockquote>\r\n\r\nNow to send data to server using XML we use post or put method. We generally use POST to post new data and PUT to update existing data on the server. \r\nTo post data to the server I am  simulating a client outside a browser (its a REST call we need to send just XML, so we must not need a browser), also to access secured services on  the server(here security is provided by HTTP basic authorization) we must send authorization in the header of the HTTP request. Following groovy code simulates a very basic client sending data to server using POST.\r\n<blockquote><pre lang=\"groovy\">\r\n\r\ndef xml = \"\"\"<chapter>\r\n<title>Java</title>\r\n</chapter>\"\"\"\r\n                    def url = new URL(\"url\")  // URL location of your application(controller/action)\r\n                    def connection = url.openConnection()\r\n                    connection.setRequestProperty(\"Method\",\"POST\")\r\n                    connection.setRequestProperty(\"Content-Type\" ,\"application/xml\" )\r\n                   // Set your username and password and pass authorization detail in header\r\n		    String authorizationString = \"Basic \" + \'username:password\'.bytes.encodeBase64().toString()\r\n	            connection.setRequestProperty(\"authorization\",authorizationString)\r\n		    connection.doOutput = true\r\n                    Writer writer = new OutputStreamWriter(connection.outputStream)\r\n                    writer.write(xml)\r\n                    writer.flush()\r\n                    writer.close()\r\n                    connection.connect()\r\n		    </pre></blockquote>\r\nThis hits at the url specified and posts the data(xml string) to the application. at server you need to parse the data (data there is a MAP not xml. cheers..!!!), do some typecasting if required and save it to your database.\r\n\r\nYou may also need to configure  your application to give a 401 Unauthorized response in case username and password are not provided. If it is not done grails will give a 302 response and redirect to login page.\r\n(if you are using spring security acegi plugin. As was the case with me). To change to the strict HTTP Basic mechanism, you\'ll need to rewire the AuthenticationEntryPoint Grails is using by adding the following to your resources.groovy file: \r\n\r\n<blockquote><pre lang=\"groovy\">\r\nbasicAuthenticationEntryPoint(org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint) {\r\n        realmName = \'Grails Realm\'\r\n    }\r\n</pre></blockquote>\r\n\r\nFor further details on securing an application you can refer\r\n<a href=\"http://johnnywey.wordpress.com/2009/10/29/grails-acegi-plugin-and-securing-multiple-resources-using-basic-authentication/\"> here </a>.\r\n\r\nHope this will help someone.\r\n\r\nRegards\r\nSachin Anand\r\nIntelligrape Software Pvt. Ltd.\r\n\r\n','Working With REST Call...',0,'','inherit','open','open','','604-revision-7','','','2010-04-28 19:05:01','2010-04-28 13:35:01','',604,'http://www.intelligrape.com/blog/?p=611',0,'revision','',0),(613,14,'2010-04-28 19:10:13','2010-04-28 13:40:13','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\n\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\n\nTo generate XML corresponding to a domain object use\n<blockquote>\n<pre lang=\"groovy\">render \"object\" as XML</pre>\n</blockquote>\n\nTo get a customized XML from an object or multiple object we need to use the groovy markup builder\n\n<blockquote><pre lang=\"groovy\">render(contentType:\"text/xml\"){\n                 bookId(id:book?.id){\n                     bookNumber(book?.bookNumber)\n                     chapters(){\n                         for(chapterInstance in book?.chapters) {\n                             chapter(id:chapterInstance?.id){\n                                 title(chapterInstance?.title)\n                                }\n                             }\n                         }\n                   }\n             }\n</pre></blockquote>\nThis will generate the following XML\n<blockquote><pre lang=\"groovy\">\n<book id=\"1\">\n     <bookNumber>1001</bookNumber>\n  <chapters>\n        <chapter id=\"1\">\n                <title>Groovy</title>\n           </chapter>\n            <chapter id=\"2\">\n                <title>Grails</title>\n           </chapter>\n       .\n       .\n       .\n      </chapters>\n  </book>\n</pre></blockquote>\n\nNow to send data to server using XML we use post or put method. We generally use POST to post new data and PUT to update existing data on the server. \nTo post data to the server I am  simulating a client outside a browser (its a REST call we need to send just XML, so we must not need a browser), also to access secured services on  the server(here security is provided by HTTP basic authorization) we must send authorization in the header of the HTTP request. Following groovy code simulates a very basic client sending data to server using POST.\n<blockquote><pre lang=\"groovy\">\n\ndef xml = \"\"\"<chapter>\n<title>Java</title>\n</chapter>\"\"\"\n                    def url = new URL(\"url\")  // URL location of your application(controller/action)\n                    def connection = url.openConnection()\n                    connection.setRequestProperty(\"Method\",\"POST\")\n                    connection.setRequestProperty(\"Content-Type\" ,\"application/xml\" )\n                   // Set your username and password and pass authorization detail in header\n		    String authorizationString = \"Basic \" + \'username:password\'.bytes.encodeBase64().toString()\n	            connection.setRequestProperty(\"authorization\",authorizationString)\n		    connection.doOutput = true\n                    Writer writer = new OutputStreamWriter(connection.outputStream)\n                    writer.write(xml)\n                    writer.flush()\n                    writer.close()\n                    connection.connect()\n		    </pre></blockquote>\nThis hits at the url specified and posts the data(xml string) to the application. at server you need to parse the data (data there is a MAP not xml. cheers..!!!), do some typecasting if required and save it to your database.\n\nYou may also need to configure  your application to give a 401 Unauthorized response in case username and password are not provided. If it is not done grails will give a 302 response and redirect to login page.\n(if you are using spring security acegi plugin. As was the case with me). To change to the strict HTTP Basic mechanism, you\'ll need to rewire the AuthenticationEntryPoint Grails is using by adding the following to your resources.groovy file: \n\n<blockquote><pre lang=\"groovy\">\nbasicAuthenticationEntryPoint(org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint) {\n        realmName = \'Grails Realm\'\n    }\n</pre></blockquote>\n\nFor further details on securing an application you can refer<a href=\"http://johnnywey.wordpress.com/2009/10/29/grails-acegi-plugin-and-securing-multiple-resources-using-basic-authentication/\"> here </a>.\n\nHope this helps.\n\n~~Regards~~\nSachin Anand\nsachin@intelligrape.com\n\n','Working With REST Call...',0,'','inherit','open','open','','604-revision-9','','','2010-04-28 19:10:13','2010-04-28 13:40:13','',604,'http://www.intelligrape.com/blog/?p=613',0,'revision','',0),(614,14,'2010-04-28 19:10:29','2010-04-28 13:40:29','Recently I got an opportunity to work on making some parts of an application RESTful with secured access. It has been  a good learning experience so far and encouraged me to write a blog on it. What I have done is nothing new  but I never got things at one place in clear terms. So here is my effort to shed some clarity on it and hope that it will help someone.\r\nMy development environment was grails but I think this will help all, particularly those working in grails and java.\r\n\r\nTo make an application RESTful we need to generate data at server in such a format that it is consumable by a variety of devices and here XML comes into picture. so our server must be able to send response in form of well-structured XML.\r\n\r\nTo generate XML corresponding to a domain object use\r\n<blockquote>\r\n<pre lang=\"groovy\">render \"object\" as XML</pre>\r\n</blockquote>\r\n\r\nTo get a customized XML from an object or multiple object we need to use the groovy markup builder\r\n\r\n<blockquote><pre lang=\"groovy\">render(contentType:\"text/xml\"){\r\n                 bookId(id:book?.id){\r\n                     bookNumber(book?.bookNumber)\r\n                     chapters(){\r\n                         for(chapterInstance in book?.chapters) {\r\n                             chapter(id:chapterInstance?.id){\r\n                                 title(chapterInstance?.title)\r\n                                }\r\n                             }\r\n                         }\r\n                   }\r\n             }\r\n</pre></blockquote>\r\nThis will generate the following XML\r\n<blockquote><pre lang=\"groovy\">\r\n<book id=\"1\">\r\n     <bookNumber>1001</bookNumber>\r\n  <chapters>\r\n        <chapter id=\"1\">\r\n                <title>Groovy</title>\r\n           </chapter>\r\n            <chapter id=\"2\">\r\n                <title>Grails</title>\r\n           </chapter>\r\n       .\r\n       .\r\n       .\r\n      </chapters>\r\n  </book>\r\n</pre></blockquote>\r\n\r\nNow to send data to server using XML we use post or put method. We generally use POST to post new data and PUT to update existing data on the server. \r\nTo post data to the server I am  simulating a client outside a browser (its a REST call we need to send just XML, so we must not need a browser), also to access secured services on  the server(here security is provided by HTTP basic authorization) we must send authorization in the header of the HTTP request. Following groovy code simulates a very basic client sending data to server using POST.\r\n<blockquote><pre lang=\"groovy\">\r\n\r\ndef xml = \"\"\"<chapter>\r\n<title>Java</title>\r\n</chapter>\"\"\"\r\n                    def url = new URL(\"url\")  // URL location of your application(controller/action)\r\n                    def connection = url.openConnection()\r\n                    connection.setRequestProperty(\"Method\",\"POST\")\r\n                    connection.setRequestProperty(\"Content-Type\" ,\"application/xml\" )\r\n                   // Set your username and password and pass authorization detail in header\r\n		    String authorizationString = \"Basic \" + \'username:password\'.bytes.encodeBase64().toString()\r\n	            connection.setRequestProperty(\"authorization\",authorizationString)\r\n		    connection.doOutput = true\r\n                    Writer writer = new OutputStreamWriter(connection.outputStream)\r\n                    writer.write(xml)\r\n                    writer.flush()\r\n                    writer.close()\r\n                    connection.connect()\r\n		    </pre></blockquote>\r\nThis hits at the url specified and posts the data(xml string) to the application. at server you need to parse the data (data there is a MAP not xml. cheers..!!!), do some typecasting if required and save it to your database.\r\n\r\nYou may also need to configure  your application to give a 401 Unauthorized response in case username and password are not provided. If it is not done grails will give a 302 response and redirect to login page.\r\n(if you are using spring security acegi plugin. As was the case with me). To change to the strict HTTP Basic mechanism, you\'ll need to rewire the AuthenticationEntryPoint Grails is using by adding the following to your resources.groovy file: \r\n\r\n<blockquote><pre lang=\"groovy\">\r\nbasicAuthenticationEntryPoint(org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint) {\r\n        realmName = \'Grails Realm\'\r\n    }\r\n</pre></blockquote>\r\n\r\nFor further details on securing an application you can refer<a href=\"http://johnnywey.wordpress.com/2009/10/29/grails-acegi-plugin-and-securing-multiple-resources-using-basic-authentication/\"> here </a>.\r\n\r\nHope this helps.\r\n\r\n~~Regards~~\r\nSachin Anand\r\nsachin@intelligrape.com\r\n\r\n','Working With REST Call...',0,'','inherit','open','open','','604-revision-10','','','2010-04-28 19:10:29','2010-04-28 13:40:29','',604,'http://www.intelligrape.com/blog/?p=614',0,'revision','',0),(615,10,'2010-04-28 20:06:45','2010-04-28 14:36:45','In a project, we needed to have fine tune the transaction behaviour on our Service classes. One service method was calling the a method in another service. The calling service method A was to happen in one transaction and the called service method B in its own transaction. This was required because we needed to persist the error log from the B() in a domain using A().\r\n\r\nEven though an exception was thrown from B() and it was caught in A() and handled gracefully, some exceptions were thrown, which meant that the changes made in A() were also rolled back, which was not the behavior we required. After some investigation and taking cue from <a href=\"http://grails.1312388.n4.nabble.com/Fine-grained-transaction-configuration-td1340186.html#a1340186\" target=\"_blank\">the mailing list</a> , it was decided that the best way to go about it was to run B() in its own transaction. This was possible using the Spring Transaction Annotation, a property of which creates a new session for B().\r\n\r\nThis was done by adding the annotation\r\n<blockquote>\r\n<pre lang=\"groovy\">   import org.springframework.transaction.annotation.*\r\n   class SampleService{\r\n        static transactional = true\r\n        @Transactional(propagation = Propagation.REQUIRES_NEW)\r\n         def B(){\r\n                   //..implementation which can throw exceptions. The logic in this method is run in a single transaction\r\n        }\r\n  }</pre>\r\n<pre lang=\"groovy\"></pre>\r\n</blockquote>\r\n\r\nAnd in A(), we have try catch blocks to handle the exception. \r\n\r\nHope this helps.','Overriding default Transactional Behaviour in Grails Services using Annotations',0,'','publish','open','open','','overriding-default-transactional-behaviour-in-grails-services-using-annotations','','','2010-04-28 20:06:45','2010-04-28 14:36:45','',0,'http://www.intelligrape.com/blog/?p=615',0,'post','',0),(616,10,'2010-04-28 20:05:46','2010-04-28 14:35:46','In a project, we needed to have fine tune the transaction behaviour on our Service classes. One service method was calling the a method in another service. The calling service method A was to happen in one transaction and the called service method B in its own transaction. This was required because we needed to persist the error log from the B() in a domain using A().\n\nEven though an exception was thrown from B() and it was caught in A() and handled gracefully, some exceptions were thrown, which meant that the changes made in A() were also rolled back, which was not the behavior we required. After some investigation and taking cue from <a href=\"http://grails.1312388.n4.nabble.com/Fine-grained-transaction-configuration-td1340186.html#a1340186\" target=\"_blank\">the mailing list</a> , it was decided that the best way to go about it was to run B() in its own transaction. This was possible using the Spring Transaction Annotation, a property of which creates a new session for B().\n\nThis was done by adding the annotation\n<blockquote>\n<pre lang=\"groovy\">   import org.springframework.transaction.annotation.*\n   class SampleService{\n        static transactional = true\n        @Transactional(propagation = Propagation.REQUIRES_NEW)\n         def B(){\n                   //..implementation which can throw exceptions. The logic in this method is run in a single transaction\n        }\n  }</pre>\n<pre lang=\"groovy\"></pre>\n</blockquote>\n\nAnd in A(), we have try catch blocks to handle the exception. \n\n','Overriding default Transactional Behaviour in Grails using Annotations',0,'','inherit','open','open','','615-revision','','','2010-04-28 20:05:46','2010-04-28 14:35:46','',615,'http://www.intelligrape.com/blog/?p=616',0,'revision','',0),(617,10,'2010-04-28 20:05:53','2010-04-28 14:35:53','In a project, we needed to have fine tune the transaction behaviour on our Service classes. One service method was calling the a method in another service. The calling service method A was to happen in one transaction and the called service method B in its own transaction. This was required because we needed to persist the error log from the B() in a domain using A().\r\n\r\nEven though an exception was thrown from B() and it was caught in A() and handled gracefully, some exceptions were thrown, which meant that the changes made in A() were also rolled back, which was not the behavior we required. After some investigation and taking cue from <a href=\"http://grails.1312388.n4.nabble.com/Fine-grained-transaction-configuration-td1340186.html#a1340186\" target=\"_blank\">the mailing list</a> , it was decided that the best way to go about it was to run B() in its own transaction. This was possible using the Spring Transaction Annotation, a property of which creates a new session for B().\r\n\r\nThis was done by adding the annotation\r\n<blockquote>\r\n<pre lang=\"groovy\">   import org.springframework.transaction.annotation.*\r\n   class SampleService{\r\n        static transactional = true\r\n        @Transactional(propagation = Propagation.REQUIRES_NEW)\r\n         def B(){\r\n                   //..implementation which can throw exceptions. The logic in this method is run in a single transaction\r\n        }\r\n  }</pre>\r\n<pre lang=\"groovy\"></pre>\r\n</blockquote>\r\n\r\nAnd in A(), we have try catch blocks to handle the exception. \r\n\r\nHope this helps.','Overriding default Transactional Behaviour in Grails using Annotations',0,'','inherit','open','open','','615-revision-2','','','2010-04-28 20:05:53','2010-04-28 14:35:53','',615,'http://www.intelligrape.com/blog/?p=617',0,'revision','',0),(618,13,'2010-04-29 12:54:57','2010-04-29 07:24:57','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\r\n\r\n// Generate error message\r\n\r\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\r\n\r\n// check if both field1 and field2 are in error\r\n\r\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\r\n	// Both the fields are in error irrespective of other fields\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nHope it helps you guys too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Software','List of fields in error of a domain instance',0,'','publish','open','open','','list-of-fields-in-error-of-a-domain-instance','','','2010-04-29 15:56:01','2010-04-29 10:26:01','',0,'http://www.intelligrape.com/blog/?p=618',0,'post','',0),(622,13,'2010-04-29 12:53:46','2010-04-29 07:23:46','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\r\n\r\n// Generate error message\r\n\r\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\r\n\r\n// check if both field1 and field2 are in error\r\n\r\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\r\n	// Both the fields are in error irrespective of other fields\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nHope it helpy you guys too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','List of fields in error of a domain instance',0,'','inherit','open','open','','618-revision-4','','','2010-04-29 12:53:46','2010-04-29 07:23:46','',618,'http://www.intelligrape.com/blog/?p=622',0,'revision','',0),(619,13,'2010-04-29 12:52:09','2010-04-29 07:22:09','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\n\n<p>I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:-</p>\n<blockquote>\n<div class=\"code\">\n<pre lang=\"groovy\">\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\n\n// Generate error message\n\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\n\n// check if both field1 and field2 are in error\n\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\n	// Both the fields are in error irrespective of other fields\n}\n</pre>\n</div>\n</blockquote>\n\nIt worked for us.Hope it will save your time too.\n\n ~~~~Bhagwt Kumar~~~~\nbhagwat@intelligrape.com\nIntelliGrape Softwares','List of fields in error of a domain instance',0,'','inherit','open','open','','618-revision','','','2010-04-29 12:52:09','2010-04-29 07:22:09','',618,'http://www.intelligrape.com/blog/?p=619',0,'revision','',0),(620,13,'2010-04-29 12:52:24','2010-04-29 07:22:24','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\r\n\r\n<p>I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\r\n\r\n// Generate error message\r\n\r\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\r\n\r\n// check if both field1 and field2 are in error\r\n\r\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\r\n	// Both the fields are in error irrespective of other fields\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nHope it helpy you guys too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','List of fields in error of a domain instance',0,'','inherit','open','open','','618-revision-2','','','2010-04-29 12:52:24','2010-04-29 07:22:24','',618,'http://www.intelligrape.com/blog/?p=620',0,'revision','',0),(621,13,'2010-04-29 12:52:29','2010-04-29 07:22:29','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\r\n\r\n<p>I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\r\n\r\n// Generate error message\r\n\r\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\r\n\r\n// check if both field1 and field2 are in error\r\n\r\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\r\n	// Both the fields are in error irrespective of other fields\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nHope it helpy you guys too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','List of fields in error of a domain instance',0,'','inherit','open','open','','618-revision-3','','','2010-04-29 12:52:29','2010-04-29 07:22:29','',618,'http://www.intelligrape.com/blog/?p=621',0,'revision','',0),(623,13,'2010-04-29 12:55:07','2010-04-29 07:25:07','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\r\n\r\n// Generate error message\r\n\r\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\r\n\r\n// check if both field1 and field2 are in error\r\n\r\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\r\n	// Both the fields are in error irrespective of other fields\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nHope it helpy you guys too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','List of fields in error of a domain instance',0,'','inherit','open','open','','618-autosave','','','2010-04-29 12:55:07','2010-04-29 07:25:07','',618,'http://www.intelligrape.com/blog/?p=623',0,'revision','',0),(624,13,'2010-04-29 12:54:57','2010-04-29 07:24:57','I have been working with domain and command object validation. I needed to get all the fields in error as a list so that I can display a single line error message  like : please enter valid values in the following fields- filed1, field2. Another use case was to check the list of fields for error. Here is the code to get list of errorneous fields:\r\n\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">\r\nList fieldsInError = domainInstance.errors.allErrors.collect {it.properties[\'field\']}\r\n\r\n// Generate error message\r\n\r\nString errorMessage= \"Enter valid values in fields - ${fieldsInError.join(\', \')}\"\r\n\r\n// check if both field1 and field2 are in error\r\n\r\nif(fieldsInError.containsAll([\'field1\', \'field2\']){\r\n	// Both the fields are in error irrespective of other fields\r\n}\r\n</pre>\r\n</div>\r\n</blockquote>\r\n\r\nHope it helpy you guys too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','List of fields in error of a domain instance',0,'','inherit','open','open','','618-revision-5','','','2010-04-29 12:54:57','2010-04-29 07:24:57','',618,'http://www.intelligrape.com/blog/?p=624',0,'revision','',0),(625,13,'2010-03-04 13:22:47','2010-03-04 07:52:47','<p>In our current project we are using jsecurity plugin and some of our bootstrap code required a user to be logged in. I found a nice blog   <a href=\"http://www.intelligrape.com/blog/?p=335\" target=\"_blank\"> http://www.intelligrape.com/blog/?p=335</a>  on this topic but it was using groovy metaprogramming to override the normal behaviour of <code>SecurityUtils.getSubject()</code> which is suitable for <em>test environment</em>.</p><p> After a few minutes of digging into jsecurity plugin we found an easy solution :-</p>\r\n<blockquote>\r\n<div class=\"code\">\r\n<pre lang=\"groovy\">class MyController{\r\n  def jsecSecurityManager\r\n\r\n  def myAction={\r\n        def authToken = new org.jsecurity.authc.UsernamePasswordToken(\"bootstrapuser\", \"password\")\r\n        jsecSecurityManager.login(authToken)\r\n	\r\n	/*\r\n	Your code here that depends on logged in user.\r\n	e.g. String userId=org.jsecurity.SecurityUtils.getSubject()?.getPrincipal()\r\n	*/\r\n\r\n   }\r\n}</pre>\r\n</div>\r\n</blockquote>\r\n\r\nIt worked for us.Hope it will save your time too.\r\n\r\n ~~~~Bhagwt Kumar~~~~\r\nbhagwat@intelligrape.com\r\nIntelliGrape Softwares','Programmatically logging in user in jsecurity plugin',0,'','inherit','open','open','','429-revision-9','','','2010-03-04 13:22:47','2010-03-04 07:52:47','',429,'http://www.intelligrape.com/blog/?p=625',0,'revision','',0),(626,16,'2010-05-03 01:32:24','2010-05-02 20:02:24','<a href=\"http://www.amazon.com/iReport-3-7-Shamsuddin-Ahammad/dp/1847198805/ref=sr_1_1?ie=UTF8&s=books&qid=1272829750&sr=1-1\">Shamsuddin has described iReport 3.7 inside out in  his latest book </a>,this book is perfect for new learners. Best thing about this one is , that it has explained each option available in best manner possible\r\nmaking it a delight to read.\r\n \r\nWhat I liked about this one is one  is in  chapter named \"iReport in NetBeans\"  ,author has not only explained the process of using iReport with NetBeans but has also explained basic \"how to\" for NetBean.\r\n\r\nLast few chapters including \"Crosstabs report\" , \"calling Reports from Java Apps \",and iReport in NetBeans are beautifully written , making it  valuable for those who have previous experience in making reports and perfect for beginners.\r\n\r\n______________________\r\nHitesh\r\nhitesh@intelligrape.com\r\nIntelligrape Software\r\n______________________\r\n ','iReport 3.7',0,'','publish','open','open','','ireport-3-7','','','2010-05-03 01:32:24','2010-05-02 20:02:24','',0,'http://www.intelligrape.com/blog/?p=626',0,'post','',0),(627,16,'2010-05-03 01:31:15','2010-05-02 20:01:15','<a href=\"http://www.amazon.com/iReport-3-7-Shamsuddin-Ahammad/dp/1847198805/ref=sr_1_1?ie=UTF8&s=books&qid=1272829750&sr=1-1\">Shamsuddin has described iReport 3.7 inside out in  his latest book </a>,this book is perfect for new learners. Best thing about this one is , that it has explained each option available in best manner possible\nmaking it a delight to read.\n \nWhat I liked about this one is one  is in  chapter named \"iReport in NetBeans\"  ,author has not only explained the process of using iReport with NetBeans but has also explained basic \"how to\" for NetBean.\n\nLast few chapters including \"Crosstabs report\" , \"calling Reports from Java Apps \",and iReport in NetBeans are beautifully written , making it  valuable for those who have previous experience in making reports and perfect for beginners.\n\n______________________\nHitesh\nhitesh@intelligrape.com\nIntelligrape Software\n______________________\n ','iReport 3.7',0,'','inherit','open','open','','626-revision','','','2010-05-03 01:31:15','2010-05-02 20:01:15','',626,'http://www.intelligrape.com/blog/?p=627',0,'revision','',0),(628,16,'2010-05-03 01:31:19','2010-05-02 20:01:19','<a href=\"http://www.amazon.com/iReport-3-7-Shamsuddin-Ahammad/dp/1847198805/ref=sr_1_1?ie=UTF8&s=books&qid=1272829750&sr=1-1\">Shamsuddin has described iReport 3.7 inside out in  his latest book </a>,this book is perfect for new learners. Best thing about this one is , that it has explained each option available in best manner possible\r\nmaking it a delight to read.\r\n \r\nWhat I liked about this one is one  is in  chapter named \"iReport in NetBeans\"  ,author has not only explained the process of using iReport with NetBeans but has also explained basic \"how to\" for NetBean.\r\n\r\nLast few chapters including \"Crosstabs report\" , \"calling Reports from Java Apps \",and iReport in NetBeans are beautifully written , making it  valuable for those who have previous experience in making reports and perfect for beginners.\r\n\r\n______________________\r\nHitesh\r\nhitesh@intelligrape.com\r\nIntelligrape Software\r\n______________________\r\n ','iReport 3.7',0,'','inherit','open','open','','626-revision-2','','','2010-05-03 01:31:19','2010-05-02 20:01:19','',626,'http://www.intelligrape.com/blog/?p=628',0,'revision','',0),(629,16,'2010-05-03 01:42:12','2010-05-02 20:12:12','<a href=\"http://www.amazon.com/iReport-3-7-Shamsuddin-Ahammad/dp/1847198805/ref=sr_1_1?ie=UTF8&s=books&qid=1272829750&sr=1-1\">Shamsuddin has described iReport 3.7 inside out in  his latest book </a>,this book is perfect for new learners. Best thing about this one is , that it has explained each option available in best manner possible\nmaking it a delight to read.\n \nWhat I liked about this one is one  is in  chapter named \"iReport in NetBeans\"  ,author has not only explained the process of using iReport with NetBeans but has also explained basic \"how to\" for NetBean.\n\nLast few chapters including \"Crosstabs report\" , \"calling Reports from Java Apps \",and iReport in NetBeans are beautifully written , making it  valuable for those who have previous experience in making reports and perfect for beginners.\n\n______________________\nHitesh\nhitesh@intelligrape.com\nIntelligrape Software\n______________________\n ','Patter',0,'','inherit','open','open','','626-autosave','','','2010-05-03 01:42:12','2010-05-02 20:12:12','',626,'http://www.intelligrape.com/blog/?p=629',0,'revision','',0),(630,16,'2010-05-03 15:12:42','2010-05-03 09:42:42','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\r\n\r\nIt  can be done by  using pattern property in  <textField> tag.\r\n<pre lang=\"groovy\">\r\n<textField pattern=\"#,#0;(#,##0)\" > \r\n</pre>\r\n\r\nthe part before semicolon is for positive numbers and  part following semicolon is for negative number. \r\n\r\n\r\n____________________\r\nHitesh\r\nhitesh@intelligrape.com\r\nIntelligrape Software\r\n____________________','Jasper report  - Pattern for Negative Numbers',0,'','publish','open','open','','jasper-report-pattern-for-negative-numbers','','','2010-05-03 15:12:42','2010-05-03 09:42:42','',0,'http://www.intelligrape.com/blog/?p=630',0,'post','',0),(631,16,'2010-05-03 01:52:15','2010-05-02 20:22:15','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\n\nFor this we came up with idea of injecting method into \n\n\n\n<strong>In  Jasper report </strong>\nIt  can be done by  using pattern property in  <textField> tag.\n<textField pattern=\"#,#0;(#,##0)\" > \nthe part before semicolon is for positive numbers and  part following semicolon is for begative number. ','Pattern for Negative Numbers)',0,'','inherit','open','open','','630-revision','','','2010-05-03 01:52:15','2010-05-02 20:22:15','',630,'http://www.intelligrape.com/blog/?p=631',0,'revision','',0),(640,16,'2010-05-03 15:10:52','2010-05-03 09:40:52','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\r\n\r\nIt  can be done by  using pattern property in  <textField> tag.\r\n<pre lang=\"groovy\">\r\n<textField pattern=\"#,#0;(#,##0)\" > \r\n</pre>\r\n\r\nthe part before semicolon is for positive numbers and  part following semicolon is for negative number. ','Jasper report  - Pattern for Negative Numbers',0,'','inherit','open','open','','630-revision-5','','','2010-05-03 15:10:52','2010-05-03 09:40:52','',630,'http://www.intelligrape.com/blog/?p=640',0,'revision','',0),(633,8,'2010-05-03 14:43:41','2010-05-03 09:13:41','Restricting the length of a string on gsps is a common scenario in most of our projects. \r\nGroovy\'s metaprogramming magic made it too simple for me. I added the following lines of code to Bootstrap.groovy:\r\n\r\n<pre lang=\"groovy\">\r\nObject.metaClass.trimLength = {Integer stringLength ->\r\n\r\n    String trimString = delegate?.toString()\r\n    String concatenateString = \"...\"\r\n    List separators = [\".\", \" \"]\r\n\r\n    if (stringLength && (trimString?.length() > stringLength)) {\r\n        trimString = trimString.substring(0, stringLength - concatenateString.length())\r\n        String separator = separators.findAll{trimString.contains(it)}?.min{trimString.lastIndexOf(it)}\r\n        if(separator){\r\n            trimString = trimString.substring(0, trimString.lastIndexOf(separator))\r\n        }\r\n        trimString += concatenateString\r\n    }\r\n    return trimString\r\n}\r\n</pre>\r\n\r\nNow, for an instance of class Person: \r\n\r\n<pre lang=\"groovy\">\r\nclass Person {\r\n    String name\r\n\r\n    String toString(){\r\n        return name\r\n    }\r\n}\r\n\r\nPerson person = new Person(name: \"Aman Aggarwal\")\r\n</pre>\r\n\r\nI can simply write this code in gsp: \r\n\r\n<pre lang=\"groovy\">\r\nperson.trimLength(10)\r\n</pre>\r\n\r\nwhich renders output:\r\n\r\n<pre lang=\"groovy\">\r\nAman...\r\n</pre>\r\n\r\n\r\nHope it helps.\r\n\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Injecting Method to trim string length on gsp pages',0,'','publish','open','open','','injecting-method-to-trim-string-length-on-gsp-pages','','','2010-05-03 15:36:53','2010-05-03 10:06:53','',0,'http://www.intelligrape.com/blog/?p=633',0,'post','',1),(632,16,'2010-05-03 01:54:55','2010-05-02 20:24:55','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\n\nFor this we came up with idea of injecting method into String class.\n\nString.metaClass.convertNegativeNumbers = {\nString number = delegate?.toString()\nnumber = number.replaceAll(\"\\\\)\nnumber =\nnumber =\n\n\n\n\n<strong>In  Jasper report </strong>\nIt  can be done by  using pattern property in  <textField> tag.\n<textField pattern=\"#,#0;(#,##0)\" > \nthe part before semicolon is for positive numbers and  part following semicolon is for begative number. ','Pattern for Negative Numbers)',0,'','inherit','open','open','','630-revision-2','','','2010-05-03 01:54:55','2010-05-02 20:24:55','',630,'http://www.intelligrape.com/blog/?p=632',0,'revision','',0),(634,8,'2010-05-03 14:35:00','2010-05-03 09:05:00','Restricting the length of a string on gsps is a common scenario in most of our projects. Metaprogramming made it too simple for me. I added the following lines of code to Bootstrap.groovy:\n\n<pre lang=\"groovy\">\nObject.metaClass.trimLength = {Integer stringLength -&gt;\n\nString trimString = delegate?.toString()\nString concatenateString = \"...\"\nList separators = [\".\", \" \"]\n\nif (stringLength &amp;&amp; (trimString?.length() &gt; stringLength)) {\ntrimString = trimString.substring(0, stringLength - concatenateString.length())\nString separator = separators.findAll{trimString.contains(it)}?.min{trimString.lastIndexOf(it)}\nif(separator){\ntrimString = trimString.substring(0, trimString.lastIndexOf(separator))\n}\ntrimString += concatenateString\n}\n\nreturn trimString\n}\n</pre>\n<pre lang=\"groovy\">\nclass Person {\nString name\n\nString toString(){\nreturn name\n}\n}\n\nPerson person = new Person(name: \"Aman Aggarwal\")\n</pre>\nNow on my gsps, I can simple do:\n\n<pre lang=\"groovy\">\nperson.trimLength(10)\n</pre>','Method to trim string length for all objects',0,'','inherit','open','open','','633-revision','','','2010-05-03 14:35:00','2010-05-03 09:05:00','',633,'http://www.intelligrape.com/blog/?p=634',0,'revision','',0),(635,8,'2010-05-03 14:35:02','2010-05-03 09:05:02','Restricting the length of a string on gsps is a common scenario in most of our projects. Metaprogramming made it too simple for me. I added the following lines of code to Bootstrap.groovy:\r\n\r\n<pre lang=\"groovy\">\r\nObject.metaClass.trimLength = {Integer stringLength -&gt;\r\n\r\nString trimString = delegate?.toString()\r\nString concatenateString = \"...\"\r\nList separators = [\".\", \" \"]\r\n\r\nif (stringLength &amp;&amp; (trimString?.length() &gt; stringLength)) {\r\ntrimString = trimString.substring(0, stringLength - concatenateString.length())\r\nString separator = separators.findAll{trimString.contains(it)}?.min{trimString.lastIndexOf(it)}\r\nif(separator){\r\ntrimString = trimString.substring(0, trimString.lastIndexOf(separator))\r\n}\r\ntrimString += concatenateString\r\n}\r\n\r\nreturn trimString\r\n}\r\n</pre>\r\n<pre lang=\"groovy\">\r\nclass Person {\r\nString name\r\n\r\nString toString(){\r\nreturn name\r\n}\r\n}\r\n\r\nPerson person = new Person(name: \"Aman Aggarwal\")\r\n</pre>\r\nNow on my gsps, I can simple do:\r\n\r\n<pre lang=\"groovy\">\r\nperson.trimLength(10)\r\n</pre>','Method to trim string length for all objects',0,'','inherit','open','open','','633-revision-2','','','2010-05-03 14:35:02','2010-05-03 09:05:02','',633,'http://www.intelligrape.com/blog/?p=635',0,'revision','',0),(637,8,'2010-05-03 14:40:33','2010-05-03 09:10:33','Restricting the length of a string on gsps is a common scenario in most of our projects. Metaprogramming made it too simple for me. I added the following lines of code to Bootstrap.groovy:\r\n\r\n<pre lang=\"groovy\">\r\nObject.metaClass.trimLength = {Integer stringLength ->\r\n\r\n    String trimString = delegate?.toString()\r\n    String concatenateString = \"...\"\r\n    List separators = [\".\", \" \"]\r\n\r\n    if (stringLength && (trimString?.length() > stringLength)) {\r\n        trimString = trimString.substring(0, stringLength - concatenateString.length())\r\n        String separator = separators.findAll{trimString.contains(it)}?.min{trimString.lastIndexOf(it)}\r\n        if(separator){\r\n            trimString = trimString.substring(0, trimString.lastIndexOf(separator))\r\n        }\r\n        trimString += concatenateString\r\n    }\r\n    return trimString\r\n}\r\n</pre>\r\n<pre lang=\"groovy\">\r\nclass Person {\r\n    String name\r\n\r\n    String toString(){\r\n        return name\r\n    }\r\n}\r\n\r\nPerson person = new Person(name: \"Aman Aggarwal\")\r\n</pre>\r\n\r\nNow on my gsps, I can simple do:\r\n\r\n<pre lang=\"groovy\">\r\nperson.trimLength(10)\r\n</pre>\r\n\r\nwhich renders output:\r\n\r\n<pre lang=\"groovy\">\r\nAman...\r\n</pre>\r\n\r\n\r\nHope it helps.\r\n\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Method to trim string length for all objects',0,'','inherit','open','open','','633-revision-4','','','2010-05-03 14:40:33','2010-05-03 09:10:33','',633,'http://www.intelligrape.com/blog/?p=637',0,'revision','',0),(636,8,'2010-05-03 14:37:25','2010-05-03 09:07:25','Restricting the length of a string on gsps is a common scenario in most of our projects. Metaprogramming made it too simple for me. I added the following lines of code to Bootstrap.groovy:\r\n\r\n<pre lang=\"groovy\">\r\nObject.metaClass.trimLength = {Integer stringLength ->\r\n\r\n             String trimString = delegate?.toString()\r\n             String concatenateString = \"...\"\r\n             List separators = [\".\", \" \"]\r\n\r\n             if (stringLength && (trimString?.length() > stringLength)) {\r\n                 trimString = trimString.substring(0, stringLength - concatenateString.length())\r\n                 String separator = separators.findAll{trimString.contains(it)}?.min{trimString.lastIndexOf(it)}\r\n                 if(separator){\r\n                     trimString = trimString.substring(0, trimString.lastIndexOf(separator))\r\n                 }\r\n                 trimString += concatenateString\r\n             }\r\n\r\n             return trimString\r\n         }\r\n</pre>\r\n<pre lang=\"groovy\">\r\nclass Person {\r\n    String name\r\n\r\n    String toString(){\r\n        return name\r\n    }\r\n}\r\n\r\nPerson person = new Person(name: \"Aman Aggarwal\")\r\n</pre>\r\n\r\nNow on my gsps, I can simple do:\r\n\r\n<pre lang=\"groovy\">\r\nperson.trimLength(10)\r\n</pre>\r\n\r\nwhich renders \"Aman...\" as output.\r\n\r\n\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Method to trim string length for all objects',0,'','inherit','open','open','','633-revision-3','','','2010-05-03 14:37:25','2010-05-03 09:07:25','',633,'http://www.intelligrape.com/blog/?p=636',0,'revision','',0),(638,16,'2010-05-03 01:55:16','2010-05-02 20:25:16','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\r\n\r\nFor this we came up with idea of injecting method into String class.\r\n\r\n// Not complete yet\r\n\r\n\r\n<strong>In  Jasper report </strong>\r\nIt  can be done by  using pattern property in  <textField> tag.\r\n<textField pattern=\"#,#0;(#,##0)\" > \r\nthe part before semicolon is for positive numbers and  part following semicolon is for begative number. ','Pattern for Negative Numbers)',0,'','inherit','open','open','','630-revision-3','','','2010-05-03 01:55:16','2010-05-02 20:25:16','',630,'http://www.intelligrape.com/blog/?p=638',0,'revision','',0),(639,16,'2010-05-03 15:05:51','2010-05-03 09:35:51','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\r\n\r\nFor this we came up with idea of injecting method into String class.\r\n\r\n// Not complete yet\r\n\r\n\r\n<strong>In  Jasper report </strong>\r\nIt  can be done by  using pattern property in  <textField> tag.\r\n<textField pattern=\"#,#0;(#,##0)\" > \r\nthe part before semicolon is for positive numbers and  part following semicolon is for begative number. ','Pattern for Negative Numbers)',0,'','inherit','open','open','','630-revision-4','','','2010-05-03 15:05:51','2010-05-03 09:35:51','',630,'http://www.intelligrape.com/blog/?p=639',0,'revision','',0),(641,16,'2010-05-03 15:12:32','2010-05-03 09:42:32','Recently had a requirement to print Currency values with a condition that negative numbers must be inside brackets.\r\n\r\nIt  can be done by  using pattern property in  <textField> tag.\r\n<pre lang=\"groovy\">\r\n<textField pattern=\"#,#0;(#,##0)\" > \r\n</pre>\r\n\r\nthe part before semicolon is for positive numbers and  part following semicolon is for negative number. \r\n\r\n\r\n____________________\r\nHitesh\r\nhitesh@intelligrape.com\r\nIntelligrape Software\r\n____________________','Jasper report  - Pattern for Negative Numbers',0,'','inherit','open','open','','630-revision-6','','','2010-05-03 15:12:32','2010-05-03 09:42:32','',630,'http://www.intelligrape.com/blog/?p=641',0,'revision','',0),(642,8,'2010-05-03 14:43:41','2010-05-03 09:13:41','Restricting the length of a string on gsps is a common scenario in most of our projects. \r\nGroovy\'s metaprogramming magic made it too simple for me. I added the following lines of code to Bootstrap.groovy:\r\n\r\n<pre lang=\"groovy\">\r\nObject.metaClass.trimLength = {Integer stringLength ->\r\n\r\n    String trimString = delegate?.toString()\r\n    String concatenateString = \"...\"\r\n    List separators = [\".\", \" \"]\r\n\r\n    if (stringLength && (trimString?.length() > stringLength)) {\r\n        trimString = trimString.substring(0, stringLength - concatenateString.length())\r\n        String separator = separators.findAll{trimString.contains(it)}?.min{trimString.lastIndexOf(it)}\r\n        if(separator){\r\n            trimString = trimString.substring(0, trimString.lastIndexOf(separator))\r\n        }\r\n        trimString += concatenateString\r\n    }\r\n    return trimString\r\n}\r\n</pre>\r\n\r\nNow, for an instance of class Person: \r\n\r\n<pre lang=\"groovy\">\r\nclass Person {\r\n    String name\r\n\r\n    String toString(){\r\n        return name\r\n    }\r\n}\r\n\r\nPerson person = new Person(name: \"Aman Aggarwal\")\r\n</pre>\r\n\r\nI can simply write this code in gsp: \r\n\r\n<pre lang=\"groovy\">\r\nperson.trimLength(10)\r\n</pre>\r\n\r\nwhich renders output:\r\n\r\n<pre lang=\"groovy\">\r\nAman...\r\n</pre>\r\n\r\n\r\nHope it helps.\r\n\r\n~Aman Aggarwal\r\naman@intelligrape.com\r\n\r\nhttp://www.IntelliGrape.com/','Method to trim string length for all objects',0,'','inherit','open','open','','633-revision-5','','','2010-05-03 14:43:41','2010-05-03 09:13:41','',633,'http://www.intelligrape.com/blog/?p=642',0,'revision','',0),(643,7,'2010-05-06 17:18:29','2010-05-06 11:48:29','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv ./grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy ./grails-app/conf/\r\n\r\ngrails test-app -integration $@\r\n\r\nmv /home/amit/BootStrap_org.groovy ./grails-app/conf/BootStrap.groovy\r\nrm  /home/amit/proj_dev_backup.sql\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n       }\r\n}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as command line arguments, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Grails : Save time while writing Integration tests',0,'','publish','open','open','','save-time-while-writing-integration-tests','','','2010-05-10 10:19:57','2010-05-10 04:49:57','',0,'http://www.intelligrape.com/blog/?p=643',0,'post','',0);
INSERT INTO `wp_posts` VALUES (644,7,'2010-05-06 17:07:44','2010-05-06 11:37:44','Hi Friends,\n\nI always used to spend lot of time writing integration tests as running even a single test involved loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\n\n<blockquote>\n\n<pre lang=\"groovy\">\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\ncd /home/amit/applicationPath\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\nread files\ngrails test-app -integration $files\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\n </pre>\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets temporarily replaced. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily in the script.\n\nFollowing is updateTestDatabase.sql file used in the above script which creates and updates the test database.\n\n<blockquote>\n <pre lang=\"sql\">\n drop database testDatabaseName; create database testDatabaseName;\n use testDatabaseName;\n source /home/amit/proj_dev_backup.sql\n exit\n</pre>\n\nNow I just run this testscript and give the list of files to be tested (if any) as an input, and see the integration results far faster then before. \n\nHope this helped!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision','','','2010-05-06 17:07:44','2010-05-06 11:37:44','',643,'http://www.intelligrape.com/blog/?p=644',0,'revision','',0),(645,7,'2010-05-06 17:08:59','2010-05-06 11:38:59','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involved loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"groovy\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets temporarily replaced. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily in the script.\r\n\r\nFollowing is updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nNow I just run this testscript and give the list of files to be tested (if any) as an input, and see the integration results far faster then before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-2','','','2010-05-06 17:08:59','2010-05-06 11:38:59','',643,'http://www.intelligrape.com/blog/?p=645',0,'revision','',0),(647,7,'2010-05-06 17:14:05','2010-05-06 11:44:05','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involved loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets temporarily replaced. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily in the script.\r\n\r\nFollowing is updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration results far faster then before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-4','','','2010-05-06 17:14:05','2010-05-06 11:44:05','',643,'http://www.intelligrape.com/blog/?p=647',0,'revision','',0),(646,7,'2010-05-06 17:12:03','2010-05-06 11:42:03','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involved loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"shellscript\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets temporarily replaced. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily in the script.\r\n\r\nFollowing is updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration results far faster then before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-3','','','2010-05-06 17:12:03','2010-05-06 11:42:03','',643,'http://www.intelligrape.com/blog/?p=646',0,'revision','',0),(648,7,'2010-05-06 17:14:34','2010-05-06 11:44:34','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involved loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\n\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\n\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets temporarily replaced. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily in the script.\r\n\r\nFollowing is updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration results far faster then before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-5','','','2010-05-06 17:14:34','2010-05-06 11:44:34','',643,'http://www.intelligrape.com/blog/?p=648',0,'revision','',0),(649,7,'2010-05-07 11:42:24','2010-05-07 06:12:24','Hi Friends,\n\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\n\n<blockquote>\n\n<pre lang=\"sh\">\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\n\ncd /home/amit/applicationPath\nmv ./grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\ncp /home/amit/BootStrap.groovy ./grails-app/conf/\n\ngrails test-app -integration $@\n\nmv /home/amit/BootStrap_org.groovy ./grails-app/conf/BootStrap.groovy\nrm  /home/amit/proj_dev_backup.sql\n </pre>\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\n\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\n\n<blockquote>\n <pre lang=\"sql\">\n drop database testDatabaseName; create database testDatabaseName;\n use testDatabaseName;\n source /home/amit/proj_dev_backup.sql\n exit\n</pre>\n\nWe also need to update DataSource.groovy file for the test environment as follows: \n<pre lang=\"groovy\">\ntest {\n	dataSource {\n             dbCreate = \"update\" \n             url = \"jdbc:mysql://localhost/testDatabaseName\"\n	     driverClassName = \"com.mysql.jdbc.Driver\"\n	     username = \"myusername\"\n	     password = \"mypassword\"\n       }\n}\n</pre>\n\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration test results much faster then ever before. \n\nHope this helped!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-autosave','','','2010-05-07 11:42:24','2010-05-07 06:12:24','',643,'http://www.intelligrape.com/blog/?p=649',0,'revision','',0),(654,7,'2010-05-06 18:05:41','2010-05-06 12:35:41','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\n\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\n\r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\nrm  /home/amit/proj_dev_backup.sql\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n       }\r\n}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-10','','','2010-05-06 18:05:41','2010-05-06 12:35:41','',643,'http://www.intelligrape.com/blog/?p=654',0,'revision','',0),(652,7,'2010-05-06 17:36:01','2010-05-06 12:06:01','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\n\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\n\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n       }\r\n}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-8','','','2010-05-06 17:36:01','2010-05-06 12:06:01','',643,'http://www.intelligrape.com/blog/?p=652',0,'revision','',0),(650,7,'2010-05-06 17:18:29','2010-05-06 11:48:29','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\n\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\n\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily in this script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-6','','','2010-05-06 17:18:29','2010-05-06 11:48:29','',643,'http://www.intelligrape.com/blog/?p=650',0,'revision','',0),(651,7,'2010-05-06 17:35:22','2010-05-06 12:05:22','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\n\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\n\r\nrm /home/amit/applicationPath/grails-app/conf/BootStrap.groovy \r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n}\r\n	}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-7','','','2010-05-06 17:35:22','2010-05-06 12:05:22','',643,'http://www.intelligrape.com/blog/?p=651',0,'revision','',0),(653,7,'2010-05-06 18:01:11','2010-05-06 12:31:11','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv /home/amit/applicationPath/grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy  /home/amit/applicationPath/grails-app/conf/\r\n\r\necho \"Enter the particular file(s) to test (eg: CustomerController EmployeeService): \"\r\nread files\r\ngrails test-app -integration $files\r\n\r\nmv /home/amit/BootStrap_org.groovy /home/amit/applicationPath/grails-app/conf/BootStrap.groovy\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n       }\r\n}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as an input, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-9','','','2010-05-06 18:01:11','2010-05-06 12:31:11','',643,'http://www.intelligrape.com/blog/?p=653',0,'revision','',0),(655,7,'2010-05-10 10:17:36','2010-05-10 04:47:36','<blockquote></blockquote>','',0,'','trash','open','open','','655','','','2010-05-10 10:18:44','2010-05-10 04:48:44','',0,'http://www.intelligrape.com/blog/?p=655',0,'post','',0),(656,7,'2010-05-10 10:17:36','2010-05-10 04:47:36','<blockquote></blockquote>','',0,'','inherit','open','open','','655-revision','','','2010-05-10 10:17:36','2010-05-10 04:47:36','',655,'http://www.intelligrape.com/blog/?p=656',0,'revision','',0),(657,7,'2010-05-07 11:43:05','2010-05-07 06:13:05','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv ./grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy ./grails-app/conf/\r\n\r\ngrails test-app -integration $@\r\n\r\nmv /home/amit/BootStrap_org.groovy ./grails-app/conf/BootStrap.groovy\r\nrm  /home/amit/proj_dev_backup.sql\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n       }\r\n}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as command line arguments, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-11','','','2010-05-07 11:43:05','2010-05-07 06:13:05','',643,'http://www.intelligrape.com/blog/?p=657',0,'revision','',0),(658,7,'2010-05-10 10:19:21','2010-05-10 04:49:21','Hi Friends,\r\n\r\nI always used to spend lot of time writing integration tests as running even a single test involves loading the complete application, which includes loading complete database every time. Then I realized that data which I use for testing is always the same, why can\'t we restore the database once created, before we run the test so that at least time spent on loading data can be saved. Following is the script which I wrote and worked for me.\r\n\r\n<blockquote>\r\n\r\n<pre lang=\"sh\">\r\nmysqldump --user=myusername --password=mypassword databaseName  /home/amit/proj_dev_backup.sql\r\nmysql -u myusername --password=mypassword < /home/amit/updateTestDatabase.sql\r\n\r\ncd /home/amit/applicationPath\r\nmv ./grails-app/conf/BootStrap.groovy /home/amit/BootStrap_org.groovy\r\ncp /home/amit/BootStrap.groovy ./grails-app/conf/\r\n\r\ngrails test-app -integration $@\r\n\r\nmv /home/amit/BootStrap_org.groovy ./grails-app/conf/BootStrap.groovy\r\nrm  /home/amit/proj_dev_backup.sql\r\n </pre>\r\nIn the above script, databaseName is to be replaced with my development environment database, which is expected to be updated. Here BootStrap.groovy file gets replaced temporarily. If we like, we can also load data in a bootstrap.groovy only for development environment, then we won\'t need to replace it even temporarily as in the above script.\r\n\r\nFollowing is the updateTestDatabase.sql file used in the above script which creates and updates the test database.\r\n\r\n<blockquote>\r\n <pre lang=\"sql\">\r\n drop database testDatabaseName; create database testDatabaseName;\r\n use testDatabaseName;\r\n source /home/amit/proj_dev_backup.sql\r\n exit\r\n</pre>\r\n\r\nWe also need to update DataSource.groovy file for the test environment as follows: \r\n<pre lang=\"groovy\">\r\ntest {\r\n	dataSource {\r\n             dbCreate = \"update\" \r\n             url = \"jdbc:mysql://localhost/testDatabaseName\"\r\n	     driverClassName = \"com.mysql.jdbc.Driver\"\r\n	     username = \"myusername\"\r\n	     password = \"mypassword\"\r\n       }\r\n}\r\n</pre>\r\n\r\nNow I just run this script, provides the list of files to be tested (if any) as command line arguments, and see the integration test results much faster then ever before. \r\n\r\nHope this helped!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.IntelliGrape.com/','Save time while writing Integration tests',0,'','inherit','open','open','','643-revision-12','','','2010-05-10 10:19:21','2010-05-10 04:49:21','',643,'http://www.intelligrape.com/blog/?p=658',0,'revision','',0),(659,21,'2010-05-11 22:50:28','2010-05-11 17:20:28','\r\n\r\n<blockquote>\r\npublic class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n</blockquote>\r\n\r\n\r\n\r\n','',0,'','trash','open','open','','659','','','2010-05-11 22:53:56','2010-05-11 17:23:56','',0,'http://www.intelligrape.com/blog/?p=659',0,'post','',0),(663,12,'2010-05-13 11:19:00','2010-05-13 05:49:00','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<pre lang=\"bash\">\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\n     echo \"Deploying on Web Host $i\"\r\n     ssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone\r\n</pre>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <strong><a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a></strong> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<pre lang=\"bash\">sudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</pre>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\n\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','publish','open','open','','how-to-allow-non-root-user-to-startstop-apache-process-on-a-nix-server','','','2010-05-13 11:19:00','2010-05-13 05:49:00','',0,'http://www.intelligrape.com/blog/?p=663',0,'post','',2),(664,12,'2010-05-13 11:00:06','2010-05-13 05:30:06','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\n\nSo, my script to do the deployment on all the servers one by one is very simple:\n\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\nfor i in `echo $SERVER_IPS`\ndo\necho \"Deploying on Web Host $i\"\nssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\ndone','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision','','','2010-05-13 11:00:06','2010-05-13 05:30:06','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision/',0,'revision','',0),(660,21,'2010-05-11 22:48:00','2010-05-11 17:18:00','We had a requirement to serialize objects to XML and back again.\n\nXStream can convert instances to XML and back again.\n<pre>public class Person {</pre>\n<pre>  private String name</pre>\n<pre>  private int age</pre>\n<pre>  private Address address</pre>\n<pre>}</pre>\n<pre> </pre>\n<pre>public class Address {</pre>\n<pre>  private String street</pre>\n<pre>  private String city</pre>\n<pre>  private String state</pre>\n<pre>  private String country</pre>\n<pre>}</pre>\n \n\nXStream xstream = new XStream();   // instantiate the <code>XStream</code> class\n<pre>xstream.alias(\"person\", Person.class);  //the alias will be the root node.</pre>\n<pre> </pre>\n<pre>Person personInstance = new Person()</pre>\n<pre>// populate the person object</pre>\n<pre> </pre>\n \n\nString xml = xstream.toXML(personInstance)\n\nXML will look like :\n<pre>&lt;person&gt;</pre>\n<pre>  &lt;name&gt;Joe&lt;/name&gt;</pre>\n<pre>    &lt;age&gt;25&lt;/age&gt;</pre>\n<pre>    &lt;address&gt;</pre>\n<pre>        &lt;street&gt;12/5 Royal Street&lt;/street&gt;</pre>\n<pre>        &lt;city&gt;city name&lt;/city&gt;</pre>\n<pre>        &lt;state&gt;state name&lt;/state&gt;</pre>\n<pre>        &lt;country&gt;country name&lt;/country&gt;</pre>\n<pre>     &lt;/address&gt;</pre>\n<pre> &lt;/person&gt;</pre>\n<pre> </pre>\n<pre>To reconstruct an object, from the XML:</pre>\n<pre> </pre>\n<pre>Person person = (Person)xstream.fromXML(xml);</pre>','',0,'','inherit','open','open','','659-revision','','','2010-05-11 22:48:00','2010-05-11 17:18:00','',659,'http://www.intelligrape.com/blog/?p=660',0,'revision','',0),(662,21,'2010-05-11 22:50:28','2010-05-11 17:20:28','\r\n\r\n<blockquote>\r\npublic class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n</blockquote>\r\n\r\n\r\n\r\n','',0,'','inherit','open','open','','659-revision-3','','','2010-05-11 22:50:28','2010-05-11 17:20:28','',659,'http://www.intelligrape.com/blog/?p=662',0,'revision','',0),(661,21,'2010-05-11 22:48:02','2010-05-11 17:18:02','We had a requirement to serialize objects to XML and back again.\r\n\r\nXStream can convert instances to XML and back again.\r\n<pre>public class Person {</pre>\r\n<pre>  private String name</pre>\r\n<pre>  private int age</pre>\r\n<pre>  private Address address</pre>\r\n<pre>}</pre>\r\n<pre> </pre>\r\n<pre>public class Address {</pre>\r\n<pre>  private String street</pre>\r\n<pre>  private String city</pre>\r\n<pre>  private String state</pre>\r\n<pre>  private String country</pre>\r\n<pre>}</pre>\r\n \r\n\r\nXStream xstream = new XStream();   // instantiate the <code>XStream</code> class\r\n<pre>xstream.alias(\"person\", Person.class);  //the alias will be the root node.</pre>\r\n<pre> </pre>\r\n<pre>Person personInstance = new Person()</pre>\r\n<pre>// populate the person object</pre>\r\n<pre> </pre>\r\n \r\n\r\nString xml = xstream.toXML(personInstance)\r\n\r\nXML will look like :\r\n<pre>&lt;person&gt;</pre>\r\n<pre>  &lt;name&gt;Joe&lt;/name&gt;</pre>\r\n<pre>    &lt;age&gt;25&lt;/age&gt;</pre>\r\n<pre>    &lt;address&gt;</pre>\r\n<pre>        &lt;street&gt;12/5 Royal Street&lt;/street&gt;</pre>\r\n<pre>        &lt;city&gt;city name&lt;/city&gt;</pre>\r\n<pre>        &lt;state&gt;state name&lt;/state&gt;</pre>\r\n<pre>        &lt;country&gt;country name&lt;/country&gt;</pre>\r\n<pre>     &lt;/address&gt;</pre>\r\n<pre> &lt;/person&gt;</pre>\r\n<pre> </pre>\r\n<pre>To reconstruct an object, from the XML:</pre>\r\n<pre> </pre>\r\n<pre>Person person = (Person)xstream.fromXML(xml);</pre>','',0,'','inherit','open','open','','659-revision-2','','','2010-05-11 22:48:02','2010-05-11 17:18:02','',659,'http://www.intelligrape.com/blog/?p=661',0,'revision','',0),(665,12,'2010-05-13 11:00:39','2010-05-13 05:30:39','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple:\r\n<blockquote>SERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\necho \"Deploying on Web Host $i\"\r\nssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</blockquote>','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-2','','','2010-05-13 11:00:39','2010-05-13 05:30:39','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-2/',0,'revision','',0),(666,12,'2010-05-13 11:01:48','2010-05-13 05:31:48','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\n\nSo, my script to do the deployment on all the servers one by one is very simple:\n<blockquote>SERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\nfor i in `echo $SERVER_IPS`\ndo\necho \"Deploying on Web Host $i\"\nssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\ndone</blockquote>','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-3','','','2010-05-13 11:01:48','2010-05-13 05:31:48','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-3/',0,'revision','',0),(667,12,'2010-05-13 11:02:01','2010-05-13 05:32:01','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple:\r\n<blockquote>SERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\necho \"Deploying on Web Host $i\"\r\nssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</blockquote>','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-4','','','2010-05-13 11:02:01','2010-05-13 05:32:01','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-4/',0,'revision','',0),(668,12,'2010-05-13 11:02:17','2010-05-13 05:32:17','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple:\r\n<blockquote>SERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\necho \"Deploying on Web Host $i\"\r\nssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</blockquote>','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-5','','','2010-05-13 11:02:17','2010-05-13 05:32:17','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-5/',0,'revision','',0),(669,12,'2010-05-13 11:02:45','2010-05-13 05:32:45','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple:\r\n<code>SERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\necho \"Deploying on Web Host $i\"\r\nssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</code>','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-6','','','2010-05-13 11:02:45','2010-05-13 05:32:45','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-6/',0,'revision','',0),(670,12,'2010-05-13 11:03:10','2010-05-13 05:33:10','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple:\r\n\r\n<code>\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\n    echo \"Deploying on Web Host $i\"\r\n    ssh username@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone\r\n</code>','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-7','','','2010-05-13 11:03:10','2010-05-13 05:33:10','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-7/',0,'revision','',0),(671,12,'2010-05-13 11:15:29','2010-05-13 05:45:29','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<code>\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\necho \"Deploying on Web Host $i\"\r\nssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</code>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<code>\r\nsudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</code>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-8','','','2010-05-13 11:15:29','2010-05-13 05:45:29','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-8/',0,'revision','',0),(672,12,'2010-05-13 11:16:17','2010-05-13 05:46:17','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<code>\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\necho \"Deploying on Web Host $i\"\r\nssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</code>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <strong><a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a></strong> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<code>sudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</code>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\n\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-9','','','2010-05-13 11:16:17','2010-05-13 05:46:17','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-9/',0,'revision','',0),(673,12,'2010-05-13 11:17:15','2010-05-13 05:47:15','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<code>\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\n     echo \"Deploying on Web Host $i\"\r\n     ssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone</code>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <strong><a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a></strong> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<code>sudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</code>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\n\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-10','','','2010-05-13 11:17:15','2010-05-13 05:47:15','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-10/',0,'revision','',0),(674,12,'2010-05-13 11:17:54','2010-05-13 05:47:54','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<pre>\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\n     echo \"Deploying on Web Host $i\"\r\n     ssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone\r\n</pre>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <strong><a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a></strong> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<code>sudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</code>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\n\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-11','','','2010-05-13 11:17:54','2010-05-13 05:47:54','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-11/',0,'revision','',0),(675,12,'2010-05-13 11:18:14','2010-05-13 05:48:14','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<pre lang=\"bash\">\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\n     echo \"Deploying on Web Host $i\"\r\n     ssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone\r\n</pre>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <strong><a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a></strong> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<code>sudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</code>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\n\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-12','','','2010-05-13 11:18:14','2010-05-13 05:48:14','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-12/',0,'revision','',0),(676,12,'2010-05-13 11:18:45','2010-05-13 05:48:45','Recently, I had to write a script to deploy a Grails application on a cluster of 7 servers without prompting for any kind of passwords. The load balancer was configured so as NOT to direct any request to the node, if the Apache process is not running on the server.\r\n\r\nSo, my script to do the deployment on all the servers one by one is very simple -- (a) stop Apache (b) deploy new version of the app on Tomcat using deploy.sh script lying on the server (c)  start Apache\r\n\r\n<pre lang=\"bash\">\r\nSERVER_IPS=\"10.20.30.40 10.20.30.41 10.20.30.42\"\r\nfor i in `echo $SERVER_IPS`\r\ndo\r\n     echo \"Deploying on Web Host $i\"\r\n     ssh applicationUser@$i \"cd; apache2ctl stop; ./deploy.sh; sleep 30; apache2ctl start\"\r\ndone\r\n</pre>\r\n\r\nThe only hiccup is that the applicationUser does not have rights to start/stop Apache.  After looking around for a while, I came to know about <strong><a href=\"http://en.wikipedia.org/wiki/Setuid\">setuid</a></strong> which allow users to run an executable with the permissions of the executable\'s owner or group.\r\n\r\nSo, all I had to do in order to allow  applicationUser to bounce apache process is :\r\n\r\n<pre lang=\"bash\">sudo u+s /usr/sbin/apache2\r\nsudo u+s /usr/sbin/apache2ctl\r\n</pre>\r\nI also had to set the trusted relationship between the production servers and my machine in order to allow password-less SSH login.\r\n\r\nAfter I did the above steps, I could deploy my application to all nodes in the cluster with a single command.\r\n\r\n-Deepak','How to allow non-root user to start/stop Apache process on a *nix server',0,'','inherit','open','open','','663-revision-13','','','2010-05-13 11:18:45','2010-05-13 05:48:45','',663,'http://www.intelligrape.com/blog/2010/05/13/663-revision-13/',0,'revision','',0),(677,21,'2010-05-13 13:11:27','2010-05-13 07:41:27','Hi anshul\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nint a \r\n </pre>\r\n</blockquote>\r\n\r\n','',0,'','trash','open','open','','677','','','2010-05-13 13:12:18','2010-05-13 07:42:18','',0,'http://www.intelligrape.com/blog/?p=677',0,'post','',0),(678,21,'2010-05-13 13:08:20','2010-05-13 07:38:20','\n\n<blockquote>\n<pre class=\"groovy\">\n\n </pre>\n</blockquote>\n\n','',0,'','inherit','open','open','','677-revision','','','2010-05-13 13:08:20','2010-05-13 07:38:20','',677,'http://www.intelligrape.com/blog/2010/05/13/677-revision/',0,'revision','',0),(679,21,'2010-05-13 13:08:45','2010-05-13 07:38:45','Hi anshul\r\n\r\n<blockquote>\r\n<pre class=\"groovy\">\r\nint a \r\n </pre>\r\n</blockquote>\r\n\r\n','',0,'','inherit','open','open','','677-revision-2','','','2010-05-13 13:08:45','2010-05-13 07:38:45','',677,'http://www.intelligrape.com/blog/2010/05/13/677-revision-2/',0,'revision','',0),(680,21,'2010-05-13 13:11:27','2010-05-13 07:41:27','Hi anshul\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nint a \r\n </pre>\r\n</blockquote>\r\n\r\n','',0,'','inherit','open','open','','677-revision-3','','','2010-05-13 13:11:27','2010-05-13 07:41:27','',677,'http://www.intelligrape.com/blog/2010/05/13/677-revision-3/',0,'revision','',0),(681,17,'2010-05-13 18:03:02','2010-05-13 12:33:02','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList<Company> companyList = Company.list()\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n\r\n<blockquote>\r\n<pre lang=\"javascript\">\r\n{\r\n  \"companies\": [\r\n       {\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n       {\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n  ],\r\n  \"employees\": [\r\n       {\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n       {\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n       {\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n  ]\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool :-). How to use JSON Objects on browser is out of scope of this post. I will try to write another post soon - how to query JSON based data to produce client-side results effectively (example - client side search).\r\n\r\nCheers!!\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','publish','open','open','','create-json-object-using-grails-converter-only-selective-fields-from-lists-of-objects','','','2010-05-13 18:05:59','2010-05-13 12:35:59','',0,'http://www.intelligrape.com/blog/?p=681',0,'post','',0),(682,17,'2010-05-13 17:16:37','2010-05-13 11:46:37','&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;import grails.converters.JSON&lt;/pre&gt;&lt;/blockquote&gt;','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision','','','2010-05-13 17:16:37','2010-05-13 11:46:37','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision/',0,'revision','',0),(683,17,'2010-05-13 17:18:37','2010-05-13 11:48:37','<!-- 		@page { margin: 2cm } 		P { margin-bottom: 0.21cm } -->&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;\n\nimport grails.converters.JSON\n\n&lt;/pre&gt;&lt;/blockquote&gt;\n\n&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;\n\nHashMap jsonMap = new HashMap()\n\nList&lt;Company&gt; companyList = Company.list()\n\n<a name=\"DDE_LINK2\"></a>List&lt;Contact&gt; employeeList = Employee.list()\n\njsonMap.companies = companyList.collect {comp -&gt;\n\nreturn [id: comp.id, name: comp.name, address: comp.address]\n\n}\n\njsonMap.employees = employeeList.collect {emp -&gt;\n\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\n\n}\n\n<a name=\"DDE_LINK\"></a>render jsonMap as JSON\n\n&lt;/pre&gt;&lt;/blockquote&gt;\n\nOutput sent to Browser:\n\n&lt;blockquote&gt;&lt;pre lang=\"javascript\"&gt;\n\n{\n\n\"companies\":\n\n[\n\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\n\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\n\n],\n\n\"employees\":\n\n[\n\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\n\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\n\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\n\n]\n\n}\n\n&lt;/pre&gt;&lt;/blockquote&gt;','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-2','','','2010-05-13 17:18:37','2010-05-13 11:48:37','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-2/',0,'revision','',0),(684,17,'2010-05-13 17:20:40','2010-05-13 11:50:40','&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;import grails.converters.JSON&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;\r\n\r\nHashMap jsonMap = new HashMap()\r\n\r\nList&lt;Company&gt; companyList = Company.list()\r\n\r\n<a name=\"DDE_LINK2\"></a>List&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp -&gt;\r\n\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp -&gt;\r\n\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n\r\n}\r\n\r\n<a name=\"DDE_LINK\"></a>render jsonMap as JSON\r\n\r\n&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nOutput sent to Browser:\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"javascript\"&gt;\r\n\r\n{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n\r\n&lt;/pre&gt;&lt;/blockquote&gt;','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-3','','','2010-05-13 17:20:40','2010-05-13 11:50:40','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-3/',0,'revision','',0),(691,17,'2010-05-13 17:46:11','2010-05-13 12:16:11','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n\r\n<blockquote><pre lang=\"groovy\">import grails.converters.JSON</pre></blockquote>\r\n\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n\r\nHashMap jsonMap = new HashMap()\r\n\r\nList<Company> companyList = Company.list()\r\n\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\n\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\n\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n\r\n}\r\n\r\nrender jsonMap as JSON\r\n\r\n</pre></blockquote>\r\n\r\nSo you got it - magic lies in \"render jsonMap as JSON\" statement.\r\n\r\nOutput sent to Browser:\r\n\r\n<blockquote><pre lang=\"javascript\">\r\n\r\n{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n\r\n</pre></blockquote>\r\n\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-6','','','2010-05-13 17:46:11','2010-05-13 12:16:11','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-6/',0,'revision','',0),(685,21,'2010-05-13 17:47:24','2010-05-13 12:17:24','<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nint a\r\n\r\n</pre>\r\n</blockquote>﻿','',0,'','trash','open','open','','685','','','2010-05-13 17:47:50','2010-05-13 12:17:50','',0,'http://www.intelligrape.com/blog/?p=685',0,'post','',0),(686,21,'2010-05-13 17:45:02','2010-05-13 12:15:02','\n<blockquote>\n<pre lang=\"groovy\">\nint a\n </pre>\n</blockquote>','',0,'','inherit','open','open','','685-revision','','','2010-05-13 17:45:02','2010-05-13 12:15:02','',685,'http://www.intelligrape.com/blog/2010/05/13/685-revision/',0,'revision','',0),(687,17,'2010-05-13 17:43:35','2010-05-13 12:13:35','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;import grails.converters.JSON&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;\r\n\r\nHashMap jsonMap = new HashMap()\r\n\r\nList&lt;Company&gt; companyList = Company.list()\r\n\r\n<a name=\"DDE_LINK2\"></a>List&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp -&gt;\r\n\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp -&gt;\r\n\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n\r\n}\r\n\r\n<a name=\"DDE_LINK\"></a>render jsonMap as JSON\r\n\r\n&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nSo you got it - magic lies in \"render jsonMap as JSON\" statement.\r\n\r\nOutput sent to Browser:\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"javascript\"&gt;\r\n\r\n{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n\r\n&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-4','','','2010-05-13 17:43:35','2010-05-13 12:13:35','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-4/',0,'revision','',0),(688,21,'2010-05-13 17:45:35','2010-05-13 12:15:35','&lt;blockquote&gt;\r\n&lt;pre lang=\"groovy\"&gt;int a&lt;/pre&gt;\r\n&lt;/blockquote&gt;﻿','',0,'','inherit','open','open','','685-revision-2','','','2010-05-13 17:45:35','2010-05-13 12:15:35','',685,'http://www.intelligrape.com/blog/2010/05/13/685-revision-2/',0,'revision','',0),(693,21,'2010-05-13 17:47:24','2010-05-13 12:17:24','<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nint a\r\n\r\n</pre>\r\n</blockquote>﻿','',0,'','inherit','open','open','','685-revision-5','','','2010-05-13 17:47:24','2010-05-13 12:17:24','',685,'http://www.intelligrape.com/blog/2010/05/13/685-revision-5/',0,'revision','',0),(689,21,'2010-05-13 17:46:01','2010-05-13 12:16:01','&lt;blockquote&gt;\r\n&lt;pre lang=\"groovy\"&gt;\r\n\r\nint a\r\n\r\n&lt;/pre&gt;\r\n&lt;/blockquote&gt;﻿','',0,'','inherit','open','open','','685-revision-3','','','2010-05-13 17:46:01','2010-05-13 12:16:01','',685,'http://www.intelligrape.com/blog/2010/05/13/685-revision-3/',0,'revision','',0),(690,17,'2010-05-13 17:45:37','2010-05-13 12:15:37','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;import grails.converters.JSON&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"groovy\"&gt;\r\n\r\nHashMap jsonMap = new HashMap()\r\n\r\nList&lt;Company&gt; companyList = Company.list()\r\n\r\n<a name=\"DDE_LINK2\"></a>List&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp -&gt;\r\n\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp -&gt;\r\n\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n\r\n}\r\n\r\n<a name=\"DDE_LINK\"></a>render jsonMap as JSON\r\n\r\n&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nSo you got it - magic lies in \"render jsonMap as JSON\" statement.\r\n\r\nOutput sent to Browser:\r\n\r\n&lt;blockquote&gt;&lt;pre lang=\"javascript\"&gt;\r\n\r\n{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n\r\n&lt;/pre&gt;&lt;/blockquote&gt;\r\n\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-5','','','2010-05-13 17:45:37','2010-05-13 12:15:37','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-5/',0,'revision','',0),(692,21,'2010-05-13 17:46:07','2010-05-13 12:16:07','&lt;blockquote&gt;\r\n&lt;pre lang=\"groovy\"&gt;\r\n\r\nint a\r\n\r\n&lt;/pre&gt;\r\n&lt;/blockquote&gt;﻿','',0,'','inherit','open','open','','685-revision-4','','','2010-05-13 17:46:07','2010-05-13 12:16:07','',685,'http://www.intelligrape.com/blog/2010/05/13/685-revision-4/',0,'revision','',0),(694,17,'2010-05-13 17:47:00','2010-05-13 12:17:00','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n\r\n<blockquote><pre lang=\"groovy\">import grails.converters.JSON</pre></blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n\r\nHashMap jsonMap = new HashMap()\r\n\r\nList<Company> companyList = Company.list()\r\n\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\n\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\n\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n\r\n}\r\n\r\nrender jsonMap as JSON\r\n\r\n</pre></blockquote>\r\n\r\nSo you got it - magic lies in \"render jsonMap as JSON\" statement.\r\n\r\nOutput sent to Browser:\r\n\r\n<blockquote><pre lang=\"javascript\">\r\n\r\n{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n\r\n</pre></blockquote>\r\n\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-7','','','2010-05-13 17:47:00','2010-05-13 12:17:00','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-7/',0,'revision','',0),(695,17,'2010-05-13 17:50:54','2010-05-13 12:20:54','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n\r\nHashMap jsonMap = new HashMap()\r\nList&lt;Company&gt; companyList = Company.list()\r\nList&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp -&gt;\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp -&gt;\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n \r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n<blockquote>\r\n<pre lang=\"javascript\">{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-8','','','2010-05-13 17:50:54','2010-05-13 12:20:54','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-8/',0,'revision','',0),(696,17,'2010-05-13 17:52:00','2010-05-13 12:22:00','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList&lt;Company&gt; companyList = Company.list()\r\nList&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp -&gt;\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp -&gt;\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n<blockquote>\r\n<pre lang=\"javascript\">{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-9','','','2010-05-13 17:52:00','2010-05-13 12:22:00','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-9/',0,'revision','',0),(697,17,'2010-05-13 17:52:58','2010-05-13 12:22:58','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList&lt;Company&gt; companyList = Company.list()\r\nList&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp -&gt;\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp -&gt;\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n<blockquote>\r\n<pre lang=\"javascript\">{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-10','','','2010-05-13 17:52:58','2010-05-13 12:22:58','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-10/',0,'revision','',0),(698,17,'2010-05-13 17:53:28','2010-05-13 12:23:28','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList&lt;Company&gt; companyList = Company.list()\r\nList&lt;Contact&gt; employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n<blockquote>\r\n<pre lang=\"javascript\">{\r\n\r\n\"companies\":\r\n\r\n[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-11','','','2010-05-13 17:53:28','2010-05-13 12:23:28','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-11/',0,'revision','',0),(699,17,'2010-05-13 17:55:09','2010-05-13 12:25:09','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList<Company> companyList = Company.list()\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n\r\n<blockquote>\r\n<pre lang=\"javascript\">\r\n{\r\n  \"companies\":[\r\n\r\n{\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n\r\n{\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n\r\n],\r\n\r\n\"employees\":\r\n\r\n[\r\n\r\n{\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n\r\n{\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n\r\n{\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n\r\n]\r\n\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-12','','','2010-05-13 17:55:09','2010-05-13 12:25:09','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-12/',0,'revision','',0),(700,17,'2010-05-13 17:56:47','2010-05-13 12:26:47','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList<Company> companyList = Company.list()\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n\r\n<blockquote>\r\n<pre lang=\"javascript\">\r\n{\r\n  \"companies\": [\r\n       {\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n       {\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n  ],\r\n  \"employees\": [\r\n       {\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n       {\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n       {\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n  ]\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool. How to use JSON Objects on browser is out of scope of this post. I will try to write another post how to query JSON based data to produce client-side results effectively.\r\n\r\nCheers!!\r\n\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-13','','','2010-05-13 17:56:47','2010-05-13 12:26:47','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-13/',0,'revision','',0),(701,17,'2010-05-13 17:59:13','2010-05-13 12:29:13','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList<Company> companyList = Company.list()\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n\r\n<blockquote>\r\n<pre lang=\"javascript\">\r\n{\r\n  \"companies\": [\r\n       {\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n       {\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n  ],\r\n  \"employees\": [\r\n       {\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n       {\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n       {\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n  ]\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool :-). How to use JSON Objects on browser is out of scope of this post. I will try to write another post soon - how to query JSON based data to produce client-side results effectively (example - client side search).\r\n\r\nCheers!!\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-14','','','2010-05-13 17:59:13','2010-05-13 12:29:13','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-14/',0,'revision','',0),(702,17,'2010-05-13 18:03:02','2010-05-13 12:33:02','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList<Company> companyList = Company.list()\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n\r\n<blockquote>\r\n<pre lang=\"javascript\">\r\n{\r\n  \"companies\": [\r\n       {\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n       {\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n  ],\r\n  \"employees\": [\r\n       {\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n       {\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n       {\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n  ]\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool :-). How to use JSON Objects on browser is out of scope of this post. I will try to write another post soon - how to query JSON based data to produce client-side results effectively (example - client side search).\r\n\r\nCheers!!\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-revision-15','','','2010-05-13 18:03:02','2010-05-13 12:33:02','',681,'http://www.intelligrape.com/blog/2010/05/13/681-revision-15/',0,'revision','',0),(703,21,'2010-05-14 16:08:07','2010-05-14 10:38:07','XStream is a simple Java library to serialize objects to XML and back again. \r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n </pre>\r\n</blockquote>\r\nThe following code will convert instance to XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name></name>\r\n    <age></age>\r\n    <address>\r\n    	<street></street>\r\n    	<city></city>\r\n    	<state></state>\r\n    	<country></country>\r\n     </address>\r\n </person>\r\n </pre>\r\n</blockquote>\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\nAnshul Sharma','Serializing objects to XML',0,'','publish','open','open','','serializing-objects-to-xml','','','2010-05-14 16:08:07','2010-05-14 10:38:07','',0,'http://www.intelligrape.com/blog/?p=703',0,'post','',0),(704,21,'2010-05-13 22:52:48','2010-05-13 17:22:48','We had a requirement to serialize objects to XML and back again.\n\nXStream can convert instances to XML and back again.\n\nIf we have a Person class as follows:\n<blockquote>\n<pre lang=\"groovy\">\n  public class Person {\n  private String name\n  private int age\n  private Address address\n}\n\npublic class Address {\n  private String street\n  private String city\n  private String state\n  private String country\n}\n\n </pre>\n</blockquote>\n\n<blockquote>\n<pre lang=\"groovy\">\nXStream xstream = new XStream();   // instantiate the XStream class\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\n\nPerson personInstance = new Person()\n// populate the person object\n\n\nString xml = xstream.toXML(personInstance) </pre>\n</blockquote>\n \n\n<blockquote>\n<pre lang=\"groovy\">\n<person>\n  <name>Joe</name>\n    <age>25</age>\n    <address>\n    	<street>12/5 Royal Street</street>\n    	<city>city name</city>\n    	<state>state name</state>\n    	<country>country name</country>\n     </address>\n </person>\n\n </pre>\n</blockquote>\nXML will look like :\n\n\nTo reconstruct an object, from the XML:\n<blockquote>\n<pre lang=\"groovy\">\nPerson person = (Person)xstream.fromXML(xml) </pre>\n</blockquote>\n\n','Xml',0,'','inherit','open','open','','703-revision','','','2010-05-13 22:52:48','2010-05-13 17:22:48','',703,'http://www.intelligrape.com/blog/2010/05/13/703-revision/',0,'revision','',0),(728,21,'2010-05-14 16:02:38','2010-05-14 10:32:38','XStream can convert instances to XML and back again.\nSuppose we have a Person class as follows:\n<blockquote>\n<pre lang=\"groovy\">\n  public class Person {\n  private String name\n  private int age\n  private Address address\n}\n\npublic class Address {\n  private String street\n  private String city\n  private String state\n  private String country\n}\n </pre>\n</blockquote>\nThe following code will convert instance to XML:\n<blockquote>\n<pre lang=\"groovy\">\nXStream xstream = new XStream();   // instantiate the XStream class\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\n\nPerson personInstance = new Person()\n// populate the person object\n\nString xml = xstream.toXML(personInstance) </pre>\n\n</blockquote>\n \nXML will look like :\n<blockquote>\n<pre lang=\"groovy\">\n<person>\n  <name></name>\n    <age></age>\n    <address>\n    	<street></street>\n    	<city></city>\n    	<state></state>\n    	<country></country>\n     </address>\n </person>\n </pre>\n</blockquote>\nTo reconstruct an object, from the XML:\n<blockquote>\n<pre lang=\"groovy\">\nPerson person = (Person)xstream.fromXML(xml) </pre>\n</blockquote>\n\nHope this helpled!\n\nCheers!\n\nAnshul Sharma','Serializing objects to XML',0,'','inherit','open','open','','703-revision-7','','','2010-05-14 16:02:38','2010-05-14 10:32:38','',703,'http://www.intelligrape.com/blog/2010/05/14/703-revision-7/',0,'revision','',0),(705,21,'2010-05-13 22:52:49','2010-05-13 17:22:49','We had a requirement to serialize objects to XML and back again.\r\n\r\nXStream can convert instances to XML and back again.\r\n\r\nIf we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n</blockquote>\r\n \r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name>Joe</name>\r\n    <age>25</age>\r\n    <address>\r\n    	<street>12/5 Royal Street</street>\r\n    	<city>city name</city>\r\n    	<state>state name</state>\r\n    	<country>country name</country>\r\n     </address>\r\n </person>\r\n\r\n </pre>\r\n</blockquote>\r\nXML will look like :\r\n\r\n\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\n','Xml',0,'','inherit','open','open','','703-revision-2','','','2010-05-13 22:52:49','2010-05-13 17:22:49','',703,'http://www.intelligrape.com/blog/2010/05/13/703-revision-2/',0,'revision','',0),(706,21,'2010-05-13 22:54:17','2010-05-13 17:24:17','We had a requirement to serialize objects to XML and back again.\r\n\r\nXStream can convert instances to XML and back again.\r\n\r\nIf we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name>Joe</name>\r\n    <age>25</age>\r\n    <address>\r\n    	<street>12/5 Royal Street</street>\r\n    	<city>city name</city>\r\n    	<state>state name</state>\r\n    	<country>country name</country>\r\n     </address>\r\n </person>\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n\r\n\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\n','Xml',0,'','inherit','open','open','','703-revision-3','','','2010-05-13 22:54:17','2010-05-13 17:24:17','',703,'http://www.intelligrape.com/blog/2010/05/13/703-revision-3/',0,'revision','',0),(707,21,'2010-05-13 23:05:24','2010-05-13 17:35:24','\r\nXStream can convert instances to XML and back again.\r\n\r\nIf we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name>Joe</name>\r\n    <age>25</age>\r\n    <address>\r\n    	<street>12/5 Royal Street</street>\r\n    	<city>city name</city>\r\n    	<state>state name</state>\r\n    	<country>country name</country>\r\n     </address>\r\n </person>\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n\r\n\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\n','Serializing objects to XML and back again',0,'','inherit','open','open','','703-revision-4','','','2010-05-13 23:05:24','2010-05-13 17:35:24','',703,'http://www.intelligrape.com/blog/2010/05/13/703-revision-4/',0,'revision','',0),(708,21,'2010-05-13 23:10:20','2010-05-13 17:40:20','\r\nXStream can convert instances to XML and back again.\r\n\r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n </pre>\r\n</blockquote>\r\nInitializing XStream:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name>Joe</name>\r\n    <age>25</age>\r\n    <address>\r\n    	<street>12/5 Royal Street</street>\r\n    	<city>city name</city>\r\n    	<state>state name</state>\r\n    	<country>country name</country>\r\n     </address>\r\n </person>\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n\r\n\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\n\r\nAnshul Sharma','Serializing objects to XML and back again',0,'','inherit','open','open','','703-revision-5','','','2010-05-13 23:10:20','2010-05-13 17:40:20','',703,'http://www.intelligrape.com/blog/2010/05/13/703-revision-5/',0,'revision','',0),(709,21,'2010-05-13 23:11:23','2010-05-13 17:41:23','\r\nXStream can convert instances to XML and back again.\r\n\r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n\r\n </pre>\r\n</blockquote>\r\nInitializing XStream:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name>Joe</name>\r\n    <age>25</age>\r\n    <address>\r\n    	<street>12/5 Royal Street</street>\r\n    	<city>city name</city>\r\n    	<state>state name</state>\r\n    	<country>country name</country>\r\n     </address>\r\n </person>\r\n\r\n </pre>\r\n</blockquote>\r\n\r\n\r\n\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\n\r\nAnshul Sharma','Serializing objects to XML and back again',0,'','inherit','open','open','','703-revision-6','','','2010-05-13 23:11:23','2010-05-13 17:41:23','',703,'http://www.intelligrape.com/blog/2010/05/13/703-revision-6/',0,'revision','',0),(710,15,'2010-05-14 14:06:02','2010-05-14 08:36:02','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nl is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (command to go to end of the word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\'  since \'.\' - period is the last character of your line.\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !! It is an interactive tutorial which lets you practice while you learn.\r\n\r\nOn the ending note, I wish you all good time with Vi and will try to continue writing more about Vi editor in the future blogs.\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','publish','open','open','','vi-editor','','','2010-05-14 14:14:51','2010-05-14 08:44:51','',0,'http://www.intelligrape.com/blog/?p=710',0,'post','',0),(711,15,'2010-05-14 13:35:14','2010-05-14 08:05:14','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\n\nFirst things, first : WHAT IS Vi?\n\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\n\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\n\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\n\nLet\'s start with the basics now:\n\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\n\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\nA nice tip to remember the movement keys :\n\nh is on the left – so left it goes,\n\nk is on the right – so right it goes,\n\nj looks like a down arrow key – so down it goes,\n\nk  (well the only way to go now is UP) – so up it goes.\n\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\n\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\n\nThe names say it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\n\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\n\nWay 2 – Press e (comand to go to the end of word) again and again till you reach your destination.\n\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\n\nExample: “This is a sample line.”\n\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\' .\n\nWay 4 – Just hit the dollar sign i.e. \'$\'.\n\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\n\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\n\nWell, the good place to start learning Vi or Vim is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !!\n\n- Abhishek\n\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision','','','2010-05-14 13:35:14','2010-05-14 08:05:14','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision/',0,'revision','',0),(712,15,'2010-05-14 13:35:24','2010-05-14 08:05:24','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nk is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe names say it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (comand to go to the end of word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\' .\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi or Vim is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !!\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision-2','','','2010-05-14 13:35:24','2010-05-14 08:05:24','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision-2/',0,'revision','',0),(713,15,'2010-05-14 13:38:47','2010-05-14 08:08:47','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nl is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (comand to go to the end of word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\' .\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi or Vim is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !!\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision-3','','','2010-05-14 13:38:47','2010-05-14 08:08:47','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision-3/',0,'revision','',0),(714,7,'2010-05-14 14:20:08','2010-05-14 08:50:08','Hi Friends,\r\n\r\nTo retrieve difference between two dates with finer details which would display their difference as 2 years 7 weeks 3 days 2 hours 5 mins ago is given below.\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.years = (difference / 365).toInteger()\r\n    if(diffMap.years)\r\n       difference = (difference) % 365\r\n    diffMap.days = difference % 7\r\n    diffMap.weeks = (difference - diffMap.days) / 7  \r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Difference b/w two dates with fine-grained details',0,'','publish','open','open','','grails-date-difference-with-finer-details','','','2010-05-17 09:47:37','2010-05-17 04:17:37','',0,'http://www.intelligrape.com/blog/?p=714',0,'post','',0),(715,15,'2010-05-14 13:50:23','2010-05-14 08:20:23','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nl is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (command to go to the end of word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\' .\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi or Vim is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !!\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision-4','','','2010-05-14 13:50:23','2010-05-14 08:20:23','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision-4/',0,'revision','',0),(716,15,'2010-05-14 13:51:24','2010-05-14 08:21:24','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nl is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (command to go to end of the word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\' .\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi or Vim is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !!\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision-5','','','2010-05-14 13:51:24','2010-05-14 08:21:24','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision-5/',0,'revision','',0),(717,15,'2010-05-14 14:03:38','2010-05-14 08:33:38','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nl is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (command to go to end of the word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\'  since \'.\' - period is the last character of your line.\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi or Vim is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !! It is an interactive tutorial which lets you practice while you learn.\r\n\r\nOn the ending note, I wish you all good time with Vi and will try to continue writing more about Vi editor in the future blogs.\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision-6','','','2010-05-14 14:03:38','2010-05-14 08:33:38','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision-6/',0,'revision','',0),(718,15,'2010-05-14 14:14:47','2010-05-14 08:44:47','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\n\nFirst things, first : WHAT IS Vi?\n\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\n\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\n\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\n\nLet\'s start with the basics now:\n\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\n\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\nA nice tip to remember the movement keys :\n\nh is on the left – so left it goes,\n\nl is on the right – so right it goes,\n\nj looks like a down arrow key – so down it goes,\n\nk  (well the only way to go now is UP) – so up it goes.\n\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\n\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\n\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\n\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\n\nWay 2 – Press e (command to go to end of the word) again and again till you reach your destination.\n\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\n\nExample: “This is a sample line.”\n\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\'  since \'.\' - period is the last character of your line.\n\nWay 4 – Just hit the dollar sign i.e. \'$\'.\n\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\n\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\n\nWell, the good place to start learning Vi is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !! It is an interactive tutorial which lets you practice while you learn.\n\nOn the ending note, I wish you all good time with Vi and will try to continue writing more about Vi editor in the future blogs.\n\n- Abhishek\n\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-autosave','','','2010-05-14 14:14:47','2010-05-14 08:44:47','',710,'http://www.intelligrape.com/blog/2010/05/14/710-autosave/',0,'revision','',0),(719,15,'2010-05-14 14:06:02','2010-05-14 08:36:02','I will try my best to give you some tips to make Vi look more interesting and easy to use for all you guys. I have read few articles and tutorials about Vi and will try to summarize some key points here.\r\n\r\nFirst things, first : WHAT IS Vi?\r\n\r\nVi is NOT just an editor. It has evolved to be something more than just a plain text-editor with cool features. It can easily be an IDE for programmers (but only after you become an expert in Vi). But before going into how Vi can help you in technical terms, I would like to emphasize about how to \'let go\' of the fear of using a Vi editor.\r\n\r\nVi is your friend. An interesting friend. Only you have to know its language (read commands). The good thing about Vi is that it lets you perform create, edit, delete, save, find, count, select, copy/paste and so many other operations without forcing you to move your hands away from the home keys/home row (and yes, I am talking about the home keys of \'Touch Typing\' fame). Just with a single keystroke or a combination of few keystrokes you can literally achieve anything you want to do while text-editing your documents or coding a super-cool program and that too all in a comfort of your keyboard and nice placement of your hands.\r\n\r\nThe learning curve is steep, I agree but the ROI is steeper. It is more about how you see Vi. A capable editor or a demanding one. I read few articles; used it a little bit and am convinced that it is a capable editor.\r\n\r\nLet\'s start with the basics now:\r\n\r\n<strong>Let\'s DO away with mouse. I WANNA move around through the keyboard.</strong>\r\n\r\nThe home keys, again !!! Hit h,j,k,l – to move left, down, up, and right respectively.\r\nA nice tip to remember the movement keys :\r\n\r\nh is on the left – so left it goes,\r\n\r\nl is on the right – so right it goes,\r\n\r\nj looks like a down arrow key – so down it goes,\r\n\r\nk  (well the only way to go now is UP) – so up it goes.\r\n\r\nIf you have a photographic memory, this <a href=\"http://www.tentacle.franken.de/adm3a/adm3a-hjkl.jpg\" target=\"_blank\">picture</a> might help you. This is an <a href=\"http://www.tentacle.franken.de/adm3a/\" target=\"_blank\">ADM3A</a> terminal, the type of machine used originally by Bill Joy (the creator of Vi) to code the C shell on which Vi runs. This could be the reason why h,j,k,l are movement keys.\r\n\r\n<strong>The modes in Vi : Command mode and Insert mode.</strong>\r\n\r\nThe name says it all. In the Command mode, Vi waits for your commands i.e. the keystrokes to let you copy, move, replace, delete, change, go to a particular line/word etc. The good thing about Vi is it gives you different ways to achieve the same thing. You want to go end of current line: you can achieve that in different ways\r\n\r\nWay 1 – Pressing l (the small L) again and again till you reach end of line.\r\n\r\nWay 2 – Press e (command to go to end of the word) again and again till you reach your destination.\r\n\r\nWay 3 -  Press f (command to find a character) followed by the character (which is the last character of your line) again and again to reach the end of line.\r\n\r\nExample: “This is a sample line.”\r\n\r\nNow, to reach the end of this line(assuming your cursor is somewhere on the line) all you have to do is press \'f\' followed by \'.\'  since \'.\' - period is the last character of your line.\r\n\r\nWay 4 – Just hit the dollar sign i.e. \'$\'.\r\n\r\nAnd this list is still not exhaustive, I believe. The more familiar you will become with Vi the more ways you will have to achieve the things. Some smarter ways, some dumber ways. But they all will get the job done.\r\n\r\nThe second mode is the<strong> Insert mode</strong>. In this mode, the Vi takes a back seat (to say so) and lets you  modify the contents of your document the way you want to. It is the normal text edit mode that we work on while using Notepad, Wordpad, MS Word, gedit and so on.\r\n\r\nWell, the good place to start learning Vi is vimtutor. Open the shell(terminal) for Linux, type in \'vimtutor\' and \'get going\' !! It is an interactive tutorial which lets you practice while you learn.\r\n\r\nOn the ending note, I wish you all good time with Vi and will try to continue writing more about Vi editor in the future blogs.\r\n\r\n- Abhishek\r\n\r\n[Intelligrape Software Pvt. Ltd.]','Vi Editor',0,'','inherit','open','open','','710-revision-7','','','2010-05-14 14:06:02','2010-05-14 08:36:02','',710,'http://www.intelligrape.com/blog/2010/05/14/710-revision-7/',0,'revision','',0),(720,7,'2010-05-14 14:15:51','2010-05-14 08:45:51','Hi Friends,\n\nI just wrote a function and a taglib to retrieve difference between two dates which would display difference as 1 year 7 weeks 3 days 2 hours 5 mins ago. \n\n\n\n<blockquote><pre lang=\"groovy\">\n /**\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \n   */\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\n    Long difference = newDate.time - oldDate.time\n    Map diffMap =[:]\n    difference = difference / 1000\n    diffMap.seconds = difference % 60\n    difference = (difference - diffMap.seconds) / 60\n    diffMap.minutes = difference % 60\n    difference = (difference - diffMap.minutes) / 60\n    diffMap.hours = difference % 24\n    difference = (difference - diffMap.hours) / 24\n    diffMap.days = difference % 7\n    difference = (difference - diffMap.days) / 7\n    diffMap.weeks = difference % 52\n    diffMap.years = (difference - diffMap.weeks) / 52\n    return diffMap\n  }\n  \n</pre></blockquote>\n\nThe taglib to display the date difference in detail is given below \n<blockquote>\ndef timeDiffInDetail = {attrs ->\n        Map diff = DateUtil.getDiffernceInDates(status.postDate, attrs.newDate ?: new Date())\n        String result =  diff.years ? diff.years + \" years \" : \"\"\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\n        result += diff.days ? diff.days + \" days \" : \"\"\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\n        result += diff.minutes ? diff.minutes + \" minutes \" : \"\"\n        result += diff.seconds ? diff.seconds + \" seconds ago\" : \"\"\n        if (result)\n          out << result\n        else\n          out << \" 0 seconds ago\"\n}\n</blockquote>\n','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision','','','2010-05-14 14:15:51','2010-05-14 08:45:51','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision/',0,'revision','',0),(721,7,'2010-05-14 14:16:51','2010-05-14 08:46:51','Hi Friends,\n\nI just wrote a function and a taglib to retrieve difference between two dates which would display difference as 1 year 7 weeks 3 days 2 hours 5 mins ago. \n\n\n\n<blockquote><pre lang=\"groovy\">\n /**\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \n   */\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\n    Long difference = newDate.time - oldDate.time\n    Map diffMap =[:]\n    difference = difference / 1000\n    diffMap.seconds = difference % 60\n    difference = (difference - diffMap.seconds) / 60\n    diffMap.minutes = difference % 60\n    difference = (difference - diffMap.minutes) / 60\n    diffMap.hours = difference % 24\n    difference = (difference - diffMap.hours) / 24\n    diffMap.days = difference % 7\n    difference = (difference - diffMap.days) / 7\n    diffMap.weeks = difference % 52\n    diffMap.years = (difference - diffMap.weeks) / 52\n    return diffMap\n  }\n  \n</pre></blockquote>\n\nThe taglib to display the date difference in detail is given below \n<blockquote>\ndef timeDiffInDetail = {attrs ->\nMap diff = DateUtil.getDiffernceInDates(status.postDate, attrs.newDate ?: new Date())\n        String result =  diff.years ? diff.years + \" years \" : \"\"\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\n        result += diff.days ? diff.days + \" days \" : \"\"\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\n        if (result)\n          out << result\n        else\n          out << \" 0 minutes ago\"\n}\n</blockquote>\n\nHope this helpled!\n\nCheers!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-2','','','2010-05-14 14:16:51','2010-05-14 08:46:51','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-2/',0,'revision','',0),(722,7,'2010-05-14 14:17:31','2010-05-14 08:47:31','Hi Friends,\r\n\r\nI just wrote a function and a taglib to retrieve difference between two dates which would display difference as 1 year 7 weeks 3 days 2 hours 5 mins ago. \r\n\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.days = difference % 7\r\n    difference = (difference - diffMap.days) / 7\r\n    diffMap.weeks = difference % 52\r\n    diffMap.years = (difference - diffMap.weeks) / 52\r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\nMap diff = DateUtil.getDiffernceInDates(status.postDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-3','','','2010-05-14 14:17:31','2010-05-14 08:47:31','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-3/',0,'revision','',0),(723,7,'2010-05-14 14:18:50','2010-05-14 08:48:50','Hi Friends,\r\n\r\nI just wrote a function and a taglib to retrieve difference between two dates which would display difference as 1 year 7 weeks 3 days 2 hours 5 mins ago. \r\n\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.days = difference % 7\r\n    difference = (difference - diffMap.days) / 7\r\n    diffMap.weeks = difference % 52\r\n    diffMap.years = (difference - diffMap.weeks) / 52\r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\nMap diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-4','','','2010-05-14 14:18:50','2010-05-14 08:48:50','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-4/',0,'revision','',0),(724,7,'2010-05-14 14:19:58','2010-05-14 08:49:58','Hi Friends,\r\n\r\nI just wrote a function and a taglib to retrieve difference between two dates which would display difference as 1 year 7 weeks 3 days 2 hours 5 mins ago. \r\n\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.days = difference % 7\r\n    difference = (difference - diffMap.days) / 7\r\n    diffMap.weeks = difference % 52\r\n    diffMap.years = (difference - diffMap.weeks) / 52\r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-5','','','2010-05-14 14:19:58','2010-05-14 08:49:58','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-5/',0,'revision','',0),(725,7,'2010-05-17 09:47:21','2010-05-17 04:17:21','Hi Friends,\n\nTo retrieve difference between two dates with finer details which would display their difference as 2 years 7 weeks 3 days 2 hours 5 mins ago is given below.\n\n\n<blockquote><pre lang=\"groovy\">\n /**\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \n   */\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\n    Long difference = newDate.time - oldDate.time\n    Map diffMap =[:]\n    difference = difference / 1000\n    diffMap.seconds = difference % 60\n    difference = (difference - diffMap.seconds) / 60\n    diffMap.minutes = difference % 60\n    difference = (difference - diffMap.minutes) / 60\n    diffMap.hours = difference % 24\n    difference = (difference - diffMap.hours) / 24\n    diffMap.years = (difference / 365).toInteger()\n    if(diffMap.years)\n       difference = (difference) % 365\n    diffMap.days = difference % 7\n    diffMap.weeks = (difference - diffMap.days) / 7  \n    return diffMap\n  }\n  \n</pre></blockquote>\n\nThe taglib to display the date difference in detail is given below \n<blockquote>\n<pre lang=\"groovy\">\ndef timeDiffInDetail = {attrs ->\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\n        String result =  diff.years ? diff.years + \" years \" : \"\"\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\n        result += diff.days ? diff.days + \" days \" : \"\"\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\n        if (result)\n          out << result\n        else\n          out << \" 0 minutes ago\"\n}\n</pre>\n</blockquote>\n\nHope this helpled!\n\nCheers!\n\n~~Amit Jain~~\namit@intelligrape.com\nhttp://www.intelligrape.com','Grails : Difference b/w two dates with fine-grained details',0,'','inherit','open','open','','714-autosave','','','2010-05-17 09:47:21','2010-05-17 04:17:21','',714,'http://www.intelligrape.com/blog/2010/05/14/714-autosave/',0,'revision','',0),(726,7,'2010-05-14 14:20:08','2010-05-14 08:50:08','Hi Friends,\r\n\r\nI just wrote a function and a taglib to retrieve difference between two dates which would display difference as 1 year 7 weeks 3 days 2 hours 5 mins ago. \r\n\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.days = difference % 7\r\n    difference = (difference - diffMap.days) / 7\r\n    diffMap.weeks = difference % 52\r\n    diffMap.years = (difference - diffMap.weeks) / 52\r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-6','','','2010-05-14 14:20:08','2010-05-14 08:50:08','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-6/',0,'revision','',0),(727,7,'2010-05-14 14:24:12','2010-05-14 08:54:12','Hi Friends,\r\n\r\nTo retrieve difference between two dates with finer details which would display their difference as 2 years 7 weeks 3 days 2 hours 5 mins ago is given below.\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.days = difference % 7\r\n    difference = (difference - diffMap.days) / 7\r\n    diffMap.weeks = difference % 52\r\n    diffMap.years = (difference - diffMap.weeks) / 52\r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-7','','','2010-05-14 14:24:12','2010-05-14 08:54:12','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-7/',0,'revision','',0),(729,21,'2010-05-14 16:02:44','2010-05-14 10:32:44','XStream can convert instances to XML and back again.\r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n </pre>\r\n</blockquote>\r\nThe following code will convert instance to XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name></name>\r\n    <age></age>\r\n    <address>\r\n    	<street></street>\r\n    	<city></city>\r\n    	<state></state>\r\n    	<country></country>\r\n     </address>\r\n </person>\r\n </pre>\r\n</blockquote>\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\nAnshul Sharma','Serializing objects to XML',0,'','inherit','open','open','','703-revision-8','','','2010-05-14 16:02:44','2010-05-14 10:32:44','',703,'http://www.intelligrape.com/blog/2010/05/14/703-revision-8/',0,'revision','',0),(730,21,'2010-05-14 16:03:51','2010-05-14 10:33:51','XStream can convert instances to XML and back again.\r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n </pre>\r\n</blockquote>\r\nThe following code will convert instance to XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name></name>\r\n    <age></age>\r\n    <address>\r\n    	<street></street>\r\n    	<city></city>\r\n    	<state></state>\r\n    	<country></country>\r\n     </address>\r\n </person>\r\n </pre>\r\n</blockquote>\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\nAnshul Sharma','Serializing objects to XML',0,'','inherit','open','open','','703-revision-9','','','2010-05-14 16:03:51','2010-05-14 10:33:51','',703,'http://www.intelligrape.com/blog/2010/05/14/703-revision-9/',0,'revision','',0),(731,21,'2010-05-14 16:04:31','2010-05-14 10:34:31','XStream can convert instances to XML and back again.\r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n </pre>\r\n</blockquote>\r\nThe following code will convert instance to XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name></name>\r\n    <age></age>\r\n    <address>\r\n    	<street></street>\r\n    	<city></city>\r\n    	<state></state>\r\n    	<country></country>\r\n     </address>\r\n </person>\r\n </pre>\r\n</blockquote>\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\nAnshul Sharma','Serializing objects to XML',0,'','inherit','open','open','','703-revision-10','','','2010-05-14 16:04:31','2010-05-14 10:34:31','',703,'http://www.intelligrape.com/blog/2010/05/14/703-revision-10/',0,'revision','',0),(732,21,'2010-05-14 16:06:41','2010-05-14 10:36:41','XStream is a simple Java library to serialize objects to XML and back again. \r\nSuppose we have a Person class as follows:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  public class Person {\r\n  private String name\r\n  private int age\r\n  private Address address\r\n}\r\n\r\npublic class Address {\r\n  private String street\r\n  private String city\r\n  private String state\r\n  private String country\r\n}\r\n </pre>\r\n</blockquote>\r\nThe following code will convert instance to XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nXStream xstream = new XStream();   // instantiate the XStream class\r\nxstream.alias(\"person\", Person.class);  //the alias will be the root node.\r\n\r\nPerson personInstance = new Person()\r\n// populate the person object\r\n\r\nString xml = xstream.toXML(personInstance) </pre>\r\n\r\n</blockquote>\r\n \r\nXML will look like :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<person>\r\n  <name></name>\r\n    <age></age>\r\n    <address>\r\n    	<street></street>\r\n    	<city></city>\r\n    	<state></state>\r\n    	<country></country>\r\n     </address>\r\n </person>\r\n </pre>\r\n</blockquote>\r\nTo reconstruct an object, from the XML:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nPerson person = (Person)xstream.fromXML(xml) </pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\nAnshul Sharma','Serializing objects to XML',0,'','inherit','open','open','','703-revision-11','','','2010-05-14 16:06:41','2010-05-14 10:36:41','',703,'http://www.intelligrape.com/blog/2010/05/14/703-revision-11/',0,'revision','',0),(733,18,'2010-05-14 20:44:29','2010-05-14 15:14:29','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<g:form name=\"myForm\" controller=\"myController\" action=\"myaction\" id=\"1\" enctype=\"multipart/form-data\">...</g:form>\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<g:uploadForm name=\"myForm\" controller=\"myController\" action=\"myaction\">...</g:uploadForm>\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!\r\n\r\n~~Niraj Kumar~~\r\nniraj@intelligrape.com\r\n\r\nhttp://www.intelligrape.com','Handy g:uploadForm',0,'','publish','open','open','','handy-guploadform','','','2010-05-14 20:44:29','2010-05-14 15:14:29','',0,'http://www.intelligrape.com/blog/?p=733',0,'post','',0),(734,18,'2010-05-14 20:32:09','2010-05-14 15:02:09','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\n\nfor example insteed of using:\n<code>&lt;g:form name=\"myForm\" controller=\"myController\" action=\"myaction\" id=\"1\" enctype=\"multipart/form-data\"&gt;...&lt;/g:form&gt;</code>\n,We can just use\n<code>&lt;g:uploadForm name=\"myForm\" controller=\"myController\" action=\"myaction\"&gt;...&lt;/g:uploadForm&gt;</code>\nwith all same features!!!','Handy g:uploadForm',0,'','inherit','open','open','','733-revision','','','2010-05-14 20:32:09','2010-05-14 15:02:09','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision/',0,'revision','',0),(735,18,'2010-05-14 20:32:09','2010-05-14 15:02:09','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<code>&lt;g:form name=\"myForm\" controller=\"myController\" action=\"myaction\" id=\"1\" enctype=\"multipart/form-data\"&gt;...&lt;/g:form&gt;</code>\r\n,We can just use\r\n<code>&lt;g:uploadForm name=\"myForm\" controller=\"myController\" action=\"myaction\"&gt;...&lt;/g:uploadForm&gt;</code>\r\nwith all same features!!!','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-2','','','2010-05-14 20:32:09','2010-05-14 15:02:09','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-2/',0,'revision','',0),(738,18,'2010-05-14 20:36:58','2010-05-14 15:06:58','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\"> ...\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">...\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!\r\n\r\n~~Niraj Kumar~~\r\nniraj@intelligrape.com\r\n\r\nhttp://www.intelligrape.com','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-5','','','2010-05-14 20:36:58','2010-05-14 15:06:58','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-5/',0,'revision','',0),(736,18,'2010-05-14 20:34:14','2010-05-14 15:04:14','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n &lt;g:form name=\"myForm\" controller=\"myController\" action=\"myaction\" id=\"1\" enctype=\"multipart/form-data\"&gt;...&lt;/g:form&gt;\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n&lt;g:uploadForm name=\"myForm\" controller=\"myController\" action=\"myaction\"&gt;...&lt;/g:uploadForm&gt;\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-3','','','2010-05-14 20:34:14','2010-05-14 15:04:14','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-3/',0,'revision','',0),(737,18,'2010-05-14 20:35:20','2010-05-14 15:05:20','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n <g:form name=\"myForm\" controller=\"myController\" action=\"myaction\" id=\"1\" enctype=\"multipart/form-data\">...</g:form>\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n<g:uploadForm name=\"myForm\" controller=\"myController\" action=\"myaction\">...</g:uploadForm>\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-4','','','2010-05-14 20:35:20','2010-05-14 15:05:20','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-4/',0,'revision','',0),(739,18,'2010-05-14 20:37:37','2010-05-14 15:07:37','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\"> ...\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">...\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!\r\n\r\n~~Niraj Kumar~~\r\nniraj@intelligrape.com\r\n\r\nhttp://www.intelligrape.com','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-6','','','2010-05-14 20:37:37','2010-05-14 15:07:37','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-6/',0,'revision','',0),(740,18,'2010-05-14 20:39:24','2010-05-14 15:09:24','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\"> ...\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">...\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!\r\n\r\n~~Niraj Kumar~~\r\nniraj@intelligrape.com\r\n\r\nhttp://www.intelligrape.com','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-7','','','2010-05-14 20:39:24','2010-05-14 15:09:24','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-7/',0,'revision','',0),(741,18,'2010-05-14 20:43:22','2010-05-14 15:13:22','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\r\n\r\nfor example insteed of using:\r\n<blockquote>\r\n<pre lang=\"groovy\"> ...\r\n</pre>\r\n</blockquote>\r\n,We can just use\r\n<blockquote>\r\n<pre lang=\"groovy\">...\r\n</pre>\r\n</blockquote>\r\nwith all same features!!!\r\n\r\n~~Niraj Kumar~~\r\nniraj@intelligrape.com\r\n\r\nhttp://www.intelligrape.com','Handy g:uploadForm',0,'','inherit','open','open','','733-revision-8','','','2010-05-14 20:43:22','2010-05-14 15:13:22','',733,'http://www.intelligrape.com/blog/2010/05/14/733-revision-8/',0,'revision','',0),(742,18,'2010-05-14 20:45:42','2010-05-14 15:15:42','It is very easy and handy to use Grails &lt;g:uploadForm&gt; tag insteed of using HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag, as you don\'t need to set the enctype attritbute to multipart/form-data (as in case of HTML &lt;form&gt; tag or grails &lt;g:form&gt; tag) to work with file upload.\n\nfor example insteed of using:\n<blockquote>\n<pre lang=\"groovy\">...\n</pre>\n</blockquote>\n,We can just use\n<blockquote>\n<pre lang=\"groovy\">...\n</pre>\n</blockquote>\nwith all same features!!!\n\n~~Niraj Kumar~~\nniraj@intelligrape.com\n\nhttp://www.intelligrape.com','Handy g:uploadForm',0,'','inherit','open','open','','733-autosave','','','2010-05-14 20:45:42','2010-05-14 15:15:42','',733,'http://www.intelligrape.com/blog/2010/05/14/733-autosave/',0,'revision','',0),(743,4,'2010-05-14 23:45:25','2010-05-14 18:15:25','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found <a href=\"http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/\">Joram Barrez\'s Hello World Example</a> very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre lang=\'groovy\'> def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre lang=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this useful. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','publish','open','open','','embedding-jbpm-4-3-in-a-grails-1-2-2-application','','\nhttp://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/','2010-05-24 13:48:35','2010-05-24 08:18:35','',0,'http://www.intelligrape.com/blog/?p=743',0,'post','',1),(744,4,'2010-05-14 23:05:56','2010-05-14 17:35:56','Hi,\n\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\n\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\n<ol>\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\n	<li>\n              Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\n            <blockquote>\n                    <pre class=\"xml\">\n    \n                    </pre>\n            </blockquote>\n\n\n        </li>\n</ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision','','','2010-05-14 23:05:56','2010-05-14 17:35:56','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision/',0,'revision','',0),(746,4,'2010-05-14 23:06:53','2010-05-14 17:36:53','Hi,\n\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\n\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\n<ol>\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\n<blockquote>\n<pre class=\"xml\">\n&lt;process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\"&gt;\n&lt;start&gt;\n&lt;transition to=\"printHelloWorld\"/&gt;\n&lt;/start&gt;\n\n&lt;java method=\"printHelloWorld\" name=\"printHelloWorld\"&gt;\n&lt;transition to=\"theEnd\"/&gt;\n&lt;/java&gt;\n\n&lt;end name=\"theEnd\" /&gt;\n&lt;/process&gt;\n\n</pre>\n</blockquote>\n</li>\n</ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-3','','','2010-05-14 23:06:53','2010-05-14 17:36:53','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-3/',0,'revision','',0),(745,4,'2010-05-14 23:06:00','2010-05-14 17:36:00','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>\r\n              Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n            <blockquote>\r\n                    <pre class=\"xml\">\r\n                             \r\n<process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n<start>\r\n<transition to=\"printHelloWorld\"/>\r\n</start>\r\n\r\n<java class=\"be.jorambarrez.jbpm4.helloworld.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n<transition to=\"theEnd\"/>\r\n</java>\r\n\r\n<end name=\"theEnd\" />\r\n</process>\r\n\r\n                    </pre>\r\n            </blockquote>\r\n\r\n\r\n        </li>\r\n</ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-2','','','2010-05-14 23:06:00','2010-05-14 17:36:00','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-2/',0,'revision','',0),(747,6,'2010-05-14 23:43:17','2010-05-14 18:13:17',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nclass MyEntity {\r\n\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. The list needed to be sorted by the name,irrespective of the fact, whether it is a name of a person or an organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns a combined, grouped sorted list of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','publish','open','open','','ordering-using-grails-createcriteria','','','2010-05-14 23:43:17','2010-05-14 18:13:17','',0,'http://www.intelligrape.com/blog/?p=747',0,'post','',0),(748,6,'2010-05-14 23:23:44','2010-05-14 17:53:44',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\n<blockquote>\n<pre lang=\"groovy\">\nclass MyEntity {\n    OrganizationName orgName\n    PersonName personName\n\n    static constraints = {\n      orgName(\'nullable\', true)\n      personName(\'nullable\', true)\n    }\n\n\n  }\n  class OrganizationName {\n    String organizationName\n\n  }\n  class PersonName {\n    String familyname\n    String firstName\n\n  }\n</pre>\n</blockquote>\n\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. So the list needed to be sorted by the name,irrespective of the fact, whether it is a name of the person or the organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\n<blockquote>\n<pre lang=\"groovy\">\n MyEntity.createCriteria().list{\n\n   orgName{\n    order(\'name\')\n}\n   personName{\n     order(\'familyName\',\'firstName\')\n}\n}\n\n</pre>\n</blockquote>\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns the combined list of both. Hats off to grails.\n\n\nImran Mir\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision','','','2010-05-14 23:23:44','2010-05-14 17:53:44','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision/',0,'revision','',0),(749,6,'2010-05-14 23:24:41','2010-05-14 17:54:41',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\n<blockquote>\n<pre lang=\"groovy\">\nclass MyEntity {\n    OrganizationName orgName\n    PersonName personName\n\n    static constraints = {\n      orgName(\'nullable\', true)\n      personName(\'nullable\', true)\n    }\n  }\n\n  class OrganizationName {\n    String organizationName\n\n  }\n\n  class PersonName {\n    String familyname\n    String firstName\n\n  }\n</pre>\n</blockquote>\n\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. So the list needed to be sorted by the name,irrespective of the fact, whether it is a name of the person or the organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\n<blockquote>\n<pre lang=\"groovy\">\n  MyEntity.createCriteria ().list {\n\n    orgName {\n      order(\'name\')\n    }\n    personName {\n      order(\'familyName\', \'firstName\')\n    }\n  }</pre>\n</blockquote>\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns the combined list of both. Hats off to grails.\n\n\nImran Mir\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-2','','','2010-05-14 23:24:41','2010-05-14 17:54:41','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-2/',0,'revision','',0),(750,6,'2010-05-14 23:27:13','2010-05-14 17:57:13',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nclass MyEntity {\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. So the list needed to be sorted by the name,irrespective of the fact, whether it is a name of the person or the organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns the combined sorted lists of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-3','','','2010-05-14 23:27:13','2010-05-14 17:57:13','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-3/',0,'revision','',0),(751,6,'2010-05-14 23:27:56','2010-05-14 17:57:56',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\nclass MyEntity {\r\n\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. So the list needed to be sorted by the name,irrespective of the fact, whether it is a name of the person or the organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns the combined sorted lists of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-4','','','2010-05-14 23:27:56','2010-05-14 17:57:56','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-4/',0,'revision','',0),(756,4,'2010-05-14 23:30:15','2010-05-14 18:00:15','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\"&gt;\r\n &lt;start&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/start&gt;\r\n\r\n &lt;java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\"&gt;\r\n      &lt;transition to=\"CheckDate\"/&gt;\r\n      &lt;transition to=\"theEnd\"/&gt;\r\n &lt;/java&gt;\r\n\r\n &lt;end name=\"theEnd\" /&gt;\r\n &lt;state name=\"CheckDate\"&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/state&gt;\r\n&lt;/process&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre class=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;jbpm-configuration&gt;\r\n &lt;import resource=\"jbpm.default.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.tx.hibernate.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.jpdl.cfg.xml\"/&gt;\r\n&lt;/jbpm-configuration&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n\r\n<pre class=\"groovy\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\r\n&lt;hibernate-configuration&gt;\r\n &lt;session-factory&gt;\r\n &lt;property name=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQL5InnoDBDialect&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.url\"&gt;jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.username\"&gt;username&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.password\"&gt;password&lt;/property&gt;\r\n\r\n &lt;property name=\"hibernate.format_sql\"&gt;true&lt;/property&gt;\r\n &lt;property name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/property&gt;\r\n\r\n &lt;mapping resource=\"jbpm.repository.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.execution.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.history.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.task.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.identity.hbm.xml\" /&gt;\r\n\r\n &lt;/session-factory&gt;\r\n&lt;/hibernate-configuration&gt;</pre>\r\n\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre class=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this <blockquote><pre class=\'groovy\'>code</pre></blockquote></li></ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-7','','','2010-05-14 23:30:15','2010-05-14 18:00:15','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-7/',0,'revision','',0),(752,4,'2010-05-14 23:28:37','2010-05-14 17:58:37','Hi,\n\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\n\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\n<ol>\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\n<blockquote>\n<pre class=\"groovy\">&lt;process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\"&gt;\n &lt;start&gt;\n &lt;transition to=\"printHelloWorld\"/&gt;\n &lt;/start&gt;\n\n &lt;java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\"&gt;\n      &lt;transition to=\"CheckDate\"/&gt;\n      &lt;transition to=\"theEnd\"/&gt;\n &lt;/java&gt;\n\n &lt;end name=\"theEnd\" /&gt;\n &lt;state name=\"CheckDate\"&gt;\n &lt;transition to=\"printHelloWorld\"/&gt;\n &lt;/state&gt;\n&lt;/process&gt;\n</pre>\n</blockquote>\n</li>\n	<li> Create a class in src/groovy\n<blockquote>\n<pre class=\"groovy\">package com.jbpm.example\n\nclass Printer {\n\n public void printHelloWorld() {\n   System.out.println(\"&lt;----------------&gt;\");\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\n   System.out.println(\"&lt;----------------&gt;\");\n }\n}\n</pre>\n</blockquote>\n</li>\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\n<blockquote>\n<pre class=\"groovy\">&lt;jbpm-configuration&gt;\n &lt;import resource=\"jbpm.default.cfg.xml\"/&gt;\n &lt;import resource=\"jbpm.tx.hibernate.cfg.xml\"/&gt;\n &lt;import resource=\"jbpm.jpdl.cfg.xml\"/&gt;\n&lt;/jbpm-configuration&gt;\n</pre>\n</blockquote>\n</li>\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\n<blockquote>\n<pre class=\"groovy\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!DOCTYPE hibernate-configuration PUBLIC\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\n&lt;hibernate-configuration&gt;\n &lt;session-factory&gt;\n &lt;property name=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQL5InnoDBDialect&lt;/property&gt;\n &lt;property name=\"hibernate.connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;\n &lt;property name=\"hibernate.connection.url\"&gt;jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true&lt;/property&gt;\n &lt;property name=\"hibernate.connection.username\"&gt;username&lt;/property&gt;\n &lt;property name=\"hibernate.connection.password\"&gt;password&lt;/property&gt;\n\n &lt;property name=\"hibernate.format_sql\"&gt;true&lt;/property&gt;\n &lt;property name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/property&gt;\n\n &lt;mapping resource=\"jbpm.repository.hbm.xml\" /&gt;\n &lt;mapping resource=\"jbpm.execution.hbm.xml\" /&gt;\n &lt;mapping resource=\"jbpm.history.hbm.xml\" /&gt;\n &lt;mapping resource=\"jbpm.task.hbm.xml\" /&gt;\n &lt;mapping resource=\"jbpm.identity.hbm.xml\" /&gt;\n\n &lt;/session-factory&gt;\n&lt;/hibernate-configuration&gt;</pre>\n</blockquote>\n</li>\n<li>Create the following Spring beans is resources.groovy\n<blockquote><pre class=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\n        jbpmCfg = \"jbpm.cfg.xml\"\n    }\n    processEngine(springHelper:\"createProcessEngine\")\n</pre></blockquote>\n</li>\n<li>Now lets deploy this <blockquote><pre class=\'groovy\'>code</pre></blockquote></li></ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-4','','','2010-05-14 23:28:37','2010-05-14 17:58:37','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-4/',0,'revision','',0),(753,4,'2010-05-14 23:28:42','2010-05-14 17:58:42','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\"&gt;\r\n &lt;start&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/start&gt;\r\n\r\n &lt;java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\"&gt;\r\n      &lt;transition to=\"CheckDate\"/&gt;\r\n      &lt;transition to=\"theEnd\"/&gt;\r\n &lt;/java&gt;\r\n\r\n &lt;end name=\"theEnd\" /&gt;\r\n &lt;state name=\"CheckDate\"&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/state&gt;\r\n&lt;/process&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre class=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;jbpm-configuration&gt;\r\n &lt;import resource=\"jbpm.default.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.tx.hibernate.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.jpdl.cfg.xml\"/&gt;\r\n&lt;/jbpm-configuration&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\r\n&lt;hibernate-configuration&gt;\r\n &lt;session-factory&gt;\r\n &lt;property name=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQL5InnoDBDialect&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.url\"&gt;jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.username\"&gt;username&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.password\"&gt;password&lt;/property&gt;\r\n\r\n &lt;property name=\"hibernate.format_sql\"&gt;true&lt;/property&gt;\r\n &lt;property name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/property&gt;\r\n\r\n &lt;mapping resource=\"jbpm.repository.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.execution.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.history.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.task.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.identity.hbm.xml\" /&gt;\r\n\r\n &lt;/session-factory&gt;\r\n&lt;/hibernate-configuration&gt;</pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre class=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this <blockquote><pre class=\'groovy\'>code</pre></blockquote></li></ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-5','','','2010-05-14 23:28:42','2010-05-14 17:58:42','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-5/',0,'revision','',0),(754,4,'2010-05-14 23:30:09','2010-05-14 18:00:09','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\"&gt;\r\n &lt;start&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/start&gt;\r\n\r\n &lt;java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\"&gt;\r\n      &lt;transition to=\"CheckDate\"/&gt;\r\n      &lt;transition to=\"theEnd\"/&gt;\r\n &lt;/java&gt;\r\n\r\n &lt;end name=\"theEnd\" /&gt;\r\n &lt;state name=\"CheckDate\"&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/state&gt;\r\n&lt;/process&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre class=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre class=\"groovy\">&lt;jbpm-configuration&gt;\r\n &lt;import resource=\"jbpm.default.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.tx.hibernate.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.jpdl.cfg.xml\"/&gt;\r\n&lt;/jbpm-configuration&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n\r\n<pre class=\"groovy\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\r\n&lt;hibernate-configuration&gt;\r\n &lt;session-factory&gt;\r\n &lt;property name=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQL5InnoDBDialect&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.url\"&gt;jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.username\"&gt;username&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.password\"&gt;password&lt;/property&gt;\r\n\r\n &lt;property name=\"hibernate.format_sql\"&gt;true&lt;/property&gt;\r\n &lt;property name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/property&gt;\r\n\r\n &lt;mapping resource=\"jbpm.repository.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.execution.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.history.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.task.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.identity.hbm.xml\" /&gt;\r\n\r\n &lt;/session-factory&gt;\r\n&lt;/hibernate-configuration&gt;</pre>\r\n\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre class=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this <blockquote><pre class=\'groovy\'>code</pre></blockquote></li></ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-6','','','2010-05-14 23:30:09','2010-05-14 18:00:09','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-6/',0,'revision','',0),(755,6,'2010-05-14 23:28:19','2010-05-14 17:58:19',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nclass MyEntity {\r\n\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. So the list needed to be sorted by the name,irrespective of the fact, whether it is a name of the person or the organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns the combined sorted lists of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-5','','','2010-05-14 23:28:19','2010-05-14 17:58:19','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-5/',0,'revision','',0),(757,6,'2010-05-14 23:30:38','2010-05-14 18:00:38',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nclass MyEntity {\r\n\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. The list needed to be sorted by the name,irrespective of the fact, whether it is a name of a person or an organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns the combined sorted lists of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-6','','','2010-05-14 23:30:38','2010-05-14 18:00:38','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-6/',0,'revision','',0),(758,6,'2010-05-14 23:36:42','2010-05-14 18:06:42',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nclass MyEntity {\r\n\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. The list needed to be sorted by the name,irrespective of the fact, whether it is a name of a person or an organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns a combined, grouped sorted list of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-7','','','2010-05-14 23:36:42','2010-05-14 18:06:42','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-7/',0,'revision','',0),(759,6,'2010-05-14 23:43:00','2010-05-14 18:13:00',' Recently, in my project I had to implement search functionality. I used grails createCriteria to implement it.Now I needed to apply the sorting on the result returned. My domain was something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\nclass MyEntity {\r\n\r\n    OrganizationName orgName\r\n    PersonName personName\r\n\r\n    static constraints = {\r\n      orgName(\'nullable\', true)\r\n      personName(\'nullable\', true)\r\n    }\r\n  }\r\n\r\n  class OrganizationName {\r\n\r\n    String organizationName\r\n\r\n  }\r\n\r\n  class PersonName {\r\n\r\n    String familyname\r\n    String firstName\r\n\r\n  }\r\n</pre>\r\n</blockquote>\r\n\r\nThe \"MyEntity\" could either be a person or an organization. In the view, we show just the name, and that could be either the organization-name or person-name. The list needed to be sorted by the name,irrespective of the fact, whether it is a name of a person or an organization. Grails \"createCriteria\" did the magic for me. I wrote something like this :\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n\r\n  MyEntity.createCriteria ().list {\r\n\r\n    orgName {\r\n      order(\'name\')\r\n    }\r\n    personName {\r\n      order(\'familyName\')\r\n    }\r\n  }</pre>\r\n</blockquote>\r\n The ordering seems to ignore nulls. It sorts the MyEntity objects with orgName, groups them togethor and then sorts the MyEntity objects with personName and makes another group for them and then returns a combined, grouped sorted list of both. Hats off to grails.\r\n\r\n\r\nImran Mir\r\nimran@intelligrape.com','Ordering using Grails CreateCriteria',0,'','inherit','open','open','','747-revision-8','','','2010-05-14 23:43:00','2010-05-14 18:13:00','',747,'http://www.intelligrape.com/blog/2010/05/14/747-revision-8/',0,'revision','',0),(760,4,'2010-05-14 23:32:44','2010-05-14 18:02:44','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\">&lt;process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\"&gt;\r\n &lt;start&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/start&gt;\r\n\r\n &lt;java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\"&gt;\r\n      &lt;transition to=\"CheckDate\"/&gt;\r\n      &lt;transition to=\"theEnd\"/&gt;\r\n &lt;/java&gt;\r\n\r\n &lt;end name=\"theEnd\" /&gt;\r\n &lt;state name=\"CheckDate\"&gt;\r\n &lt;transition to=\"printHelloWorld\"/&gt;\r\n &lt;/state&gt;\r\n&lt;/process&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\">&lt;jbpm-configuration&gt;\r\n &lt;import resource=\"jbpm.default.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.tx.hibernate.cfg.xml\"/&gt;\r\n &lt;import resource=\"jbpm.jpdl.cfg.xml\"/&gt;\r\n&lt;/jbpm-configuration&gt;\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\r\n&lt;hibernate-configuration&gt;\r\n &lt;session-factory&gt;\r\n &lt;property name=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQL5InnoDBDialect&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.url\"&gt;jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.username\"&gt;username&lt;/property&gt;\r\n &lt;property name=\"hibernate.connection.password\"&gt;password&lt;/property&gt;\r\n\r\n &lt;property name=\"hibernate.format_sql\"&gt;true&lt;/property&gt;\r\n &lt;property name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/property&gt;\r\n\r\n &lt;mapping resource=\"jbpm.repository.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.execution.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.history.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.task.hbm.xml\" /&gt;\r\n &lt;mapping resource=\"jbpm.identity.hbm.xml\" /&gt;\r\n\r\n &lt;/session-factory&gt;\r\n&lt;/hibernate-configuration&gt;</pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this <blockquote><pre lang=\'groovy\'>code</pre></blockquote></li></ol>','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-8','','','2010-05-14 23:32:44','2010-05-14 18:02:44','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-8/',0,'revision','',0),(761,4,'2010-05-14 23:43:36','2010-05-14 18:13:36','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/ very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre class=\'groovy\'>def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre class=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this usefull. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-9','','','2010-05-14 23:43:36','2010-05-14 18:13:36','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-9/',0,'revision','',0),(762,4,'2010-05-14 23:44:47','2010-05-14 18:14:47','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found <a href=\"http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/\">Joram Barez\'s Hello World Example</a> very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre class=\'groovy\'>def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre class=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this usefull. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-10','','','2010-05-14 23:44:47','2010-05-14 18:14:47','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-10/',0,'revision','',0),(763,4,'2010-05-14 23:45:25','2010-05-14 18:15:25','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found <a href=\"http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/\">Joram Barrez\'s Hello World Example</a> very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre class=\'groovy\'>def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre class=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this useful. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-11','','','2010-05-14 23:45:25','2010-05-14 18:15:25','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-11/',0,'revision','',0),(764,4,'2010-05-14 23:46:29','2010-05-14 18:16:29','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found <a href=\"http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/\">Joram Barrez\'s Hello World Example</a> very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre class=\'groovy\'>def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre lang=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this useful. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-12','','','2010-05-14 23:46:29','2010-05-14 18:16:29','',743,'http://www.intelligrape.com/blog/2010/05/14/743-revision-12/',0,'revision','',0),(765,7,'2010-05-14 15:22:40','2010-05-14 09:52:40','Hi Friends,\r\n\r\nTo retrieve difference between two dates with finer details which would display their difference as 2 years 7 weeks 3 days 2 hours 5 mins ago is given below.\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.years = (difference / 365).toInteger()\r\n    if(diffMap.years)\r\n       difference = (difference) % 365\r\n    diffMap.days = difference % 7\r\n    diffMap.weeks = (difference - diffMap.days) / 7  \r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-8','','','2010-05-14 15:22:40','2010-05-14 09:52:40','',714,'http://www.intelligrape.com/blog/2010/05/14/714-revision-8/',0,'revision','',0),(766,7,'2010-05-17 09:41:53','2010-05-17 04:11:53','Hi Friends,\r\n\r\nTo retrieve difference between two dates with finer details which would display their difference as 2 years 7 weeks 3 days 2 hours 5 mins ago is given below.\r\n\r\n\r\n<blockquote><pre lang=\"groovy\">\r\n /**\r\n   * Returns differnce b/w new Date and old date as Map holding difference in years, weeks, days, hrs, mins & secs \r\n   */\r\n  public static Map getDiffernceInDates(Date oldDate, Date newDate = new Date()) {\r\n    Long difference = newDate.time - oldDate.time\r\n    Map diffMap =[:]\r\n    difference = difference / 1000\r\n    diffMap.seconds = difference % 60\r\n    difference = (difference - diffMap.seconds) / 60\r\n    diffMap.minutes = difference % 60\r\n    difference = (difference - diffMap.minutes) / 60\r\n    diffMap.hours = difference % 24\r\n    difference = (difference - diffMap.hours) / 24\r\n    diffMap.years = (difference / 365).toInteger()\r\n    if(diffMap.years)\r\n       difference = (difference) % 365\r\n    diffMap.days = difference % 7\r\n    diffMap.weeks = (difference - diffMap.days) / 7  \r\n    return diffMap\r\n  }\r\n  \r\n</pre></blockquote>\r\n\r\nThe taglib to display the date difference in detail is given below \r\n<blockquote>\r\n<pre lang=\"groovy\">\r\ndef timeDiffInDetail = {attrs ->\r\n        Map diff = DateUtil.getDiffernceInDates(attrs.oldDate, attrs.newDate ?: new Date())\r\n        String result =  diff.years ? diff.years + \" years \" : \"\"\r\n        result += diff.weeks ? diff.weeks + \" weeks \" : \"\"\r\n        result += diff.days ? diff.days + \" days \" : \"\"\r\n        result += diff.hours ? diff.hours + \" hours \" : \"\"\r\n        result += diff.minutes ? diff.minutes + \" minutes ago\" : \"\"\r\n        if (result)\r\n          out << result\r\n        else\r\n          out << \" 0 minutes ago\"\r\n}\r\n</pre>\r\n</blockquote>\r\n\r\nHope this helpled!\r\n\r\nCheers!\r\n\r\n~~Amit Jain~~\r\namit@intelligrape.com\r\nhttp://www.intelligrape.com','Grails : Date difference with finer details',0,'','inherit','open','open','','714-revision-9','','','2010-05-17 09:41:53','2010-05-17 04:11:53','',714,'http://www.intelligrape.com/blog/2010/05/17/714-revision-9/',0,'revision','',0),(767,11,'2010-05-21 16:08:49','2010-05-21 10:38:49','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\r\nInitially when we were not aware of this we were populating the object like\r\n<pre lang=\"groovy\">\r\nExpense expense =new Expense(params)\r\n</pre>\r\nThis throw exception as the user type \",\" in the number then we moved to \r\n<pre lang=\"groovy\">\r\nbindData(expense,params)\r\n</pre>\r\nThis handles the number with \",\" very gracefully. \r\nNow the real use case came into picture where we need to ignore $ and change the number enclosed with brackets to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \r\n<pre lang=\"groovy\">\r\nString.metaClass.convertToNumber = {\r\n            String stringNumber = delegate?.toString()\r\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\r\n            Float number = 0\r\n            if (stringNumber.isNumber()) {\r\n                number = Float.parseFloat(stringNumber)\r\n                if (delegate?.toString()?.endsWith(\")\")) {\r\n                    number = -number\r\n                }\r\n            }\r\n            return number\r\n        }\r\n</pre>\r\nAnd we added the line in the Application Filter \r\n<pre lang=\"groovy\">\r\nparams?.totalCost = params?.totalCost?.convertToNumber()\r\n</pre>\r\n\r\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \r\n\r\n## Uday Pratap Singh ##\r\nuday@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n','Injecting method to convert String number to number (Having , $ brackets)',0,'','publish','open','open','','injecting-method-to-convert-string-number-to-number-having-brackets','','','2010-05-21 16:08:49','2010-05-21 10:38:49','',0,'http://www.intelligrape.com/blog/?p=767',0,'post','',0),(768,11,'2010-05-21 15:58:41','2010-05-21 10:28:41','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\nInitially when we were not aware of this we were populating the object like\nExpense expense =new Expense(params)\n\nThis throw error as the user type \",\" in the number then we moved to \nbindData(expense,params)\nThis handles the number with \",\" very gracefully. \nNow the real use case came into picture where we need to ignore $ and change the number having (,) to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \n\nString.metaClass.convertToNumber = {\n            String stringNumber = delegate?.toString()\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\n            Float number = 0\n            if (stringNumber.isNumber()) {\n                number = Float.parseFloat(stringNumber)\n                if (delegate?.toString()?.endsWith(\")\")) {\n                    number = -number\n                }\n            }\n            return number\n        }\n\nAnd we added the line in the Application Filter \nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\n\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \n\n\n\n','Injecting method to convert String number to number',0,'','inherit','open','open','','767-revision','','','2010-05-21 15:58:41','2010-05-21 10:28:41','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision/',0,'revision','',0),(769,11,'2010-05-21 15:59:41','2010-05-21 10:29:41','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\nInitially when we were not aware of this we were populating the object like\nExpense expense =new Expense(params)\n\nThis throw error as the user type \",\" in the number then we moved to \nbindData(expense,params)\nThis handles the number with \",\" very gracefully. \nNow the real use case came into picture where we need to ignore $ and change the number having (,) to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \n\nString.metaClass.convertToNumber = {\n            String stringNumber = delegate?.toString()\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\n            Float number = 0\n            if (stringNumber.isNumber()) {\n                number = Float.parseFloat(stringNumber)\n                if (delegate?.toString()?.endsWith(\")\")) {\n                    number = -number\n                }\n            }\n            return number\n        }\n\nAnd we added the line in the Application Filter \nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\n\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \n\n## Uday Pratap Singh ##\nuday@intelligrape.com\nhttp://www.IntelliGrape.com/\n','Injecting method to convert String number to number',0,'','inherit','open','open','','767-revision-2','','','2010-05-21 15:59:41','2010-05-21 10:29:41','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision-2/',0,'revision','',0),(770,11,'2010-05-21 16:01:12','2010-05-21 10:31:12','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\r\nInitially when we were not aware of this we were populating the object like\r\nExpense expense =new Expense(params)\r\n\r\nThis throw error as the user type \",\" in the number then we moved to \r\nbindData(expense,params)\r\nThis handles the number with \",\" very gracefully. \r\nNow the real use case came into picture where we need to ignore $ and change the number having (,) to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \r\n<pre lang=\"groovy\">\r\nString.metaClass.convertToNumber = {\r\n            String stringNumber = delegate?.toString()\r\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\r\n            Float number = 0\r\n            if (stringNumber.isNumber()) {\r\n                number = Float.parseFloat(stringNumber)\r\n                if (delegate?.toString()?.endsWith(\")\")) {\r\n                    number = -number\r\n                }\r\n            }\r\n            return number\r\n        }\r\n</pre>\r\nAnd we added the line in the Application Filter \r\n<pre lang=\"groovy\">\r\nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\r\n</pre>\r\n\r\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \r\n\r\n## Uday Pratap Singh ##\r\nuday@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n','Injecting method to convert String number to number',0,'','inherit','open','open','','767-revision-3','','','2010-05-21 16:01:12','2010-05-21 10:31:12','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision-3/',0,'revision','',0),(771,11,'2010-05-21 16:02:06','2010-05-21 10:32:06','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\r\nInitially when we were not aware of this we were populating the object like\r\n<pre lang=\"groovy\">\r\nExpense expense =new Expense(params)\r\n</pre>\r\nThis throw error as the user type \",\" in the number then we moved to \r\n<pre lang=\"groovy\">\r\nbindData(expense,params)\r\n</pre>\r\nThis handles the number with \",\" very gracefully. \r\nNow the real use case came into picture where we need to ignore $ and change the number having (,) to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \r\n<pre lang=\"groovy\">\r\nString.metaClass.convertToNumber = {\r\n            String stringNumber = delegate?.toString()\r\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\r\n            Float number = 0\r\n            if (stringNumber.isNumber()) {\r\n                number = Float.parseFloat(stringNumber)\r\n                if (delegate?.toString()?.endsWith(\")\")) {\r\n                    number = -number\r\n                }\r\n            }\r\n            return number\r\n        }\r\n</pre>\r\nAnd we added the line in the Application Filter \r\n<pre lang=\"groovy\">\r\nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\r\n</pre>\r\n\r\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \r\n\r\n## Uday Pratap Singh ##\r\nuday@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n','Injecting method to convert String number to number',0,'','inherit','open','open','','767-revision-4','','','2010-05-21 16:02:06','2010-05-21 10:32:06','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision-4/',0,'revision','',0),(772,11,'2010-05-21 16:03:06','2010-05-21 10:33:06','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\r\nInitially when we were not aware of this we were populating the object like\r\n<pre lang=\"groovy\">\r\nExpense expense =new Expense(params)\r\n</pre>\r\nThis throw exception as the user type \",\" in the number then we moved to \r\n<pre lang=\"groovy\">\r\nbindData(expense,params)\r\n</pre>\r\nThis handles the number with \",\" very gracefully. \r\nNow the real use case came into picture where we need to ignore $ and change the number having (,) to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \r\n<pre lang=\"groovy\">\r\nString.metaClass.convertToNumber = {\r\n            String stringNumber = delegate?.toString()\r\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\r\n            Float number = 0\r\n            if (stringNumber.isNumber()) {\r\n                number = Float.parseFloat(stringNumber)\r\n                if (delegate?.toString()?.endsWith(\")\")) {\r\n                    number = -number\r\n                }\r\n            }\r\n            return number\r\n        }\r\n</pre>\r\nAnd we added the line in the Application Filter \r\n<pre lang=\"groovy\">\r\nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\r\n</pre>\r\n\r\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \r\n\r\n## Uday Pratap Singh ##\r\nuday@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n','Injecting method to convert String number to number',0,'','inherit','open','open','','767-revision-5','','','2010-05-21 16:03:06','2010-05-21 10:33:06','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision-5/',0,'revision','',0),(773,11,'2010-05-21 16:03:50','2010-05-21 10:33:50','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\r\nInitially when we were not aware of this we were populating the object like\r\n<pre lang=\"groovy\">\r\nExpense expense =new Expense(params)\r\n</pre>\r\nThis throw exception as the user type \",\" in the number then we moved to \r\n<pre lang=\"groovy\">\r\nbindData(expense,params)\r\n</pre>\r\nThis handles the number with \",\" very gracefully. \r\nNow the real use case came into picture where we need to ignore $ and change the number enclosed with brackets to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \r\n<pre lang=\"groovy\">\r\nString.metaClass.convertToNumber = {\r\n            String stringNumber = delegate?.toString()\r\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\r\n            Float number = 0\r\n            if (stringNumber.isNumber()) {\r\n                number = Float.parseFloat(stringNumber)\r\n                if (delegate?.toString()?.endsWith(\")\")) {\r\n                    number = -number\r\n                }\r\n            }\r\n            return number\r\n        }\r\n</pre>\r\nAnd we added the line in the Application Filter \r\n<pre lang=\"groovy\">\r\nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\r\n</pre>\r\n\r\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \r\n\r\n## Uday Pratap Singh ##\r\nuday@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n','Injecting method to convert String number to number',0,'','inherit','open','open','','767-revision-6','','','2010-05-21 16:03:50','2010-05-21 10:33:50','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision-6/',0,'revision','',0),(774,11,'2010-05-21 16:08:02','2010-05-21 10:38:02','Recently in my project we have use case where users have the habit of entering number as 100,000 and they write the -ve numbers as (100,000). Some times they also pur $ with the number field\r\nInitially when we were not aware of this we were populating the object like\r\n<pre lang=\"groovy\">\r\nExpense expense =new Expense(params)\r\n</pre>\r\nThis throw exception as the user type \",\" in the number then we moved to \r\n<pre lang=\"groovy\">\r\nbindData(expense,params)\r\n</pre>\r\nThis handles the number with \",\" very gracefully. \r\nNow the real use case came into picture where we need to ignore $ and change the number enclosed with brackets to -ve number. We dont want to change our code for this so we came up with the solution of injecting a method in String class which will do all the things for us and we added a method in the project bootstrap which is something like . \r\n<pre lang=\"groovy\">\r\nString.metaClass.convertToNumber = {\r\n            String stringNumber = delegate?.toString()\r\n            stringNumber = stringNumber.replaceAll(\"[,]|[(]|[)]|[\\$]\",\'\')\r\n            Float number = 0\r\n            if (stringNumber.isNumber()) {\r\n                number = Float.parseFloat(stringNumber)\r\n                if (delegate?.toString()?.endsWith(\")\")) {\r\n                    number = -number\r\n                }\r\n            }\r\n            return number\r\n        }\r\n</pre>\r\nAnd we added the line in the Application Filter \r\n<pre lang=\"groovy\">\r\nparams?.totalCost = params?.totalCost?.convertToNumber()?.toString()\r\n</pre>\r\n\r\nIt just do the trick for us and we dont need to change our code. I think its one of the correct way to handle such requirement \r\n\r\n## Uday Pratap Singh ##\r\nuday@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n','Injecting method to convert String number to number (Having , $ brackets)',0,'','inherit','open','open','','767-revision-7','','','2010-05-21 16:08:02','2010-05-21 10:38:02','',767,'http://www.intelligrape.com/blog/2010/05/21/767-revision-7/',0,'revision','',0),(775,4,'2010-05-24 13:44:10','2010-05-24 08:14:10','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found <a href=\"http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/\">Joram Barrez\'s Hello World Example</a> very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre lang=\'groovy\'> def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre lang=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this useful. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-autosave','','','2010-05-24 13:44:10','2010-05-24 08:14:10','',743,'http://www.intelligrape.com/blog/2010/05/24/743-autosave/',0,'revision','',0),(776,4,'2010-05-15 13:38:24','2010-05-15 08:08:24','Hi,\r\n\r\nIn one of our projects, we had a requirement for using some existing Business Process Management tool. <a href=\"http://www.jboss.org/jbpm\" target=\"_blank\">JBPM</a> is one such tool that we are evaluating.\r\n\r\nOur first step was to run a \"Hello World\" process from inside the grails application. On searching over the internet, I didn\'t find any helpful article/blog on integrating JBPM inside a grails application. However, there were some very good resources on integrating JBPM with a spring application. I found <a href=\"http://www.jorambarrez.be/blog/2009/07/01/jbpm4-hello-world/\">Joram Barrez\'s Hello World Example</a> very helpful and was able to integrate using the following steps:\r\n<ol>\r\n	<li>Download jbpm from <a href=\"http://sourceforge.net/projects/jbpm/files/\" target=\"_blank\">here.</a></li>\r\n	<li>Unzip the contents and copy the jbpm.jar file to the lib directory of your application.</li>\r\n	<li>Also copy the mail.jar from the jbpm installation directory (${jbpmHome}/lib) to the lib directory of your application.</li>\r\n	<li> Create a process descriptor file in the conf directory (helloWorld.jpdl.xml) with the following code\r\n<blockquote>\r\n<pre lang=\"groovy\"><process name=\"helloWorld\" xmlns=\"http://jbpm.org/4.0/jpdl\">\r\n <start>\r\n <transition to=\"printHelloWorld\"/>\r\n </start>\r\n\r\n <java class=\"com.jbpm.example.Printer\" method=\"printHelloWorld\" name=\"printHelloWorld\">\r\n      <transition to=\"CheckDate\"/>\r\n      <transition to=\"theEnd\"/>\r\n </java>\r\n\r\n <end name=\"theEnd\" />\r\n <state name=\"CheckDate\">\r\n <transition to=\"printHelloWorld\"/>\r\n </state>\r\n</process>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li> Create a class in src/groovy\r\n<blockquote>\r\n<pre lang=\"groovy\">package com.jbpm.example\r\n\r\nclass Printer {\r\n\r\n public void printHelloWorld() {\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n   System.out.println(\"&amp;nbsp;&amp;nbsp; HELLO WORLD!\");\r\n   System.out.println(\"&lt;----------------&gt;\");\r\n }\r\n}\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a minimal jBPM config (jbpm.cfg.xml) in the conf directory\r\n<blockquote>\r\n<pre lang=\"groovy\"><jbpm-configuration>\r\n <import resource=\"jbpm.default.cfg.xml\"/>\r\n <import resource=\"jbpm.tx.hibernate.cfg.xml\"/>\r\n <import resource=\"jbpm.jpdl.cfg.xml\"/>\r\n</jbpm-configuration>\r\n</pre>\r\n</blockquote>\r\n</li>\r\n	<li>Create a basic Hibernate config called conf/jbpm.hibernate.cfg.xml(I’m using MySql, Still looking for a way on how to use the grails DataSource)\r\n<blockquote>\r\n<pre lang=\"groovy\"><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE hibernate-configuration PUBLIC\r\n\"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\r\n\"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\r\n<hibernate-configuration>\r\n <session-factory>\r\n <property name=\"hibernate.dialect\">org.hibernate.dialect.MySQL5InnoDBDialect</property>\r\n <property name=\"hibernate.connection.driver_class\">com.mysql.jdbc.Driver</property>\r\n <property name=\"hibernate.connection.url\">jdbc:mysql://localhost:3306/testJbpm?autoReconnect=true</property>\r\n <property name=\"hibernate.connection.username\">username</property>\r\n <property name=\"hibernate.connection.password\">password</property>\r\n\r\n <property name=\"hibernate.format_sql\">true</property>\r\n <property name=\"hibernate.hbm2ddl.auto\">update</property>\r\n\r\n <mapping resource=\"jbpm.repository.hbm.xml\" />\r\n <mapping resource=\"jbpm.execution.hbm.xml\" />\r\n <mapping resource=\"jbpm.history.hbm.xml\" />\r\n <mapping resource=\"jbpm.task.hbm.xml\" />\r\n <mapping resource=\"jbpm.identity.hbm.xml\" />\r\n\r\n </session-factory>\r\n</hibernate-configuration></pre>\r\n</blockquote>\r\n</li>\r\n<li>Create the following Spring beans is resources.groovy\r\n<blockquote><pre lang=\'groovy\'>    springHelper(org.jbpm.pvm.internal.processengine.SpringHelper) {\r\n        jbpmCfg = \"jbpm.cfg.xml\"\r\n    }\r\n    processEngine(springHelper:\"createProcessEngine\")\r\n</pre></blockquote>\r\n</li>\r\n<li>Now lets deploy this process. To deploy a process we will need to inject the processEngine bean\r\n<blockquote><pre class=\'groovy\'>def processEngine;</pre></blockquote>\r\nThe code to deploy this process is\r\n\r\n <blockquote><pre lang=\'groovy\'>        \r\nRepositoryService repositoryService = processEngine.getRepositoryService();\r\n         repositoryService.createDeployment()\r\n                 .addResourceFromClasspath(\"helloWorld.jpdl.xml\")\r\n                 .deploy();\r\n</pre></blockquote></li>\r\n<li>Lets start an instance of this service :\r\n<blockquote><pre lang=\'groovy\'> \r\nExecutionService executionService = processEngine.getExecutionService();\r\nexecutionService.startProcessInstanceByKey(\"helloWorld\");</pre></blockquote>\r\nThis will execute the printHelloWorld method of the Printer class as configured in the process description file.\r\n</li>\r\n</ol>\r\nHope you find this useful. We are still working on executing more complex processes and will keep posting our learnings.\r\n\r\nYour feedback and  suggestions are welcome.\r\n\r\nRegards\r\n~~Himanshu Seth~~\r\n\r\nhttp://www.IntelliGrape.com','Embedding JBPM 4.3 in a Grails 1.2.2 Application',0,'','inherit','open','open','','743-revision-13','','','2010-05-15 13:38:24','2010-05-15 08:08:24','',743,'http://www.intelligrape.com/blog/2010/05/15/743-revision-13/',0,'revision','',0),(777,7,'2010-05-25 16:12:24','2010-05-25 10:42:24','This post might help you if you want to get JSON (JavaScript Object Notation) Object on browser. Grails framework provides you very efficient way to achieve this.\r\n\r\nFor this you need to import grails JSON convertor in your code.\r\n<blockquote>\r\n<pre lang=\"groovy\">import grails.converters.JSON</pre>\r\n</blockquote>\r\nBelow is the code snapshot which converts java based lists of Objects to JSON object\r\n<blockquote>\r\n<pre lang=\"groovy\">HashMap jsonMap = new HashMap()\r\nList<Company> companyList = Company.list()\r\nList<Contact> employeeList = Employee.list()\r\n\r\njsonMap.companies = companyList.collect {comp ->\r\nreturn [id: comp.id, name: comp.name, address: comp.address]\r\n}\r\n\r\njsonMap.employees = employeeList.collect {emp ->\r\nreturn [id: emp.id, name: emp.name, companyId: emp.companyId, role: emp.role]\r\n}\r\n\r\nrender jsonMap as JSON\r\n</pre>\r\n</blockquote>\r\nSo you got it - <strong>MAGIC lies in \"render jsonMap as JSON\" statement.</strong>\r\n\r\n<em><strong>Output sent to Browser</strong></em>:\r\n\r\n<blockquote>\r\n<pre lang=\"javascript\">\r\n{\r\n  \"companies\": [\r\n       {\"id\":281,\"name\":\" Company Name Incorporated\", \"address\": \"street-address, zone-address, city, state, country, zip12\"},\r\n       {\"id\":282,\"name\":\" Other company LLC\", \"address\": \"street-address1, zone-address2, city, state, country, zip34\"},\r\n  ],\r\n  \"employees\": [\r\n       {\"id\":123,\"name\":\"Employee123 Name\",\"companyId\":281, \"role\":\"Designer\"},\r\n       {\"id\":127,\"name\":\"Employee127 Name\",\"companyId\":281, \"role\":\"Supervisor\"},\r\n       {\"id\":129,\"name\":\"Employee129 Name\",\"companyId\":282, \"role\":\"Inspector\"}\r\n  ]\r\n}\r\n</pre>\r\n</blockquote>\r\nIsn\'t it cool :-). How to use JSON Objects on browser is out of scope of this post. I will try to write another post soon - how to query JSON based data to produce client-side results effectively (example - client side search).\r\n\r\nCheers!!\r\nSalil Kalia','Create JSON object Using Grails converter (Only selective fields from lists of objects) ',0,'','inherit','open','open','','681-autosave','','','2010-05-25 16:12:24','2010-05-25 10:42:24','',681,'http://www.intelligrape.com/blog/2010/05/25/681-autosave/',0,'revision','',0),(778,19,'2010-05-27 13:04:58','2010-05-27 07:34:58','Hi,\r\nRecently in my project , i needed to validate an input (whether it is a integer or not) on client side.\r\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\r\nFor any input value, it checks whether it is an Integer or not.\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n     function isInteger(a) {\r\n      return (!(parseInt(a).toString() == \'NaN\'))\r\n        }\r\n</pre>\r\n</blockquote>\r\n\r\nIt worked for me ans saves a lot of time.\r\nHope it helps.\r\n\r\nRegards\r\nVishal Sahu\r\nvishal@intelligrape.com\r\nhttp://www.IntelliGrape.com/\r\n\r\n','Client side validation for Number values',0,'','publish','open','open','','client-side-validation-for-number-values','','','2010-05-27 13:06:21','2010-05-27 07:36:21','',0,'http://www.intelligrape.com/blog/?p=778',0,'post','',2),(779,19,'2010-05-27 12:57:38','2010-05-27 07:27:38','Hi,\nRecently in one of my projects , i need to validate an input (whether it is a number or not) on client side.\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\nFor any input value, it checks whether it is an Integer or not.\n\n<blockquote>\n<pre language=\"groovy\">\n     function isInteger(a) {\n      return (!(parseInt(a).toString() == \'NaN\'))\n        }\n</pre>\n<blockquote>\n\n\nHope it helps.\n\nRegards\nVishal Sahu\n\nvishal@intelligrape.com\n\n','Client side validation for Number values',0,'','inherit','open','open','','778-revision','','','2010-05-27 12:57:38','2010-05-27 07:27:38','',778,'http://www.intelligrape.com/blog/2010/05/27/778-revision/',0,'revision','',0),(780,19,'2010-05-27 12:58:38','2010-05-27 07:28:38','Hi,\nRecently in my project , i need to validate an input (whether it is a number or not) on client side.\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\nFor any input value, it checks whether it is an Integer or not.\n\n<blockquote>\n<pre language=\"groovy\">\n     function isInteger(a) {\n      return (!(parseInt(a).toString() == \'NaN\'))\n        }\n</pre>\n<blockquote>\n\n\nHope it helps.\n\nRegards\nVishal Sahu\n\nvishal@intelligrape.com\n\n','Client side validation for Number values',0,'','inherit','open','open','','778-revision-2','','','2010-05-27 12:58:38','2010-05-27 07:28:38','',778,'http://www.intelligrape.com/blog/2010/05/27/778-revision-2/',0,'revision','',0),(781,19,'2010-05-27 12:59:35','2010-05-27 07:29:35','Hi,\r\nRecently in my project , i need to validate an input (whether it is a number or not) on client side.\r\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\r\nFor any input value, it checks whether it is an Integer or not.\r\n\r\n<blockquote>\r\n<pre language=\"groovy\">\r\n     function isInteger(a) {\r\n      return (!(parseInt(a).toString() == \'NaN\'))\r\n        }\r\n</pre>\r\n</blockquote>\r\n\r\n\r\nHope it helps.\r\n\r\nRegards\r\nVishal Sahu\r\n\r\nvishal@intelligrape.com\r\n\r\n','Client side validation for Number values',0,'','inherit','open','open','','778-revision-3','','','2010-05-27 12:59:35','2010-05-27 07:29:35','',778,'http://www.intelligrape.com/blog/2010/05/27/778-revision-3/',0,'revision','',0),(782,19,'2010-05-27 13:01:17','2010-05-27 07:31:17','Hi,\r\nRecently in my project , i need to validate an input (whether it is a number or not) on client side.\r\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\r\nFor any input value, it checks whether it is an Integer or not.\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n     function isInteger(a) {\r\n      return (!(parseInt(a).toString() == \'NaN\'))\r\n        }\r\n</pre>\r\n</blockquote>\r\n\r\n\r\nHope it helps.\r\n\r\nRegards\r\nVishal Sahu\r\n\r\nvishal@intelligrape.com\r\n\r\n','Client side validation for Number values',0,'','inherit','open','open','','778-revision-4','','','2010-05-27 13:01:17','2010-05-27 07:31:17','',778,'http://www.intelligrape.com/blog/2010/05/27/778-revision-4/',0,'revision','',0),(783,19,'2010-05-27 13:04:06','2010-05-27 07:34:06','Hi,\r\nRecently in my project , i needed to validate an input (whether it is a integer or not) on client side.\r\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\r\nFor any input value, it checks whether it is an Integer or not.\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n     function isInteger(a) {\r\n      return (!(parseInt(a).toString() == \'NaN\'))\r\n        }\r\n</pre>\r\n</blockquote>\r\n\r\nIt worked for me ans saves a lot of time.\r\nHope it helps.\r\n\r\nRegards\r\nVishal Sahu\r\nvishal@intelligrape.com\r\n\r\n','Client side validation for Number values',0,'','inherit','open','open','','778-revision-5','','','2010-05-27 13:04:06','2010-05-27 07:34:06','',778,'http://www.intelligrape.com/blog/2010/05/27/778-revision-5/',0,'revision','',0),(784,19,'2010-05-27 13:04:58','2010-05-27 07:34:58','Hi,\r\nRecently in my project , i needed to validate an input (whether it is a integer or not) on client side.\r\nI tried many codes but they are  bit lengthy. Then I encountered the simplest way as given below, which worked.\r\nFor any input value, it checks whether it is an Integer or not.\r\n\r\n<blockquote>\r\n<pre lang=\"groovy\">\r\n     function isInteger(a) {\r\n      return (!(parseInt(a).toString() == \'NaN\'))\r\n        }\r\n</pre>\r\n</blockquote>\r\n\r\nIt worked for me ans saves a lot of time.\r\nHope it helps.\r\n\r\nRegards\r\nVishal Sahu\r\nvishal@intelligrape.com\r\n\r\n','Client side validation for Number values',0,'','inherit','open','open','','778-revision-6','','','2010-05-27 13:04:58','2010-05-27 07:34:58','',778,'http://www.intelligrape.com/blog/2010/05/27/778-revision-6/',0,'revision','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL default '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL default '0',
  `term_order` int(11) NOT NULL default '0',
  PRIMARY KEY  (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (12,22,0),(2,1,0),(13,1,0),(12,16,0),(12,8,0),(12,21,0),(5,8,0),(5,16,0),(36,69,0),(36,7,0),(7,8,0),(7,18,0),(7,19,0),(7,20,0),(8,1,0),(9,1,0),(10,1,0),(11,1,0),(38,7,0),(40,1,0),(38,28,0),(36,70,0),(36,1,0),(14,1,0),(14,16,0),(14,23,0),(14,24,0),(14,25,0),(15,1,0),(15,26,0),(15,27,0),(15,16,0),(16,29,0),(17,1,0),(16,28,0),(16,7,0),(16,30,0),(16,31,0),(18,32,0),(18,29,0),(18,30,0),(19,1,0),(20,1,0),(20,7,0),(20,9,0),(20,29,0),(20,32,0),(20,33,0),(19,7,0),(19,9,0),(19,10,0),(19,29,0),(19,34,0),(19,35,0),(19,30,0),(19,32,0),(16,32,0),(18,15,0),(18,7,0),(18,9,0),(21,7,0),(21,9,0),(21,29,0),(21,30,0),(21,36,0),(21,32,0),(22,7,0),(22,9,0),(22,29,0),(22,30,0),(22,32,0),(23,15,0),(23,7,0),(23,9,0),(23,30,0),(23,29,0),(23,36,0),(24,7,0),(24,9,0),(24,30,0),(24,29,0),(24,36,0),(24,37,0),(24,32,0),(24,50,0),(25,1,0),(25,51,0),(26,51,0),(27,7,0),(27,28,0),(27,52,0),(27,31,0),(27,29,0),(27,53,0),(27,9,0),(32,1,0),(29,7,0),(29,9,0),(29,29,0),(29,30,0),(29,54,0),(29,55,0),(29,56,0),(29,57,0),(29,58,0),(27,59,0),(27,10,0),(34,68,0),(33,29,0),(33,30,0),(33,60,0),(33,61,0),(33,7,0),(35,1,0),(34,30,0),(34,29,0),(34,62,0),(34,63,0),(34,64,0),(34,65,0),(34,66,0),(41,1,0),(34,15,0),(34,7,0),(34,9,0),(33,9,0),(42,29,0),(44,7,0),(43,30,0),(43,71,0),(43,72,0),(43,73,0),(43,7,0),(43,9,0),(42,7,0),(44,9,0),(42,74,0),(42,75,0),(42,76,0),(42,77,0),(42,78,0),(42,79,0),(45,80,0),(45,81,0),(46,1,0),(46,80,0),(47,14,0),(47,7,0),(47,52,0),(47,83,0),(47,30,0),(47,29,0),(47,82,0),(48,100,0),(48,29,0),(48,30,0),(48,84,0),(48,85,0),(48,86,0),(48,87,0),(48,88,0),(48,89,0),(48,90,0),(48,7,0),(48,9,0),(50,1,0),(149,1,0),(51,1,0),(52,1,0),(53,1,0),(54,1,0),(55,1,0),(56,1,0),(57,1,0),(58,1,0),(59,1,0),(60,1,0),(62,1,0),(61,1,0),(63,1,0),(64,1,0),(65,1,0),(66,1,0),(67,1,0),(68,1,0),(69,1,0),(70,1,0),(71,1,0),(72,1,0),(73,1,0),(74,1,0),(75,1,0),(76,1,0),(77,1,0),(78,1,0),(79,1,0),(80,1,0),(81,1,0),(82,1,0),(83,1,0),(84,1,0),(85,1,0),(86,1,0),(87,1,0),(88,1,0),(89,1,0),(90,1,0),(91,1,0),(92,1,0),(93,1,0),(94,1,0),(95,1,0),(96,1,0),(97,1,0),(98,1,0),(99,1,0),(100,1,0),(101,1,0),(102,1,0),(103,1,0),(104,1,0),(105,1,0),(106,1,0),(107,1,0),(108,1,0),(109,1,0),(110,1,0),(111,1,0),(112,1,0),(113,1,0),(114,1,0),(115,1,0),(116,1,0),(117,1,0),(118,1,0),(119,1,0),(120,1,0),(121,1,0),(122,1,0),(123,1,0),(124,1,0),(125,1,0),(61,29,0),(61,30,0),(61,31,0),(61,36,0),(61,59,0),(61,101,0),(61,102,0),(61,103,0),(127,1,0),(126,1,0),(61,106,0),(61,107,0),(128,1,0),(129,1,0),(130,1,0),(49,7,0),(49,108,0),(49,109,0),(49,110,0),(49,111,0),(49,112,0),(131,1,0),(132,1,0),(133,1,0),(49,15,0),(137,1,0),(134,1,0),(135,1,0),(138,1,0),(139,1,0),(140,1,0),(141,1,0),(142,1,0),(143,1,0),(144,1,0),(145,1,0),(146,1,0),(147,1,0),(148,1,0),(136,7,0),(150,1,0),(151,1,0),(152,1,0),(153,1,0),(154,1,0),(155,1,0),(156,1,0),(136,29,0),(136,113,0),(136,114,0),(210,1,0),(213,1,0),(199,7,0),(226,1,0),(209,1,0),(162,118,0),(162,117,0),(162,29,0),(182,1,0),(163,1,0),(164,1,0),(165,1,0),(166,1,0),(167,1,0),(168,1,0),(169,1,0),(170,1,0),(171,1,0),(172,1,0),(173,1,0),(174,1,0),(175,1,0),(176,1,0),(177,1,0),(178,1,0),(179,1,0),(180,1,0),(162,7,0),(181,120,0),(183,1,0),(184,1,0),(185,1,0),(186,1,0),(187,1,0),(188,1,0),(189,1,0),(190,1,0),(191,1,0),(181,119,0),(181,121,0),(181,122,0),(192,1,0),(193,1,0),(194,1,0),(195,1,0),(196,1,0),(200,1,0),(211,1,0),(201,1,0),(202,1,0),(203,1,0),(204,1,0),(205,1,0),(199,123,0),(199,124,0),(199,125,0),(199,126,0),(206,1,0),(207,1,0),(208,1,0),(214,1,0),(215,1,0),(216,1,0),(217,1,0),(218,1,0),(219,1,0),(220,1,0),(221,1,0),(222,1,0),(223,1,0),(224,1,0),(225,1,0),(212,9,0),(228,1,0),(227,29,0),(229,1,0),(230,1,0),(231,1,0),(232,1,0),(233,1,0),(227,7,0),(227,54,0),(227,127,0),(227,128,0),(234,1,0),(235,1,0),(237,1,0),(245,1,0),(236,129,0),(236,29,0),(236,130,0),(236,131,0),(236,132,0),(236,133,0),(236,134,0),(238,1,0),(236,135,0),(236,136,0),(239,1,0),(240,1,0),(241,1,0),(242,1,0),(243,1,0),(236,7,0),(244,1,0),(246,1,0),(248,1,0),(247,138,0),(249,1,0),(247,137,0),(247,28,0),(247,139,0),(247,140,0),(247,59,0),(250,1,0),(252,1,0),(251,31,0),(253,1,0),(254,1,0),(255,1,0),(256,1,0),(257,1,0),(258,1,0),(259,1,0),(260,1,0),(261,1,0),(262,1,0),(263,1,0),(264,1,0),(265,1,0),(266,1,0),(267,1,0),(268,1,0),(269,1,0),(270,1,0),(271,1,0),(251,101,0),(251,59,0),(251,141,0),(272,1,0),(251,137,0),(251,28,0),(251,142,0),(251,143,0),(251,144,0),(251,145,0),(273,1,0),(274,1,0),(275,1,0),(276,1,0),(278,1,0),(277,59,0),(277,31,0),(277,146,0),(277,147,0),(277,148,0),(279,1,0),(280,1,0),(281,1,0),(282,1,0),(283,1,0),(284,1,0),(285,1,0),(286,1,0),(287,1,0),(288,1,0),(277,137,0),(277,28,0),(289,1,0),(277,10,0),(291,1,0),(290,29,0),(292,1,0),(293,1,0),(294,1,0),(295,1,0),(296,1,0),(290,7,0),(290,14,0),(290,3,0),(290,149,0),(290,150,0),(290,151,0),(297,1,0),(298,1,0),(299,1,0),(300,1,0),(301,1,0),(302,1,0),(303,1,0),(304,1,0),(306,1,0),(305,1,0),(307,1,0),(309,1,0),(311,1,0),(310,1,0),(308,9,0),(308,152,0),(312,1,0),(313,1,0),(314,1,0),(315,1,0),(316,1,0),(308,30,0),(308,153,0),(308,154,0),(317,1,0),(319,1,0),(435,1,0),(320,1,0),(321,1,0),(322,1,0),(323,1,0),(318,155,0),(318,156,0),(318,157,0),(318,158,0),(318,159,0),(318,160,0),(318,161,0),(318,162,0),(318,163,0),(324,1,0),(325,1,0),(326,1,0),(327,1,0),(328,1,0),(329,1,0),(330,1,0),(331,1,0),(332,1,0),(333,1,0),(334,1,0),(336,1,0),(335,29,0),(337,1,0),(338,1,0),(339,1,0),(340,1,0),(341,1,0),(335,7,0),(335,14,0),(335,149,0),(335,164,0),(335,165,0),(342,1,0),(343,1,0),(344,1,0),(345,1,0),(346,1,0),(347,1,0),(350,1,0),(349,29,0),(351,1,0),(349,7,0),(349,149,0),(349,166,0),(352,1,0),(353,1,0),(354,1,0),(355,1,0),(356,1,0),(349,15,0),(357,1,0),(358,1,0),(360,1,0),(359,168,0),(361,1,0),(362,1,0),(363,1,0),(364,1,0),(359,167,0),(359,7,0),(366,1,0),(359,29,0),(359,169,0),(359,170,0),(365,1,0),(368,1,0),(367,172,0),(369,1,0),(370,1,0),(371,1,0),(372,1,0),(373,1,0),(367,10,0),(367,137,0),(367,28,0),(367,171,0),(367,173,0),(367,174,0),(367,175,0),(367,176,0),(374,1,0),(367,177,0),(375,1,0),(376,1,0),(378,1,0),(377,7,0),(379,1,0),(380,1,0),(381,1,0),(382,1,0),(383,1,0),(384,1,0),(385,1,0),(386,1,0),(387,1,0),(388,1,0),(389,1,0),(390,1,0),(391,1,0),(392,1,0),(393,1,0),(394,1,0),(396,1,0),(395,1,0),(397,1,0),(398,1,0),(399,1,0),(400,1,0),(401,1,0),(402,1,0),(403,1,0),(404,1,0),(405,1,0),(406,1,0),(407,1,0),(408,1,0),(395,167,0),(395,168,0),(395,178,0),(395,179,0),(409,1,0),(411,1,0),(410,59,0),(412,1,0),(413,1,0),(414,1,0),(415,1,0),(416,1,0),(417,1,0),(418,1,0),(419,1,0),(410,137,0),(410,180,0),(410,181,0),(420,1,0),(421,1,0),(422,1,0),(423,1,0),(425,1,0),(434,1,0),(426,1,0),(424,182,0),(424,101,0),(424,31,0),(424,183,0),(427,1,0),(428,1,0),(430,1,0),(432,1,0),(431,1,0),(437,1,0),(438,1,0),(436,1,0),(424,137,0),(424,28,0),(424,171,0),(433,1,0),(318,7,0),(318,184,0),(429,7,0),(429,184,0),(429,164,0),(429,185,0),(429,186,0),(429,187,0),(439,1,0),(440,1,0),(441,1,0),(443,1,0),(442,29,0),(444,1,0),(445,1,0),(446,1,0),(442,7,0),(442,188,0),(442,189,0),(442,190,0),(442,129,0),(447,1,0),(442,191,0),(448,1,0),(449,1,0),(450,1,0),(451,1,0),(452,1,0),(453,1,0),(454,1,0),(456,1,0),(463,1,0),(457,1,0),(458,1,0),(455,168,0),(455,192,0),(455,193,0),(455,194,0),(459,1,0),(460,1,0),(461,1,0),(455,7,0),(455,184,0),(455,167,0),(462,1,0),(464,1,0),(465,1,0),(466,1,0),(467,1,0),(468,1,0),(469,1,0),(470,1,0),(473,1,0),(472,1,0),(474,1,0),(475,1,0),(476,1,0),(478,1,0),(477,1,0),(479,1,0),(480,1,0),(481,1,0),(482,1,0),(483,1,0),(484,1,0),(485,1,0),(486,1,0),(487,1,0),(488,1,0),(489,1,0),(477,29,0),(477,195,0),(477,196,0),(477,197,0),(477,198,0),(477,199,0),(490,1,0),(491,1,0),(492,1,0),(493,1,0),(494,1,0),(495,1,0),(472,7,0),(472,10,0),(472,28,0),(472,171,0),(496,1,0),(497,1,0),(499,1,0),(512,1,0),(500,1,0),(501,1,0),(502,1,0),(503,1,0),(504,1,0),(505,1,0),(506,1,0),(507,1,0),(508,1,0),(509,1,0),(510,1,0),(498,29,0),(498,200,0),(498,201,0),(511,1,0),(498,7,0),(498,184,0),(513,1,0),(515,1,0),(514,30,0),(516,1,0),(517,1,0),(518,1,0),(519,1,0),(514,9,0),(514,202,0),(514,203,0),(514,204,0),(514,205,0),(514,206,0),(514,207,0),(521,1,0),(520,208,0),(522,1,0),(523,1,0),(524,1,0),(525,1,0),(520,137,0),(520,28,0),(520,209,0),(520,210,0),(520,211,0),(520,212,0),(526,1,0),(520,213,0),(528,1,0),(539,1,0),(529,1,0),(530,1,0),(531,1,0),(532,1,0),(533,1,0),(534,1,0),(535,1,0),(536,1,0),(537,1,0),(527,215,0),(527,214,0),(527,7,0),(527,184,0),(527,9,0),(527,10,0),(541,1,0),(540,1,0),(538,7,0),(538,9,0),(538,13,0),(538,29,0),(538,113,0),(538,30,0),(538,216,0),(542,1,0),(543,1,0),(544,1,0),(545,1,0),(546,1,0),(547,1,0),(548,1,0),(550,1,0),(549,1,0),(551,1,0),(552,1,0),(549,7,0),(549,9,0),(553,1,0),(555,1,0),(554,217,0),(556,1,0),(554,7,0),(557,1,0),(559,1,0),(569,1,0),(561,1,0),(562,1,0),(560,1,0),(563,1,0),(564,1,0),(560,9,0),(560,30,0),(560,218,0),(560,219,0),(565,1,0),(566,1,0),(567,1,0),(568,1,0),(558,7,0),(558,220,0),(558,9,0),(570,1,0),(571,1,0),(572,1,0),(574,1,0),(575,1,0),(558,221,0),(558,29,0),(558,222,0),(576,1,0),(573,1,0),(577,1,0),(578,1,0),(579,1,0),(580,1,0),(581,1,0),(582,1,0),(583,1,0),(584,1,0),(585,1,0),(586,1,0),(587,1,0),(588,1,0),(589,1,0),(590,1,0),(591,1,0),(573,223,0),(573,224,0),(573,225,0),(573,226,0),(573,227,0),(573,228,0),(573,229,0),(593,1,0),(592,230,0),(594,1,0),(595,1,0),(596,1,0),(597,1,0),(598,1,0),(599,1,0),(592,80,0),(592,231,0),(592,232,0),(592,233,0),(592,234,0),(592,235,0),(601,1,0),(605,1,0),(602,1,0),(603,1,0),(600,7,0),(600,184,0),(600,13,0),(600,14,0),(604,237,0),(606,1,0),(607,1,0),(608,1,0),(609,1,0),(610,1,0),(611,1,0),(612,1,0),(613,1,0),(614,1,0),(604,7,0),(604,236,0),(604,9,0),(604,238,0),(604,239,0),(616,1,0),(615,29,0),(617,1,0),(615,7,0),(615,13,0),(615,113,0),(615,240,0),(618,7,0),(618,9,0),(619,1,0),(620,1,0),(621,1,0),(622,1,0),(623,1,0),(624,1,0),(625,1,0),(627,1,0),(626,1,0),(628,1,0),(629,1,0),(631,1,0),(641,1,0),(632,1,0),(634,1,0),(633,1,0),(635,1,0),(636,1,0),(637,1,0),(638,1,0),(639,1,0),(640,1,0),(630,167,0),(642,1,0),(633,7,0),(633,9,0),(633,152,0),(633,29,0),(633,30,0),(633,153,0),(633,36,0),(643,14,0),(644,1,0),(643,149,0),(643,29,0),(643,241,0),(643,242,0),(643,243,0),(645,1,0),(646,1,0),(647,1,0),(648,1,0),(649,1,0),(650,1,0),(651,1,0),(652,1,0),(653,1,0),(654,1,0),(656,1,0),(655,1,0),(657,1,0),(643,7,0),(658,1,0),(660,1,0),(659,1,0),(661,1,0),(662,1,0),(664,1,0),(663,1,0),(665,1,0),(663,15,0),(666,1,0),(663,8,0),(667,1,0),(668,1,0),(669,1,0),(670,1,0),(671,1,0),(672,1,0),(673,1,0),(674,1,0),(675,1,0),(676,1,0),(678,1,0),(677,1,0),(679,1,0),(680,1,0),(682,1,0),(681,1,0),(683,1,0),(684,1,0),(686,1,0),(685,1,0),(687,1,0),(688,1,0),(689,1,0),(690,1,0),(691,1,0),(692,1,0),(693,1,0),(694,1,0),(695,1,0),(696,1,0),(697,1,0),(698,1,0),(699,1,0),(700,1,0),(701,1,0),(702,1,0),(681,29,0),(681,53,0),(681,30,0),(681,244,0),(704,1,0),(703,1,0),(705,1,0),(706,1,0),(707,1,0),(708,1,0),(709,1,0),(711,1,0),(710,245,0),(712,1,0),(713,1,0),(715,1,0),(716,1,0),(717,1,0),(718,1,0),(719,1,0),(710,8,0),(710,246,0),(710,247,0),(720,1,0),(714,30,0),(721,1,0),(722,1,0),(723,1,0),(714,7,0),(714,9,0),(714,29,0),(714,62,0),(724,1,0),(725,1,0),(726,1,0),(727,1,0),(728,1,0),(729,1,0),(730,1,0),(703,9,0),(703,10,0),(731,1,0),(732,1,0),(733,7,0),(733,220,0),(734,1,0),(733,29,0),(733,248,0),(735,1,0),(736,1,0),(737,1,0),(738,1,0),(739,1,0),(740,1,0),(741,1,0),(742,1,0),(744,1,0),(743,1,0),(745,1,0),(746,1,0),(748,1,0),(747,249,0),(749,1,0),(750,1,0),(751,1,0),(752,1,0),(753,1,0),(754,1,0),(755,1,0),(756,1,0),(757,1,0),(758,1,0),(747,7,0),(747,9,0),(747,250,0),(747,33,0),(747,72,0),(747,29,0),(759,1,0),(760,1,0),(761,1,0),(762,1,0),(763,1,0),(764,1,0),(743,251,0),(743,7,0),(743,29,0),(743,252,0),(765,1,0),(714,253,0),(766,1,0),(768,1,0),(767,254,0),(769,1,0),(770,1,0),(771,1,0),(772,1,0),(773,1,0),(767,7,0),(767,9,0),(767,152,0),(767,255,0),(767,256,0),(774,1,0),(775,1,0),(776,1,0),(777,1,0),(779,1,0),(784,1,0),(780,1,0),(781,1,0),(782,1,0),(783,1,0),(778,7,0),(778,137,0),(778,28,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL auto_increment,
  `term_id` bigint(20) unsigned NOT NULL default '0',
  `taxonomy` varchar(32) NOT NULL default '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL default '0',
  `count` bigint(20) NOT NULL default '0',
  PRIMARY KEY  (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=MyISAM AUTO_INCREMENT=257 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,20),(2,2,'link_category','',0,0),(3,3,'post_tag','',0,1),(4,4,'post_tag','',0,0),(16,8,'post_tag','',0,4),(5,5,'category','',0,0),(6,6,'category','',0,0),(7,7,'category','',0,50),(8,8,'category','',0,5),(9,9,'category','',0,28),(10,10,'category','',0,7),(11,11,'category','',0,0),(12,12,'category','',0,0),(13,13,'category','',0,3),(14,14,'category','',0,5),(15,15,'category','',0,6),(17,16,'post_tag','',0,0),(18,17,'post_tag','',0,1),(19,18,'post_tag','',0,1),(20,19,'post_tag','',0,1),(21,20,'post_tag','',0,1),(22,21,'post_tag','',0,1),(23,22,'post_tag','',0,1),(24,23,'post_tag','',0,1),(25,24,'post_tag','',0,1),(26,25,'post_tag','',0,1),(27,26,'post_tag','',0,1),(28,27,'category','',0,10),(29,7,'post_tag','',0,36),(30,9,'post_tag','',0,20),(31,27,'post_tag','',0,6),(32,28,'post_tag','',0,6),(33,29,'post_tag','',0,2),(34,30,'post_tag','',0,1),(35,31,'post_tag','',0,1),(36,32,'post_tag','',0,4),(37,33,'post_tag','',0,0),(38,34,'post_tag','',0,0),(39,35,'post_tag','',0,0),(40,36,'post_tag','',0,0),(41,37,'post_tag','',0,0),(42,38,'post_tag','',0,0),(43,39,'post_tag','',0,0),(44,40,'post_tag','',0,0),(45,41,'post_tag','',0,0),(46,42,'post_tag','',0,0),(47,43,'post_tag','',0,0),(48,44,'post_tag','',0,0),(49,45,'post_tag','',0,0),(50,46,'post_tag','',0,0),(51,47,'category','',0,2),(52,48,'post_tag','',0,2),(53,49,'post_tag','',0,2),(54,50,'post_tag','',0,2),(55,51,'post_tag','',0,1),(56,52,'post_tag','',0,1),(57,53,'post_tag','',0,1),(58,54,'post_tag','',0,1),(59,55,'post_tag','',0,6),(60,56,'post_tag','',0,1),(61,57,'post_tag','',0,1),(62,58,'post_tag','',0,2),(63,59,'post_tag','',0,1),(64,60,'post_tag','',0,1),(65,61,'post_tag','',0,1),(66,62,'post_tag','',0,1),(67,63,'post_tag','',0,0),(69,65,'post_tag','',0,0),(68,64,'post_tag','',0,1),(70,66,'post_tag','',0,0),(71,67,'post_tag','',0,1),(72,68,'post_tag','',0,2),(73,69,'post_tag','',0,1),(74,70,'post_tag','',0,1),(75,71,'post_tag','',0,1),(76,72,'post_tag','',0,1),(77,73,'post_tag','',0,1),(78,74,'post_tag','',0,1),(79,75,'post_tag','',0,1),(80,76,'category','',0,3),(81,77,'post_tag','',0,1),(82,14,'post_tag','',0,1),(83,78,'post_tag','',0,1),(84,79,'post_tag','',0,1),(85,80,'post_tag','',0,1),(86,81,'post_tag','',0,1),(87,82,'post_tag','',0,1),(88,83,'post_tag','',0,1),(89,84,'post_tag','',0,1),(90,85,'post_tag','',0,1),(91,86,'post_tag','',0,0),(92,87,'post_tag','',0,0),(93,88,'post_tag','',0,0),(94,89,'post_tag','',0,0),(95,90,'post_tag','',0,0),(96,91,'post_tag','',0,0),(97,92,'post_tag','',0,0),(98,93,'post_tag','',0,0),(99,94,'post_tag','',0,0),(100,95,'post_tag','',0,1),(101,96,'post_tag','',0,3),(102,97,'post_tag','',0,1),(103,98,'post_tag','',0,1),(104,99,'post_tag','',0,0),(105,100,'post_tag','',0,0),(106,101,'post_tag','',0,1),(107,102,'post_tag','',0,1),(108,103,'post_tag','',0,1),(109,104,'post_tag','',0,1),(110,105,'post_tag','',0,1),(111,106,'post_tag','',0,1),(112,107,'post_tag','',0,1),(113,13,'post_tag','',0,3),(114,108,'post_tag','',0,1),(115,109,'category','',0,0),(116,110,'category','',109,0),(117,111,'post_tag','',0,1),(118,112,'post_tag','',0,1),(119,113,'category','',0,1),(120,114,'post_tag','',0,1),(121,115,'post_tag','',0,1),(122,116,'post_tag','',0,1),(123,117,'post_tag','',0,1),(124,118,'post_tag','',0,1),(125,119,'post_tag','',0,1),(126,120,'post_tag','',0,1),(127,121,'post_tag','',0,1),(128,122,'post_tag','',0,1),(129,123,'post_tag','',0,2),(130,124,'post_tag','',0,1),(131,125,'post_tag','',0,1),(132,126,'post_tag','',0,1),(133,127,'post_tag','',0,1),(134,128,'post_tag','',0,1),(135,129,'post_tag','',0,1),(136,130,'post_tag','',0,1),(137,55,'category','',0,8),(138,131,'post_tag','',0,1),(139,132,'post_tag','',0,1),(140,133,'post_tag','',0,1),(141,134,'post_tag','',0,1),(142,135,'post_tag','',0,1),(143,136,'post_tag','',0,1),(144,137,'post_tag','',0,1),(145,138,'post_tag','',0,1),(146,139,'post_tag','',0,1),(147,140,'post_tag','',0,1),(148,141,'post_tag','',0,1),(149,142,'post_tag','',0,4),(150,143,'post_tag','',0,1),(151,144,'post_tag','',0,1),(152,145,'category','',9,3),(153,145,'post_tag','',0,2),(154,146,'post_tag','',0,1),(155,147,'post_tag','',0,1),(156,148,'post_tag','',0,1),(157,149,'post_tag','',0,1),(158,150,'post_tag','',0,1),(159,151,'post_tag','',0,1),(160,152,'post_tag','',0,1),(161,153,'post_tag','',0,1),(162,154,'post_tag','',0,1),(163,155,'post_tag','',0,1),(164,156,'post_tag','',0,2),(165,157,'post_tag','',0,1),(166,158,'post_tag','',0,1),(167,159,'category','',0,4),(168,159,'post_tag','',0,3),(169,160,'post_tag','',0,1),(170,161,'post_tag','',0,1),(171,162,'category','',1,3),(172,163,'post_tag','',0,1),(173,164,'post_tag','',0,1),(174,165,'post_tag','',0,1),(175,166,'post_tag','',0,1),(176,167,'post_tag','',0,1),(177,168,'post_tag','',0,1),(178,169,'post_tag','',0,1),(179,170,'post_tag','',0,1),(180,171,'post_tag','',0,1),(181,172,'post_tag','',0,1),(182,173,'post_tag','',0,1),(183,174,'post_tag','',0,1),(184,175,'category','',0,6),(185,176,'post_tag','',0,1),(186,177,'post_tag','',0,1),(187,178,'post_tag','',0,1),(188,179,'post_tag','',0,1),(189,180,'post_tag','',0,1),(190,181,'post_tag','',0,1),(191,182,'post_tag','',0,1),(192,183,'post_tag','',0,1),(193,184,'post_tag','',0,1),(194,185,'post_tag','',0,1),(195,186,'post_tag','',0,1),(196,187,'post_tag','',0,1),(197,188,'post_tag','',0,1),(198,189,'post_tag','',0,1),(199,190,'post_tag','',0,1),(200,191,'post_tag','',0,1),(201,192,'post_tag','',0,1),(202,193,'post_tag','',0,1),(203,194,'post_tag','',0,1),(204,195,'post_tag','',0,1),(205,196,'post_tag','',0,1),(206,197,'post_tag','',0,1),(207,198,'post_tag','',0,1),(208,199,'post_tag','',0,1),(209,200,'post_tag','',0,1),(210,201,'post_tag','',0,1),(211,202,'post_tag','',0,1),(212,203,'post_tag','',0,1),(213,204,'category','',27,1),(214,205,'category','',1,1),(215,206,'category','',0,1),(216,207,'post_tag','',0,1),(217,208,'post_tag','',0,1),(218,209,'post_tag','',0,1),(219,210,'post_tag','',0,1),(220,211,'category','',7,2),(221,212,'post_tag','',0,1),(222,213,'post_tag','',0,1),(223,214,'post_tag','',0,1),(224,215,'post_tag','',0,1),(225,216,'post_tag','',0,1),(226,217,'post_tag','',0,1),(227,218,'post_tag','',0,1),(228,219,'post_tag','',0,1),(229,220,'post_tag','',0,1),(230,76,'post_tag','',0,1),(231,221,'post_tag','',0,1),(232,222,'post_tag','',0,1),(233,223,'post_tag','',0,1),(234,224,'post_tag','',0,1),(235,225,'post_tag','',0,1),(236,226,'category','',7,1),(237,226,'post_tag','',0,1),(238,227,'post_tag','',0,1),(239,228,'post_tag','',0,1),(240,229,'post_tag','',0,1),(241,230,'post_tag','',0,1),(242,231,'post_tag','',0,1),(243,232,'post_tag','',0,1),(244,233,'post_tag','',0,1),(245,234,'post_tag','',0,1),(246,235,'post_tag','',0,1),(247,236,'post_tag','',0,1),(248,237,'post_tag','',0,1),(249,238,'post_tag','',0,1),(250,239,'post_tag','',0,1),(251,240,'category','',0,1),(252,240,'post_tag','',0,1),(253,241,'post_tag','',0,1),(254,242,'post_tag','',0,1),(255,243,'post_tag','',0,1),(256,244,'post_tag','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL auto_increment,
  `name` varchar(200) NOT NULL default '',
  `slug` varchar(200) NOT NULL default '',
  `term_group` bigint(10) NOT NULL default '0',
  PRIMARY KEY  (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=245 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Blogroll','blogroll',0),(3,'test','test',0),(4,'blog','blog',0),(5,'Agile','agile',0),(6,'Eclipse','eclipse',0),(7,'Grails','grails',0),(8,'Ubuntu','ubuntu',0),(9,'Groovy','groovy',0),(10,'Java','java',0),(11,'Magnolia','magnolia',0),(12,'Maven','maven',0),(13,'Spring','spring',0),(14,'Testing','testing',0),(15,'General','general',0),(16,'tomcat apache integration','tomcat-apache-integration',0),(17,'tomcat','tomcat',0),(18,'apache','apache',0),(19,'ApacheTomcatIntegration','apachetomcatintegration',0),(20,'AMD 64','amd-64',0),(21,'VMWare','vmware',0),(22,'gutsy','gutsy',0),(23,'gibbon','gibbon',0),(24,'internet explorer','internet-explorer',0),(25,'selenium','selenium',0),(26,'firefox','firefox',0),(27,'jquery','jquery',0),(28,'pradeep','pradeep',0),(29,'GORM','gorm',0),(30,'config','config',0),(31,'properties','properties',0),(32,'gsp','gsp',0),(33,'Intelligrape','intelligrape',0),(34,'','34',0),(35,'','35',0),(36,'','36',0),(37,'','37',0),(38,'','38',0),(39,'','39',0),(40,'','40',0),(41,'','41',0),(42,'','42',0),(43,'','43',0),(44,'','44',0),(45,'','45',0),(46,'','46',0),(47,'Alfresco Webscripts','alfresco-webscripts',0),(48,'chandan','chandan',0),(49,'JSON','json',0),(50,'url mappings','url-mappings',0),(51,'link rewriting','link-rewriting',0),(52,'html','html',0),(53,'urls','urls',0),(54,'restricting','restricting',0),(55,'javascript','javascript',0),(56,'collection','collection',0),(57,'groupBy','groupby',0),(58,'date','date',0),(59,'timecategory','timecategory',0),(60,'modifying','modifying',0),(61,'finding','finding',0),(62,'future','future',0),(63,'previous','previous',0),(64,'past','past',0),(65,'plugins','plugins',0),(66,'grails 1.1','grails-11',0),(67,'Map','map',0),(68,'Sort','sort',0),(69,'Reverse Sort','reverse-sort',0),(70,'image upload','image-upload',0),(71,'file upload','file-upload',0),(72,'file render','file-render',0),(73,'image render','image-render',0),(74,'multipartfile','multipartfile',0),(75,'store  in a database','store-in-a-database',0),(76,'MySql','mysql',0),(77,'Dumping MySql Database','dumping-mysql-database',0),(78,'G-Func','g-func',0),(79,'multiple paginations','multiple-paginations',0),(80,'multiple pagination','multiple-pagination',0),(81,'more than one pagination','more-than-one-pagination',0),(82,'two pagination','two-pagination',0),(83,'pagination','pagination',0),(84,'paginate','paginate',0),(85,'two pagination on the same page','two-pagination-on-the-same-page',0),(86,'','86',0),(87,'','87',0),(88,'','88',0),(89,'','89',0),(90,'','90',0),(91,'','91',0),(92,'','92',0),(93,'','93',0),(94,'','94',0),(95,'','95',0),(96,'Ajax','ajax',0),(97,'Context Menu','context-menu',0),(98,'connector','connector',0),(99,'jquery file tree plugin','jquery-file-tree-plugin',0),(100,'jquery context menu plugin','jquery-context-menu-plugin',0),(101,'FileTree','filetree',0),(102,'File Browser','file-browser',0),(103,'Command Objects','command-objects',0),(104,'message.properties','messageproperties',0),(105,'command','command',0),(106,'hasErrors','haserrors',0),(107,'constraints','constraints',0),(108,'session','session',0),(109,'Browser','browser',0),(110,'Flock','flock',0),(111,'wordpress plugin','wordpress-plugin',0),(112,'excerpt recent posts','excerpt-recent-posts',0),(113,'Alfresco','alfresco',0),(114,'alfresco tinymce','alfresco-tinymce',0),(115,'html code in tinymce','html-code-in-tinymce',0),(116,'videos in tinymce','videos-in-tinymce',0),(117,'grails 1.1.1','grails-111',0),(118,'caching','caching',0),(119,'quartz plugin','quartz-plugin',0),(120,'springcache plugin didn\'t work','springcache-plugin-didnt-work',0),(121,'reverse url mappings','reverse-url-mappings',0),(122,'url ending with .html','url-ending-with-html',0),(123,'withTransaction','withtransaction',0),(124,'batch processing','batch-processing',0),(125,'save large number of objects','save-large-number-of-objects',0),(126,'clear session','clear-session',0),(127,'slow insertion','slow-insertion',0),(128,'clear hibernate session','clear-hibernate-session',0),(129,'batch insertion','batch-insertion',0),(130,'quickly save large number of objects','quickly-save-large-number-of-objects',0),(131,'hotkeys','hotkeys',0),(132,'shortcuts','shortcuts',0),(133,'hotkey','hotkey',0),(134,'Responder','responder',0),(135,'spinner','spinner',0),(136,'busy indicator','busy-indicator',0),(137,'centralized ajax responder','centralized-ajax-responder',0),(138,'prototype library','prototype-library',0),(139,'credit card','credit-card',0),(140,'merchant provider','merchant-provider',0),(141,'validation','validation',0),(142,'integration test','integration-test',0),(143,'controller integration test','controller-integration-test',0),(144,'tips for integration test','tips-for-integration-test',0),(145,'MetaProgramming','metaprogramming',0),(146,'dynamic properties','dynamic-properties',0),(147,'reschedule','reschedule',0),(148,'quartz job','quartz-job',0),(149,'quartzScheduler','quartzscheduler',0),(150,'timeout','timeout',0),(151,'programmatically set timeout','programmatically-set-timeout',0),(152,'getTrigger','gettrigger',0),(153,'repeatInterval','repeatinterval',0),(154,'repeatCount','repeatcount',0),(155,'grails quartz plugin','grails-quartz-plugin',0),(156,'jsecurity plugin','jsecurity-plugin',0),(157,'logged in user','logged-in-user',0),(158,'application path','application-path',0),(159,'Jasper','jasper',0),(160,'report','report',0),(161,'pdf reports','pdf-reports',0),(162,'ajax','ajax-uncategorized',0),(163,'Add new tag','add-new-tag',0),(164,'ajax call delay','ajax-call-delay',0),(165,'ajax dynamic search delay','ajax-dynamic-search-delay',0),(166,'ajax keypress delay','ajax-keypress-delay',0),(167,'stop ajax calls bombardment','stop-ajax-calls-bombardment',0),(168,'Implementing Delay Between Ajax Calls','implementing-delay-between-ajax-calls',0),(169,'ireport','ireport',0),(170,'compiling error','compiling-error',0),(171,'google analytics','google-analytics',0),(172,'image tracking','image-tracking',0),(173,'ajaxComplete','ajaxcomplete',0),(174,'Monitor ajax response','monitor-ajax-response',0),(175,'Grails Plugins','grails-plugins',0),(176,'authToken','authtoken',0),(177,'jsecSecurityManager','jsecsecuritymanager',0),(178,'bootstrap','bootstrap',0),(179,'StaleObjectStateException','staleobjectstateexception',0),(180,'Row was updated or deleted by another transaction','row-was-updated-or-deleted-by-another-transaction',0),(181,'executeUpdate','executeupdate',0),(182,'executeUpdate not transactional','executeupdate-not-transactional',0),(183,'subreport','subreport',0),(184,'compile reports','compile-reports',0),(185,'grails jasper','grails-jasper',0),(186,'jms','jms',0),(187,'activemq','activemq',0),(188,'redelivery policy','redelivery-policy',0),(189,'dlq','dlq',0),(190,'jms plugin 0.5','jms-plugin-0-5',0),(191,'ImageTools plugin','imagetools-plugin',0),(192,'creating thumbnails','creating-thumbnails',0),(193,'xmlslurper','xmlslurper',0),(194,'html parsing','html-parsing',0),(195,'text box','text-box',0),(196,'check box','check-box',0),(197,'select box','select-box',0),(198,'tagsoup','tagsoup',0),(199,'jquery validator','jquery-validator',0),(200,'jquery ui datepicker','jquery-ui-datepicker',0),(201,'custom validator','custom-validator',0),(202,'format date client side','format-date-client-side',0),(203,'invalid date but correct formatting','invalid-date-but-correct-formatting',0),(204,'Jquery plugins','jquery-plugins',0),(205,'Charts','charts',0),(206,'JfreeChart','jfreechart',0),(207,'externalized configuration','externalized-configuration',0),(208,'Http Session timeout','http-session-timeout',0),(209,'convert pdf to image','convert-pdf-to-image',0),(210,'imagemagick','imagemagick',0),(211,'taglib','taglib',0),(212,'conditional anchor in grails','conditional-anchor-in-grails',0),(213,'grails taglib','grails-taglib',0),(214,'Google Form Submission','google-form-submission',0),(215,'newsletter subscription','newsletter-subscription',0),(216,'adding or embed google form in webpage','adding-or-embed-google-form-in-webpage',0),(217,'submit form details to google form','submit-form-details-to-google-form',0),(218,'link to google form','link-to-google-form',0),(219,'google form','google-form',0),(220,'google form submit','google-form-submit',0),(221,'table','table',0),(222,'backup','backup',0),(223,'restore','restore',0),(224,'dump tables','dump-tables',0),(225,'restore tables','restore-tables',0),(226,'REST','rest',0),(227,'Security','security',0),(228,'generating XML','generating-xml',0),(229,'services','services',0),(230,'save time','save-time',0),(231,'No bootstrapping','no-bootstrapping',0),(232,'fast','fast',0),(233,'json converter','json-converter',0),(234,'Vi','vi',0),(235,'Vi editor','vi-editor',0),(236,'vimtutor','vimtutor',0),(237,'uploadForm','uploadform',0),(238,'grails createCriteria','grails-createcriteria',0),(239,'createCriteria sort','createcriteria-sort',0),(240,'JBPM','jbpm',0),(241,'date difference','date-difference',0),(242,'groovy metaprogramming','groovy-metaprogramming',0),(243,'injecting method to string class in groovy','injecting-method-to-string-class-in-groovy',0),(244,'convert string to number','convert-string-to-number',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL auto_increment,
  `user_id` bigint(20) unsigned NOT NULL default '0',
  `meta_key` varchar(255) default NULL,
  `meta_value` longtext,
  PRIMARY KEY  (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=MyISAM AUTO_INCREMENT=235 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','admin'),(2,1,'rich_editing','true'),(3,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(4,1,'wp_user_level','10'),(81,13,'wp_user_level','10'),(80,13,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(79,13,'rich_editing','true'),(78,13,'nickname','bhagwat'),(77,13,'last_name','Kumar'),(12,1,'wp_autosave_draft_ids','a:14:{i:-1204039411;i:4;i:-1204047341;i:5;i:-1204048125;i:6;i:-1204076531;i:7;i:-1204181138;i:8;i:-1204419125;i:9;i:-1204726464;i:10;i:-1205400706;i:11;i:-1207620933;i:12;i:-1208752690;i:13;i:-1208963500;i:14;i:-1210161690;i:15;i:-1221541046;i:23;i:-1239019124;i:35;}'),(76,13,'first_name','Bhagwat'),(75,12,'wp_user_level','10'),(74,12,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(73,12,'rich_editing','true'),(71,12,'last_name','Mittal'),(72,12,'nickname','dmittal'),(70,12,'first_name','Deepak'),(20,4,'first_name','Himanshu'),(21,4,'last_name','Seth'),(22,4,'nickname','himanshu'),(23,4,'rich_editing','true'),(24,4,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(25,4,'wp_user_level','10'),(26,4,'wp_autosave_draft_ids','a:4:{i:-1230904115;i:25;i:-1231223381;i:26;i:-1259090811;i:308;i:-1273857764;i:743;}'),(27,5,'first_name','Chandan'),(28,5,'last_name','Luthra'),(29,5,'nickname','chandan'),(30,5,'rich_editing','true'),(31,5,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(32,5,'wp_user_level','10'),(33,5,'wp_autosave_draft_ids','a:5:{i:-1235132339;i:27;i:-1240378070;i:47;i:-1248963812;i:157;i:-1250865289;i:212;i:-1271322835;i:549;}'),(34,6,'first_name','Imran'),(35,6,'last_name','Mir'),(36,6,'nickname','imran'),(37,6,'rich_editing','true'),(38,6,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(39,6,'wp_user_level','10'),(40,7,'first_name','Amit'),(41,7,'last_name','Jain'),(42,7,'nickname','amit'),(43,7,'rich_editing','true'),(44,7,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(45,7,'wp_user_level','10'),(46,8,'first_name','Aman'),(47,8,'last_name','Aggarwal'),(48,8,'nickname','Aman'),(49,8,'rich_editing','true'),(50,8,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(51,8,'wp_user_level','10'),(52,9,'first_name','Gaurav'),(53,9,'last_name','Chauhan'),(54,9,'nickname','gaurav'),(55,9,'rich_editing','true'),(56,9,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(57,9,'wp_user_level','10'),(58,10,'first_name','Vivek'),(59,10,'last_name','Krishna'),(60,10,'nickname','Vivek Krishna'),(61,10,'rich_editing','true'),(62,10,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(63,10,'wp_user_level','10'),(64,11,'first_name','Uday'),(65,11,'last_name','Pratap'),(66,11,'nickname','Uday'),(67,11,'rich_editing','true'),(68,11,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(69,11,'wp_user_level','10'),(82,9,'description','I am working as Software Development Engineer with Intelligrape Software. I am currently working on Groovy and Grails. Working here is a great fun.'),(83,8,'wp_autosave_draft_ids','a:6:{i:-1238733837;i:29;i:-1239017067;i:33;i:-1239017523;i:34;i:-1239105500;i:39;i:-1239791594;i:43;i:-1272876892;i:633;}'),(84,8,'jabber','aman.aggarwal@gmail.com'),(85,7,'jabber','admin'),(86,13,'jabber','admin'),(87,5,'jabber','admin'),(88,9,'jabber','admin'),(89,6,'jabber','admin'),(90,11,'jabber','admin'),(92,10,'wp_autosave_draft_ids','a:8:{i:-1239093787;i:36;i:-1239098479;i:38;i:-1245051055;i:136;i:-1258723057;i:305;i:-1267113898;i:410;i:-1268890499;i:477;i:-1271316339;i:538;i:-1272464426;i:615;}'),(93,7,'wp_autosave_draft_ids','a:20:{i:-1239773485;i:42;i:-1240478224;i:48;i:-1249238737;i:160;i:-1250570624;i:181;i:-1250830862;i:197;i:-1250831296;i:198;i:-1250831737;i:199;i:-1251443919;i:227;i:-1254158274;i:247;i:-1257273001;i:277;i:-1257360215;i:290;i:-1260178433;i:335;i:-1264069250;i:349;i:-1267037866;i:359;i:-1267813016;i:442;i:-1269581244;i:514;i:-1272010451;i:592;i:-1273143037;i:643;i:-1273466732;i:655;i:-1273825187;i:714;}'),(94,11,'wp_autosave_draft_ids','a:3:{i:-1239806145;i:44;i:-1271655921;i:560;i:-1274436508;i:767;}'),(95,9,'wp_autosave_draft_ids','a:3:{i:-1239865111;i:45;i:-1239866296;i:46;i:-1271331422;i:554;}'),(96,6,'wp_autosave_draft_ids','a:7:{i:-1243225207;i:49;i:-1252492353;i:236;i:-1267070822;i:367;i:-1268745805;i:462;i:-1268798396;i:471;i:-1268800095;i:472;i:-1273859072;i:747;}'),(97,6,'wp_usersettings','editor=html&m0=o&m1=o&m2=c&m3=c&m4=c&m5=c&m6=c&m7=c&m8=c&m9=c'),(98,6,'wp_usersettingstime','1267070698'),(99,13,'wp_autosave_draft_ids','a:7:{i:-1243231576;i:61;i:-1255092415;i:251;i:-1259647993;i:318;i:-1267682029;i:424;i:-1267687622;i:429;i:-1270029517;i:520;i:-1272525072;i:618;}'),(100,5,'wp_usersettings','editor=html&m0=o&m1=c&m2=o&m3=c&m4=c&m5=c&m6=c&m7=c&m8=c&m9=c'),(101,5,'wp_usersettingstime','1260454663'),(102,13,'wp_usersettings','editor=html&hidetb=1&m0=c&m1=o&m2=c&m3=c&m4=c&m5=o&m6=c&m7=c&m8=o&m9=c&imgsize=full&align=none'),(103,13,'wp_usersettingstime','1259649279'),(104,4,'closedpostboxes_dashboard','a:1:{i:0;s:0:\"\";}'),(105,4,'metaboxhidden_dashboard','a:1:{i:0;s:0:\"\";}'),(106,7,'wp_usersettings','m0=c&m1=o&m2=c&m3=c&m4=c&m5=o&m6=o&m7=o&m8=o&m9=o&editor=html'),(107,7,'wp_usersettingstime','1267849018'),(108,10,'wp_usersettings','editor=html&m0=o&m1=o&m2=c&m3=c&m4=c&m5=c&m6=c&m7=c&m8=c&m9=o'),(109,10,'wp_usersettingstime','1271320172'),(110,7,'comment_shortcuts','false'),(111,7,'admin_color','fresh'),(112,7,'closedpostboxes_dashboard','a:1:{i:0;s:0:\"\";}'),(113,7,'metaboxhidden_dashboard','a:1:{i:0;s:0:\"\";}'),(114,4,'wp_metaboxorder_post','a:3:{s:4:\"side\";s:29:\"submitdiv,tagsdiv,categorydiv\";s:6:\"normal\";s:71:\"postexcerpt,trackbacksdiv,postcustom,commentstatusdiv,slugdiv,authordiv\";s:8:\"advanced\";s:0:\"\";}'),(115,4,'wp_usersettings','editor=html'),(116,4,'wp_usersettingstime','1259731054'),(117,14,'first_name','Sachin'),(118,14,'last_name','Anand'),(119,14,'nickname','sachin'),(120,14,'rich_editing','true'),(121,14,'comment_shortcuts','false'),(122,14,'admin_color','classic'),(123,14,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(124,14,'wp_user_level','10'),(125,15,'first_name','Abhishek'),(126,15,'last_name','Tejpaul'),(127,15,'nickname','abhishek'),(128,15,'rich_editing','true'),(129,15,'comment_shortcuts','false'),(130,15,'admin_color','fresh'),(131,15,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(132,15,'wp_user_level','10'),(133,16,'first_name','Hitesh'),(134,16,'last_name','Bhatia'),(135,16,'nickname','hitesh'),(136,16,'rich_editing','true'),(137,16,'comment_shortcuts','false'),(138,16,'admin_color','fresh'),(139,16,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(140,16,'wp_user_level','10'),(141,17,'first_name','Salil'),(142,17,'last_name','Kalia'),(143,17,'nickname','salil'),(144,17,'rich_editing','true'),(145,17,'comment_shortcuts','false'),(146,17,'admin_color','fresh'),(147,17,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(148,17,'wp_user_level','10'),(149,18,'first_name','Niraj'),(150,18,'last_name','Kumar'),(151,18,'nickname','niraj'),(152,18,'rich_editing','true'),(153,18,'comment_shortcuts','false'),(154,18,'admin_color','fresh'),(155,18,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(156,18,'wp_user_level','10'),(157,19,'first_name','Vishal'),(158,19,'last_name','Sahu'),(159,19,'nickname','vishal'),(160,19,'rich_editing','true'),(161,19,'comment_shortcuts','false'),(162,19,'admin_color','fresh'),(163,19,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(164,19,'wp_user_level','10'),(165,20,'first_name','Tarun'),(166,20,'last_name','Pareek'),(167,20,'nickname','tarun'),(168,20,'rich_editing','true'),(169,20,'comment_shortcuts','false'),(170,20,'admin_color','fresh'),(171,20,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(172,20,'wp_user_level','10'),(173,21,'first_name','Anshul'),(174,21,'last_name','Sharma'),(175,21,'nickname','anshul'),(176,21,'rich_editing','true'),(177,21,'comment_shortcuts','false'),(178,21,'admin_color','fresh'),(179,21,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(180,21,'wp_user_level','10'),(181,14,'wp_usersettings','m1=c&editor=html&m7=o&m5=o'),(182,14,'wp_usersettingstime','1267079574'),(183,20,'wp_usersettings','m1=o&editor=html'),(184,20,'wp_usersettingstime','1271665160'),(185,16,'wp_usersettings','m0=c&editor=html&uploader=1&align=left&hidetb=0'),(186,16,'wp_usersettingstime','1267091761'),(187,16,'wp_autosave_draft_ids','a:4:{i:-1267086635;i:395;i:-1271654438;i:558;i:-1272828968;i:626;i:-1272831131;i:630;}'),(188,19,'wp_usersettings','m1=o&editor=html'),(189,19,'wp_usersettingstime','1270049834'),(190,19,'closedpostboxes_post','a:1:{i:0;s:0:\"\";}'),(191,19,'metaboxhidden_post','a:1:{i:0;s:7:\"slugdiv\";}'),(192,13,'comment_shortcuts','false'),(193,13,'admin_color','fresh'),(194,19,'wp_autosave_draft_ids','a:4:{i:-1268414042;i:455;i:-1270049133;i:527;i:-1272353019;i:600;i:-1274942903;i:778;}'),(195,15,'wp_autosave_draft_ids','a:2:{i:-1269329725;i:498;i:-1273823467;i:710;}'),(196,15,'wp_usersettings','editor=tinymce'),(197,15,'wp_usersettingstime','1273826602'),(198,9,'wp_usersettings','editor=html'),(199,9,'wp_usersettingstime','1271330676'),(200,11,'wp_usersettings','editor=html'),(201,11,'wp_usersettingstime','1271657254'),(202,20,'wp_autosave_draft_ids','a:1:{i:-1271658580;i:573;}'),(203,14,'wp_autosave_draft_ids','a:1:{i:-1272453046;i:604;}'),(204,14,'wp_metaboxorder_post','a:3:{s:4:\"side\";s:38:\"submitdiv,tagsdiv-post_tag,categorydiv\";s:6:\"normal\";s:84:\"trackbacksdiv,postexcerpt,postcustom,commentstatusdiv,slugdiv,authordiv,revisionsdiv\";s:8:\"advanced\";s:0:\"\";}'),(205,14,'screen_layout_post','2'),(206,8,'wp_usersettings','editor=html'),(207,8,'wp_usersettingstime','1272878017'),(208,10,'description','Open Source Enthusiast, Agile Practitioner, Grails Lover, jQuery Worshiper.'),(209,10,'comment_shortcuts','false'),(210,10,'admin_color','fresh'),(211,21,'wp_usersettings','m1=o&editor=html'),(212,21,'wp_usersettingstime','1273736460'),(213,21,'wp_autosave_draft_ids','a:4:{i:-1273598260;i:659;i:-1273736250;i:677;i:-1273752881;i:685;i:-1273771322;i:703;}'),(214,12,'comment_shortcuts','false'),(215,12,'admin_color','fresh'),(216,12,'wp_autosave_draft_ids','a:1:{i:-1273727579;i:663;}'),(217,12,'wp_usersettings','editor=html'),(218,12,'wp_usersettingstime','1273729630'),(219,17,'wp_usersettings','m1=o&editor=html'),(220,17,'wp_usersettingstime','1273753978'),(221,17,'wp_autosave_draft_ids','a:1:{i:-1273751007;i:681;}'),(222,18,'wp_autosave_draft_ids','a:1:{i:-1273849138;i:733;}'),(223,18,'wp_usersettings','editor=tinymce'),(224,18,'wp_usersettingstime','1273849357'),(225,6,'closedpostboxes_post','a:1:{i:0;s:11:\"postexcerpt\";}'),(226,6,'metaboxhidden_post','a:1:{i:0;s:7:\"slugdiv\";}'),(227,22,'first_name','Kamaldeep'),(228,22,'last_name','Garg'),(229,22,'nickname','Kamaldeep'),(230,22,'rich_editing','true'),(231,22,'comment_shortcuts','false'),(232,22,'admin_color','fresh'),(233,22,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(234,22,'wp_user_level','10');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL auto_increment,
  `user_login` varchar(60) NOT NULL default '',
  `user_pass` varchar(64) NOT NULL default '',
  `user_nicename` varchar(50) NOT NULL default '',
  `user_email` varchar(100) NOT NULL default '',
  `user_url` varchar(100) NOT NULL default '',
  `user_registered` datetime NOT NULL default '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL default '',
  `user_status` int(11) NOT NULL default '0',
  `display_name` varchar(250) NOT NULL default '',
  PRIMARY KEY  (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=MyISAM AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'admin','$P$BXTVBsyLN.KKfBfmBoGlv8Lxop1R4y.','admin','dmittal@IntelliGrape.com','http://www.IntelliGrape.com','2008-02-25 20:07:26','',0,'admin'),(13,'bhagwat','$P$BpBHxPujbWKiaTzesuqJWDFv5cbg9i1','bhagwat','bhagwat@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:30:54','',0,'Bhagwat Kumar'),(12,'dmittal','$P$BzdmDikGvGTB.ZKA9s.IytJ0dy91cO.','dmittal','dmittal@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:30:27','',0,'dmittal'),(4,'himanshu','$P$BU.gXdDHUCkF1YpoonqYEu0DVfJXFZ.','himanshu','himanshu@intelligrape.com','http://www.IntelliGrape.com','2009-01-02 13:46:38','',0,'himanshu'),(5,'chandan','$P$BpA2VdADoM.HjG52vGHhbyhVgAI1rQ0','chandan','chandan@intelligrape.com','http://www.IntelliGrape.com','2009-02-20 12:18:40','',0,'chandan'),(6,'imran','$P$BGsZklKii8tqABSDr9jhXSo6Lg2f9c.','imran','imran@intelligrape.com','http://www.intelligrape.com','2009-04-01 04:26:20','',0,'imran'),(7,'amit','$P$B6Doi2j7zmLq0LONNt0Xa2QGuXdY6A/','amit','amit@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:26:42','',0,'amit'),(8,'aman','$P$BxLjkQlkAuPowqbaEoa3g4qJWikBoF.','aman','aman@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:27:04','',0,'Aman Aggarwal'),(9,'gaurav','$P$BgNptx2y0e2BrZz4v4yTNg1.IuWLs71','gaurav','gaurav@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:27:33','',0,'gaurav'),(10,'vivek','$P$BzIUIMEaZfeLVtEhHbN9P4iHbYxjTU.','vivek','vivek@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:28:01','',0,'Vivek Krishna'),(11,'Uday','$P$B41115vzgjF2abvmp2EouDJgLy.ur01','uday','uday@intelligrape.com','http://www.IntelliGrape.com','2009-04-01 04:28:35','',0,'Uday'),(14,'sachin','$P$BxymGz6iVTWYmZvR9PHr5LAXip0JJp0','sachin','sachin@intelligrape.com','http://www.intelligrape.com/blog','2010-02-25 05:21:13','',0,'Sachin'),(15,'abhishek','$P$B4bXyz7oyh7HuW/611vjUcKan.PYqJ0','abhishek','abhishek@intelligrape.com','http://intelligrape.com/blog','2010-02-25 05:23:14','',0,'abhishek'),(16,'hitesh','$P$B78lzW2biRXBjO1g6j1bJoSecEKVIC0','hitesh','hitesh@intelligrape.com','http://www.intelligrape.com/blog','2010-02-25 05:24:51','',0,'hitesh'),(17,'salil','$P$BwE8rQkWld1cQf2NzQQndzhTUmOnzM1','salil','salil@intelligrape.com','http://www.intelligrape.com/blog/wp-admin/','2010-02-25 05:25:07','',0,'salil'),(18,'niraj','$P$B7hoAUmOj0Nm9MYbqBY8aJUpqNvYxV/','niraj','niraj@intelligrape.com','http://www.intelligrape.com/blog','2010-02-25 05:26:09','',0,'niraj'),(19,'vishal','$P$Bf4GY/D/uArN0lkF3fL81S8CN52Piz/','vishal','vishal@intelligrape.com','http://www.intelligrape.com/blog/wp-admin/','2010-02-25 05:26:19','C96YCF0NZgYchM1ldBrd',0,'vishal'),(20,'tarun','$P$B5Qi/W/BfqDJFKHlNYEO5qJDf8dZli/','tarun','tarun@intellligrape.com','http://www.intelligrape.com/blog','2010-02-25 05:26:55','',0,'tarun'),(21,'anshul','$P$BVvMRlVqynRxrvngCwIsQG1e4z16FA0','anshul','anshul@intelligrape.com','http://www.intelligrape.com/blog/wp-admin/','2010-02-25 05:27:17','',0,'anshul'),(22,'Kamaldeep','$P$B/wzv/Ypw8XJ3y3aGSEKuJEz4y38OF0','kamaldeep','kamaldeep@intelligrape.com','','2010-05-25 04:35:06','',0,'Kamaldeep');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2010-06-01 12:05:31
